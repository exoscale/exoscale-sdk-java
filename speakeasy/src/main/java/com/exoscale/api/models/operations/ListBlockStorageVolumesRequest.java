/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.exoscale.api.models.operations;

import com.exoscale.api.utils.SpeakeasyMetadata;
import com.exoscale.api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Optional;


public class ListBlockStorageVolumesRequest {

    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=instance-id")
    private Optional<? extends String> instanceId;

    public ListBlockStorageVolumesRequest(
            Optional<? extends String> instanceId) {
        Utils.checkNotNull(instanceId, "instanceId");
        this.instanceId = instanceId;
    }

    public Optional<? extends String> instanceId() {
        return instanceId;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public ListBlockStorageVolumesRequest withInstanceId(String instanceId) {
        Utils.checkNotNull(instanceId, "instanceId");
        this.instanceId = Optional.ofNullable(instanceId);
        return this;
    }

    public ListBlockStorageVolumesRequest withInstanceId(Optional<? extends String> instanceId) {
        Utils.checkNotNull(instanceId, "instanceId");
        this.instanceId = instanceId;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ListBlockStorageVolumesRequest other = (ListBlockStorageVolumesRequest) o;
        return 
            java.util.Objects.deepEquals(this.instanceId, other.instanceId);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            instanceId);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ListBlockStorageVolumesRequest.class,
                "instanceId", instanceId);
    }
    
    public final static class Builder {
 
        private Optional<? extends String> instanceId = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder instanceId(String instanceId) {
            Utils.checkNotNull(instanceId, "instanceId");
            this.instanceId = Optional.ofNullable(instanceId);
            return this;
        }

        public Builder instanceId(Optional<? extends String> instanceId) {
            Utils.checkNotNull(instanceId, "instanceId");
            this.instanceId = instanceId;
            return this;
        }
        
        public ListBlockStorageVolumesRequest build() {
            return new ListBlockStorageVolumesRequest(
                instanceId);
        }
    }
}

