/*
 * ExoscalePublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.exoscale.apichgva2.models;

import com.exoscale.apichgva2.DateTimeHelper;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.LocalDateTime;

/**
 * This is a model class for Event type.
 */
public class Event {
    private String requestId;
    private String zone;
    private String remoteAddr;
    private Object getParams;
    private Object bodyParams;
    private Long status;
    private String uri;
    private Long elapsedMs;
    private LocalDateTime timestamp;
    private Object pathParams;
    private String handler;
    private String message;

    /**
     * Default constructor.
     */
    public Event() {
    }

    /**
     * Initialization constructor.
     * @param  requestId  String value for requestId.
     * @param  zone  String value for zone.
     * @param  remoteAddr  String value for remoteAddr.
     * @param  getParams  Object value for getParams.
     * @param  bodyParams  Object value for bodyParams.
     * @param  status  Long value for status.
     * @param  uri  String value for uri.
     * @param  elapsedMs  Long value for elapsedMs.
     * @param  timestamp  LocalDateTime value for timestamp.
     * @param  pathParams  Object value for pathParams.
     * @param  handler  String value for handler.
     * @param  message  String value for message.
     */
    public Event(
            String requestId,
            String zone,
            String remoteAddr,
            Object getParams,
            Object bodyParams,
            Long status,
            String uri,
            Long elapsedMs,
            LocalDateTime timestamp,
            Object pathParams,
            String handler,
            String message) {
        this.requestId = requestId;
        this.zone = zone;
        this.remoteAddr = remoteAddr;
        this.getParams = getParams;
        this.bodyParams = bodyParams;
        this.status = status;
        this.uri = uri;
        this.elapsedMs = elapsedMs;
        this.timestamp = timestamp;
        this.pathParams = pathParams;
        this.handler = handler;
        this.message = message;
    }

    /**
     * Getter for RequestId.
     * Operation unique identifier
     * @return Returns the String
     */
    @JsonGetter("request-id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getRequestId() {
        return requestId;
    }

    /**
     * Setter for RequestId.
     * Operation unique identifier
     * @param requestId Value for String
     */
    @JsonSetter("request-id")
    public void setRequestId(String requestId) {
        this.requestId = requestId;
    }

    /**
     * Getter for Zone.
     * Operation targeted zone
     * @return Returns the String
     */
    @JsonGetter("zone")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getZone() {
        return zone;
    }

    /**
     * Setter for Zone.
     * Operation targeted zone
     * @param zone Value for String
     */
    @JsonSetter("zone")
    public void setZone(String zone) {
        this.zone = zone;
    }

    /**
     * Getter for RemoteAddr.
     * Client IP address
     * @return Returns the String
     */
    @JsonGetter("remote-addr")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getRemoteAddr() {
        return remoteAddr;
    }

    /**
     * Setter for RemoteAddr.
     * Client IP address
     * @param remoteAddr Value for String
     */
    @JsonSetter("remote-addr")
    public void setRemoteAddr(String remoteAddr) {
        this.remoteAddr = remoteAddr;
    }

    /**
     * Getter for GetParams.
     * Query string parameters (free form map)
     * @return Returns the Object
     */
    @JsonGetter("get-params")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Object getGetParams() {
        return getParams;
    }

    /**
     * Setter for GetParams.
     * Query string parameters (free form map)
     * @param getParams Value for Object
     */
    @JsonSetter("get-params")
    public void setGetParams(Object getParams) {
        this.getParams = getParams;
    }

    /**
     * Getter for BodyParams.
     * Body parameters (free form map)
     * @return Returns the Object
     */
    @JsonGetter("body-params")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Object getBodyParams() {
        return bodyParams;
    }

    /**
     * Setter for BodyParams.
     * Body parameters (free form map)
     * @param bodyParams Value for Object
     */
    @JsonSetter("body-params")
    public void setBodyParams(Object bodyParams) {
        this.bodyParams = bodyParams;
    }

    /**
     * Getter for Status.
     * Operation HTTP status
     * @return Returns the Long
     */
    @JsonGetter("status")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Long getStatus() {
        return status;
    }

    /**
     * Setter for Status.
     * Operation HTTP status
     * @param status Value for Long
     */
    @JsonSetter("status")
    public void setStatus(Long status) {
        this.status = status;
    }

    /**
     * Getter for Uri.
     * Operation request URI
     * @return Returns the String
     */
    @JsonGetter("uri")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getUri() {
        return uri;
    }

    /**
     * Setter for Uri.
     * Operation request URI
     * @param uri Value for String
     */
    @JsonSetter("uri")
    public void setUri(String uri) {
        this.uri = uri;
    }

    /**
     * Getter for ElapsedMs.
     * Operation processing time
     * @return Returns the Long
     */
    @JsonGetter("elapsed-ms")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Long getElapsedMs() {
        return elapsedMs;
    }

    /**
     * Setter for ElapsedMs.
     * Operation processing time
     * @param elapsedMs Value for Long
     */
    @JsonSetter("elapsed-ms")
    public void setElapsedMs(Long elapsedMs) {
        this.elapsedMs = elapsedMs;
    }

    /**
     * Getter for Timestamp.
     * Time at which the event happened, millisecond resolution
     * @return Returns the LocalDateTime
     */
    @JsonGetter("timestamp")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getTimestamp() {
        return timestamp;
    }

    /**
     * Setter for Timestamp.
     * Time at which the event happened, millisecond resolution
     * @param timestamp Value for LocalDateTime
     */
    @JsonSetter("timestamp")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setTimestamp(LocalDateTime timestamp) {
        this.timestamp = timestamp;
    }

    /**
     * Getter for PathParams.
     * URI path parameters (free form map)
     * @return Returns the Object
     */
    @JsonGetter("path-params")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Object getPathParams() {
        return pathParams;
    }

    /**
     * Setter for PathParams.
     * URI path parameters (free form map)
     * @param pathParams Value for Object
     */
    @JsonSetter("path-params")
    public void setPathParams(Object pathParams) {
        this.pathParams = pathParams;
    }

    /**
     * Getter for Handler.
     * Operation handler name
     * @return Returns the String
     */
    @JsonGetter("handler")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getHandler() {
        return handler;
    }

    /**
     * Setter for Handler.
     * Operation handler name
     * @param handler Value for String
     */
    @JsonSetter("handler")
    public void setHandler(String handler) {
        this.handler = handler;
    }

    /**
     * Getter for Message.
     * Operation message
     * @return Returns the String
     */
    @JsonGetter("message")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getMessage() {
        return message;
    }

    /**
     * Setter for Message.
     * Operation message
     * @param message Value for String
     */
    @JsonSetter("message")
    public void setMessage(String message) {
        this.message = message;
    }

    /**
     * Converts this Event into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Event [" + "requestId=" + requestId + ", zone=" + zone + ", remoteAddr="
                + remoteAddr + ", getParams=" + getParams + ", bodyParams=" + bodyParams
                + ", status=" + status + ", uri=" + uri + ", elapsedMs=" + elapsedMs
                + ", timestamp=" + timestamp + ", pathParams=" + pathParams + ", handler=" + handler
                + ", message=" + message + "]";
    }

    /**
     * Builds a new {@link Event.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Event.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .requestId(getRequestId())
                .zone(getZone())
                .remoteAddr(getRemoteAddr())
                .getParams(getGetParams())
                .bodyParams(getBodyParams())
                .status(getStatus())
                .uri(getUri())
                .elapsedMs(getElapsedMs())
                .timestamp(getTimestamp())
                .pathParams(getPathParams())
                .handler(getHandler())
                .message(getMessage());
        return builder;
    }

    /**
     * Class to build instances of {@link Event}.
     */
    public static class Builder {
        private String requestId;
        private String zone;
        private String remoteAddr;
        private Object getParams;
        private Object bodyParams;
        private Long status;
        private String uri;
        private Long elapsedMs;
        private LocalDateTime timestamp;
        private Object pathParams;
        private String handler;
        private String message;



        /**
         * Setter for requestId.
         * @param  requestId  String value for requestId.
         * @return Builder
         */
        public Builder requestId(String requestId) {
            this.requestId = requestId;
            return this;
        }

        /**
         * Setter for zone.
         * @param  zone  String value for zone.
         * @return Builder
         */
        public Builder zone(String zone) {
            this.zone = zone;
            return this;
        }

        /**
         * Setter for remoteAddr.
         * @param  remoteAddr  String value for remoteAddr.
         * @return Builder
         */
        public Builder remoteAddr(String remoteAddr) {
            this.remoteAddr = remoteAddr;
            return this;
        }

        /**
         * Setter for getParams.
         * @param  getParams  Object value for getParams.
         * @return Builder
         */
        public Builder getParams(Object getParams) {
            this.getParams = getParams;
            return this;
        }

        /**
         * Setter for bodyParams.
         * @param  bodyParams  Object value for bodyParams.
         * @return Builder
         */
        public Builder bodyParams(Object bodyParams) {
            this.bodyParams = bodyParams;
            return this;
        }

        /**
         * Setter for status.
         * @param  status  Long value for status.
         * @return Builder
         */
        public Builder status(Long status) {
            this.status = status;
            return this;
        }

        /**
         * Setter for uri.
         * @param  uri  String value for uri.
         * @return Builder
         */
        public Builder uri(String uri) {
            this.uri = uri;
            return this;
        }

        /**
         * Setter for elapsedMs.
         * @param  elapsedMs  Long value for elapsedMs.
         * @return Builder
         */
        public Builder elapsedMs(Long elapsedMs) {
            this.elapsedMs = elapsedMs;
            return this;
        }

        /**
         * Setter for timestamp.
         * @param  timestamp  LocalDateTime value for timestamp.
         * @return Builder
         */
        public Builder timestamp(LocalDateTime timestamp) {
            this.timestamp = timestamp;
            return this;
        }

        /**
         * Setter for pathParams.
         * @param  pathParams  Object value for pathParams.
         * @return Builder
         */
        public Builder pathParams(Object pathParams) {
            this.pathParams = pathParams;
            return this;
        }

        /**
         * Setter for handler.
         * @param  handler  String value for handler.
         * @return Builder
         */
        public Builder handler(String handler) {
            this.handler = handler;
            return this;
        }

        /**
         * Setter for message.
         * @param  message  String value for message.
         * @return Builder
         */
        public Builder message(String message) {
            this.message = message;
            return this;
        }

        /**
         * Builds a new {@link Event} object using the set fields.
         * @return {@link Event}
         */
        public Event build() {
            return new Event(requestId, zone, remoteAddr, getParams, bodyParams, status, uri,
                    elapsedMs, timestamp, pathParams, handler, message);
        }
    }
}
