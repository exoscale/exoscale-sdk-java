/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.exoscale.api.models.operations;

import com.exoscale.api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Optional;


public class CreateAntiAffinityGroupRequestBody {

    /**
     * Anti-affinity Group name
     */
    @JsonProperty("name")
    private String name;

    /**
     * Anti-affinity Group description
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    private Optional<? extends String> description;

    public CreateAntiAffinityGroupRequestBody(
            @JsonProperty("name") String name,
            @JsonProperty("description") Optional<? extends String> description) {
        Utils.checkNotNull(name, "name");
        Utils.checkNotNull(description, "description");
        this.name = name;
        this.description = description;
    }

    /**
     * Anti-affinity Group name
     */
    public String name() {
        return name;
    }

    /**
     * Anti-affinity Group description
     */
    public Optional<? extends String> description() {
        return description;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * Anti-affinity Group name
     */
    public CreateAntiAffinityGroupRequestBody withName(String name) {
        Utils.checkNotNull(name, "name");
        this.name = name;
        return this;
    }

    /**
     * Anti-affinity Group description
     */
    public CreateAntiAffinityGroupRequestBody withDescription(String description) {
        Utils.checkNotNull(description, "description");
        this.description = Optional.ofNullable(description);
        return this;
    }

    /**
     * Anti-affinity Group description
     */
    public CreateAntiAffinityGroupRequestBody withDescription(Optional<? extends String> description) {
        Utils.checkNotNull(description, "description");
        this.description = description;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CreateAntiAffinityGroupRequestBody other = (CreateAntiAffinityGroupRequestBody) o;
        return 
            java.util.Objects.deepEquals(this.name, other.name) &&
            java.util.Objects.deepEquals(this.description, other.description);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            name,
            description);
    }
    
    @Override
    public String toString() {
        return Utils.toString(CreateAntiAffinityGroupRequestBody.class,
                "name", name,
                "description", description);
    }
    
    public final static class Builder {
 
        private String name;
 
        private Optional<? extends String> description = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * Anti-affinity Group name
         */
        public Builder name(String name) {
            Utils.checkNotNull(name, "name");
            this.name = name;
            return this;
        }

        /**
         * Anti-affinity Group description
         */
        public Builder description(String description) {
            Utils.checkNotNull(description, "description");
            this.description = Optional.ofNullable(description);
            return this;
        }

        /**
         * Anti-affinity Group description
         */
        public Builder description(Optional<? extends String> description) {
            Utils.checkNotNull(description, "description");
            this.description = description;
            return this;
        }
        
        public CreateAntiAffinityGroupRequestBody build() {
            return new CreateAntiAffinityGroupRequestBody(
                name,
                description);
        }
    }
}

