/*
 * ExoscalePublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.exoscale.apichgva2.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for GenericOAuthIntegration type.
 */
public class GenericOAuthIntegration {
    private List<String> scopes;
    private List<String> allowedDomains;
    private List<String> allowedOrganizations;
    private String tokenUrl;
    private String name;
    private String authUrl;
    private String apiUrl;
    private Boolean autoLogin;
    private String clientId;
    private String clientSecret;
    private Boolean allowSignUp;

    /**
     * Default constructor.
     */
    public GenericOAuthIntegration() {
    }

    /**
     * Initialization constructor.
     * @param  tokenUrl  String value for tokenUrl.
     * @param  authUrl  String value for authUrl.
     * @param  apiUrl  String value for apiUrl.
     * @param  clientId  String value for clientId.
     * @param  clientSecret  String value for clientSecret.
     * @param  scopes  List of String value for scopes.
     * @param  allowedDomains  List of String value for allowedDomains.
     * @param  allowedOrganizations  List of String value for allowedOrganizations.
     * @param  name  String value for name.
     * @param  autoLogin  Boolean value for autoLogin.
     * @param  allowSignUp  Boolean value for allowSignUp.
     */
    public GenericOAuthIntegration(
            String tokenUrl,
            String authUrl,
            String apiUrl,
            String clientId,
            String clientSecret,
            List<String> scopes,
            List<String> allowedDomains,
            List<String> allowedOrganizations,
            String name,
            Boolean autoLogin,
            Boolean allowSignUp) {
        this.scopes = scopes;
        this.allowedDomains = allowedDomains;
        this.allowedOrganizations = allowedOrganizations;
        this.tokenUrl = tokenUrl;
        this.name = name;
        this.authUrl = authUrl;
        this.apiUrl = apiUrl;
        this.autoLogin = autoLogin;
        this.clientId = clientId;
        this.clientSecret = clientSecret;
        this.allowSignUp = allowSignUp;
    }

    /**
     * Getter for Scopes.
     * @return Returns the List of String
     */
    @JsonGetter("scopes")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<String> getScopes() {
        return scopes;
    }

    /**
     * Setter for Scopes.
     * @param scopes Value for List of String
     */
    @JsonSetter("scopes")
    public void setScopes(List<String> scopes) {
        this.scopes = scopes;
    }

    /**
     * Getter for AllowedDomains.
     * @return Returns the List of String
     */
    @JsonGetter("allowed_domains")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<String> getAllowedDomains() {
        return allowedDomains;
    }

    /**
     * Setter for AllowedDomains.
     * @param allowedDomains Value for List of String
     */
    @JsonSetter("allowed_domains")
    public void setAllowedDomains(List<String> allowedDomains) {
        this.allowedDomains = allowedDomains;
    }

    /**
     * Getter for AllowedOrganizations.
     * @return Returns the List of String
     */
    @JsonGetter("allowed_organizations")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<String> getAllowedOrganizations() {
        return allowedOrganizations;
    }

    /**
     * Setter for AllowedOrganizations.
     * @param allowedOrganizations Value for List of String
     */
    @JsonSetter("allowed_organizations")
    public void setAllowedOrganizations(List<String> allowedOrganizations) {
        this.allowedOrganizations = allowedOrganizations;
    }

    /**
     * Getter for TokenUrl.
     * @return Returns the String
     */
    @JsonGetter("token_url")
    public String getTokenUrl() {
        return tokenUrl;
    }

    /**
     * Setter for TokenUrl.
     * @param tokenUrl Value for String
     */
    @JsonSetter("token_url")
    public void setTokenUrl(String tokenUrl) {
        this.tokenUrl = tokenUrl;
    }

    /**
     * Getter for Name.
     * @return Returns the String
     */
    @JsonGetter("name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for AuthUrl.
     * @return Returns the String
     */
    @JsonGetter("auth_url")
    public String getAuthUrl() {
        return authUrl;
    }

    /**
     * Setter for AuthUrl.
     * @param authUrl Value for String
     */
    @JsonSetter("auth_url")
    public void setAuthUrl(String authUrl) {
        this.authUrl = authUrl;
    }

    /**
     * Getter for ApiUrl.
     * @return Returns the String
     */
    @JsonGetter("api_url")
    public String getApiUrl() {
        return apiUrl;
    }

    /**
     * Setter for ApiUrl.
     * @param apiUrl Value for String
     */
    @JsonSetter("api_url")
    public void setApiUrl(String apiUrl) {
        this.apiUrl = apiUrl;
    }

    /**
     * Getter for AutoLogin.
     * @return Returns the Boolean
     */
    @JsonGetter("auto_login")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getAutoLogin() {
        return autoLogin;
    }

    /**
     * Setter for AutoLogin.
     * @param autoLogin Value for Boolean
     */
    @JsonSetter("auto_login")
    public void setAutoLogin(Boolean autoLogin) {
        this.autoLogin = autoLogin;
    }

    /**
     * Getter for ClientId.
     * @return Returns the String
     */
    @JsonGetter("client_id")
    public String getClientId() {
        return clientId;
    }

    /**
     * Setter for ClientId.
     * @param clientId Value for String
     */
    @JsonSetter("client_id")
    public void setClientId(String clientId) {
        this.clientId = clientId;
    }

    /**
     * Getter for ClientSecret.
     * @return Returns the String
     */
    @JsonGetter("client_secret")
    public String getClientSecret() {
        return clientSecret;
    }

    /**
     * Setter for ClientSecret.
     * @param clientSecret Value for String
     */
    @JsonSetter("client_secret")
    public void setClientSecret(String clientSecret) {
        this.clientSecret = clientSecret;
    }

    /**
     * Getter for AllowSignUp.
     * @return Returns the Boolean
     */
    @JsonGetter("allow_sign_up")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getAllowSignUp() {
        return allowSignUp;
    }

    /**
     * Setter for AllowSignUp.
     * @param allowSignUp Value for Boolean
     */
    @JsonSetter("allow_sign_up")
    public void setAllowSignUp(Boolean allowSignUp) {
        this.allowSignUp = allowSignUp;
    }

    /**
     * Converts this GenericOAuthIntegration into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "GenericOAuthIntegration [" + "tokenUrl=" + tokenUrl + ", authUrl=" + authUrl
                + ", apiUrl=" + apiUrl + ", clientId=" + clientId + ", clientSecret=" + clientSecret
                + ", scopes=" + scopes + ", allowedDomains=" + allowedDomains
                + ", allowedOrganizations=" + allowedOrganizations + ", name=" + name
                + ", autoLogin=" + autoLogin + ", allowSignUp=" + allowSignUp + "]";
    }

    /**
     * Builds a new {@link GenericOAuthIntegration.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link GenericOAuthIntegration.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(tokenUrl, authUrl, apiUrl, clientId, clientSecret)
                .scopes(getScopes())
                .allowedDomains(getAllowedDomains())
                .allowedOrganizations(getAllowedOrganizations())
                .name(getName())
                .autoLogin(getAutoLogin())
                .allowSignUp(getAllowSignUp());
        return builder;
    }

    /**
     * Class to build instances of {@link GenericOAuthIntegration}.
     */
    public static class Builder {
        private String tokenUrl;
        private String authUrl;
        private String apiUrl;
        private String clientId;
        private String clientSecret;
        private List<String> scopes;
        private List<String> allowedDomains;
        private List<String> allowedOrganizations;
        private String name;
        private Boolean autoLogin;
        private Boolean allowSignUp;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  tokenUrl  String value for tokenUrl.
         * @param  authUrl  String value for authUrl.
         * @param  apiUrl  String value for apiUrl.
         * @param  clientId  String value for clientId.
         * @param  clientSecret  String value for clientSecret.
         */
        public Builder(String tokenUrl, String authUrl, String apiUrl, String clientId,
                String clientSecret) {
            this.tokenUrl = tokenUrl;
            this.authUrl = authUrl;
            this.apiUrl = apiUrl;
            this.clientId = clientId;
            this.clientSecret = clientSecret;
        }

        /**
         * Setter for tokenUrl.
         * @param  tokenUrl  String value for tokenUrl.
         * @return Builder
         */
        public Builder tokenUrl(String tokenUrl) {
            this.tokenUrl = tokenUrl;
            return this;
        }

        /**
         * Setter for authUrl.
         * @param  authUrl  String value for authUrl.
         * @return Builder
         */
        public Builder authUrl(String authUrl) {
            this.authUrl = authUrl;
            return this;
        }

        /**
         * Setter for apiUrl.
         * @param  apiUrl  String value for apiUrl.
         * @return Builder
         */
        public Builder apiUrl(String apiUrl) {
            this.apiUrl = apiUrl;
            return this;
        }

        /**
         * Setter for clientId.
         * @param  clientId  String value for clientId.
         * @return Builder
         */
        public Builder clientId(String clientId) {
            this.clientId = clientId;
            return this;
        }

        /**
         * Setter for clientSecret.
         * @param  clientSecret  String value for clientSecret.
         * @return Builder
         */
        public Builder clientSecret(String clientSecret) {
            this.clientSecret = clientSecret;
            return this;
        }

        /**
         * Setter for scopes.
         * @param  scopes  List of String value for scopes.
         * @return Builder
         */
        public Builder scopes(List<String> scopes) {
            this.scopes = scopes;
            return this;
        }

        /**
         * Setter for allowedDomains.
         * @param  allowedDomains  List of String value for allowedDomains.
         * @return Builder
         */
        public Builder allowedDomains(List<String> allowedDomains) {
            this.allowedDomains = allowedDomains;
            return this;
        }

        /**
         * Setter for allowedOrganizations.
         * @param  allowedOrganizations  List of String value for allowedOrganizations.
         * @return Builder
         */
        public Builder allowedOrganizations(List<String> allowedOrganizations) {
            this.allowedOrganizations = allowedOrganizations;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for autoLogin.
         * @param  autoLogin  Boolean value for autoLogin.
         * @return Builder
         */
        public Builder autoLogin(Boolean autoLogin) {
            this.autoLogin = autoLogin;
            return this;
        }

        /**
         * Setter for allowSignUp.
         * @param  allowSignUp  Boolean value for allowSignUp.
         * @return Builder
         */
        public Builder allowSignUp(Boolean allowSignUp) {
            this.allowSignUp = allowSignUp;
            return this;
        }

        /**
         * Builds a new {@link GenericOAuthIntegration} object using the set fields.
         * @return {@link GenericOAuthIntegration}
         */
        public GenericOAuthIntegration build() {
            return new GenericOAuthIntegration(tokenUrl, authUrl, apiUrl, clientId, clientSecret,
                    scopes, allowedDomains, allowedOrganizations, name, autoLogin, allowSignUp);
        }
    }
}
