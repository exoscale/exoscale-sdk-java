/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.exoscale.api.models.components;

import com.exoscale.api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Optional;


public class GoogleAuthIntegration {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allow_sign_up")
    private Optional<? extends Boolean> allowSignUp;

    @JsonProperty("client_id")
    private String clientId;

    @JsonProperty("client_secret")
    private String clientSecret;

    @JsonProperty("allowed_domains")
    private java.util.List<String> allowedDomains;

    public GoogleAuthIntegration(
            @JsonProperty("allow_sign_up") Optional<? extends Boolean> allowSignUp,
            @JsonProperty("client_id") String clientId,
            @JsonProperty("client_secret") String clientSecret,
            @JsonProperty("allowed_domains") java.util.List<String> allowedDomains) {
        Utils.checkNotNull(allowSignUp, "allowSignUp");
        Utils.checkNotNull(clientId, "clientId");
        Utils.checkNotNull(clientSecret, "clientSecret");
        Utils.checkNotNull(allowedDomains, "allowedDomains");
        this.allowSignUp = allowSignUp;
        this.clientId = clientId;
        this.clientSecret = clientSecret;
        this.allowedDomains = allowedDomains;
    }

    public Optional<? extends Boolean> allowSignUp() {
        return allowSignUp;
    }

    public String clientId() {
        return clientId;
    }

    public String clientSecret() {
        return clientSecret;
    }

    public java.util.List<String> allowedDomains() {
        return allowedDomains;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public GoogleAuthIntegration withAllowSignUp(boolean allowSignUp) {
        Utils.checkNotNull(allowSignUp, "allowSignUp");
        this.allowSignUp = Optional.ofNullable(allowSignUp);
        return this;
    }

    public GoogleAuthIntegration withAllowSignUp(Optional<? extends Boolean> allowSignUp) {
        Utils.checkNotNull(allowSignUp, "allowSignUp");
        this.allowSignUp = allowSignUp;
        return this;
    }

    public GoogleAuthIntegration withClientId(String clientId) {
        Utils.checkNotNull(clientId, "clientId");
        this.clientId = clientId;
        return this;
    }

    public GoogleAuthIntegration withClientSecret(String clientSecret) {
        Utils.checkNotNull(clientSecret, "clientSecret");
        this.clientSecret = clientSecret;
        return this;
    }

    public GoogleAuthIntegration withAllowedDomains(java.util.List<String> allowedDomains) {
        Utils.checkNotNull(allowedDomains, "allowedDomains");
        this.allowedDomains = allowedDomains;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GoogleAuthIntegration other = (GoogleAuthIntegration) o;
        return 
            java.util.Objects.deepEquals(this.allowSignUp, other.allowSignUp) &&
            java.util.Objects.deepEquals(this.clientId, other.clientId) &&
            java.util.Objects.deepEquals(this.clientSecret, other.clientSecret) &&
            java.util.Objects.deepEquals(this.allowedDomains, other.allowedDomains);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            allowSignUp,
            clientId,
            clientSecret,
            allowedDomains);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GoogleAuthIntegration.class,
                "allowSignUp", allowSignUp,
                "clientId", clientId,
                "clientSecret", clientSecret,
                "allowedDomains", allowedDomains);
    }
    
    public final static class Builder {
 
        private Optional<? extends Boolean> allowSignUp = Optional.empty();
 
        private String clientId;
 
        private String clientSecret;
 
        private java.util.List<String> allowedDomains;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder allowSignUp(boolean allowSignUp) {
            Utils.checkNotNull(allowSignUp, "allowSignUp");
            this.allowSignUp = Optional.ofNullable(allowSignUp);
            return this;
        }

        public Builder allowSignUp(Optional<? extends Boolean> allowSignUp) {
            Utils.checkNotNull(allowSignUp, "allowSignUp");
            this.allowSignUp = allowSignUp;
            return this;
        }

        public Builder clientId(String clientId) {
            Utils.checkNotNull(clientId, "clientId");
            this.clientId = clientId;
            return this;
        }

        public Builder clientSecret(String clientSecret) {
            Utils.checkNotNull(clientSecret, "clientSecret");
            this.clientSecret = clientSecret;
            return this;
        }

        public Builder allowedDomains(java.util.List<String> allowedDomains) {
            Utils.checkNotNull(allowedDomains, "allowedDomains");
            this.allowedDomains = allowedDomains;
            return this;
        }
        
        public GoogleAuthIntegration build() {
            return new GoogleAuthIntegration(
                allowSignUp,
                clientId,
                clientSecret,
                allowedDomains);
        }
    }
}

