/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.exoscale.api.models.operations;

import com.exoscale.api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Optional;


public class CreateDbaasIntegrationRequestBody {

    @JsonProperty("integration-type")
    private com.exoscale.api.models.components.EnumIntegrationTypes integrationType;

    @JsonProperty("source-service")
    private String sourceService;

    @JsonProperty("dest-service")
    private String destService;

    /**
     * Integration settings
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("settings")
    private Optional<? extends CreateDbaasIntegrationSettings> settings;

    public CreateDbaasIntegrationRequestBody(
            @JsonProperty("integration-type") com.exoscale.api.models.components.EnumIntegrationTypes integrationType,
            @JsonProperty("source-service") String sourceService,
            @JsonProperty("dest-service") String destService,
            @JsonProperty("settings") Optional<? extends CreateDbaasIntegrationSettings> settings) {
        Utils.checkNotNull(integrationType, "integrationType");
        Utils.checkNotNull(sourceService, "sourceService");
        Utils.checkNotNull(destService, "destService");
        Utils.checkNotNull(settings, "settings");
        this.integrationType = integrationType;
        this.sourceService = sourceService;
        this.destService = destService;
        this.settings = settings;
    }

    public com.exoscale.api.models.components.EnumIntegrationTypes integrationType() {
        return integrationType;
    }

    public String sourceService() {
        return sourceService;
    }

    public String destService() {
        return destService;
    }

    /**
     * Integration settings
     */
    public Optional<? extends CreateDbaasIntegrationSettings> settings() {
        return settings;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public CreateDbaasIntegrationRequestBody withIntegrationType(com.exoscale.api.models.components.EnumIntegrationTypes integrationType) {
        Utils.checkNotNull(integrationType, "integrationType");
        this.integrationType = integrationType;
        return this;
    }

    public CreateDbaasIntegrationRequestBody withSourceService(String sourceService) {
        Utils.checkNotNull(sourceService, "sourceService");
        this.sourceService = sourceService;
        return this;
    }

    public CreateDbaasIntegrationRequestBody withDestService(String destService) {
        Utils.checkNotNull(destService, "destService");
        this.destService = destService;
        return this;
    }

    /**
     * Integration settings
     */
    public CreateDbaasIntegrationRequestBody withSettings(CreateDbaasIntegrationSettings settings) {
        Utils.checkNotNull(settings, "settings");
        this.settings = Optional.ofNullable(settings);
        return this;
    }

    /**
     * Integration settings
     */
    public CreateDbaasIntegrationRequestBody withSettings(Optional<? extends CreateDbaasIntegrationSettings> settings) {
        Utils.checkNotNull(settings, "settings");
        this.settings = settings;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CreateDbaasIntegrationRequestBody other = (CreateDbaasIntegrationRequestBody) o;
        return 
            java.util.Objects.deepEquals(this.integrationType, other.integrationType) &&
            java.util.Objects.deepEquals(this.sourceService, other.sourceService) &&
            java.util.Objects.deepEquals(this.destService, other.destService) &&
            java.util.Objects.deepEquals(this.settings, other.settings);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            integrationType,
            sourceService,
            destService,
            settings);
    }
    
    @Override
    public String toString() {
        return Utils.toString(CreateDbaasIntegrationRequestBody.class,
                "integrationType", integrationType,
                "sourceService", sourceService,
                "destService", destService,
                "settings", settings);
    }
    
    public final static class Builder {
 
        private com.exoscale.api.models.components.EnumIntegrationTypes integrationType;
 
        private String sourceService;
 
        private String destService;
 
        private Optional<? extends CreateDbaasIntegrationSettings> settings = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder integrationType(com.exoscale.api.models.components.EnumIntegrationTypes integrationType) {
            Utils.checkNotNull(integrationType, "integrationType");
            this.integrationType = integrationType;
            return this;
        }

        public Builder sourceService(String sourceService) {
            Utils.checkNotNull(sourceService, "sourceService");
            this.sourceService = sourceService;
            return this;
        }

        public Builder destService(String destService) {
            Utils.checkNotNull(destService, "destService");
            this.destService = destService;
            return this;
        }

        /**
         * Integration settings
         */
        public Builder settings(CreateDbaasIntegrationSettings settings) {
            Utils.checkNotNull(settings, "settings");
            this.settings = Optional.ofNullable(settings);
            return this;
        }

        /**
         * Integration settings
         */
        public Builder settings(Optional<? extends CreateDbaasIntegrationSettings> settings) {
            Utils.checkNotNull(settings, "settings");
            this.settings = settings;
            return this;
        }
        
        public CreateDbaasIntegrationRequestBody build() {
            return new CreateDbaasIntegrationRequestBody(
                integrationType,
                sourceService,
                destService,
                settings);
        }
    }
}

