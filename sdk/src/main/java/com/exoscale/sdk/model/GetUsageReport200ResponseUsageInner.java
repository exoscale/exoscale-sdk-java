/*
 * Exoscale Public API
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@exoscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.exoscale.sdk.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Usage
 */
@JsonPropertyOrder({
  GetUsageReport200ResponseUsageInner.JSON_PROPERTY_FROM,
  GetUsageReport200ResponseUsageInner.JSON_PROPERTY_TO,
  GetUsageReport200ResponseUsageInner.JSON_PROPERTY_PRODUCT,
  GetUsageReport200ResponseUsageInner.JSON_PROPERTY_VARIABLE,
  GetUsageReport200ResponseUsageInner.JSON_PROPERTY_DESCRIPTION,
  GetUsageReport200ResponseUsageInner.JSON_PROPERTY_QUANTITY,
  GetUsageReport200ResponseUsageInner.JSON_PROPERTY_UNIT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.4.0")
public class GetUsageReport200ResponseUsageInner {
  public static final String JSON_PROPERTY_FROM = "from";
  private String from;

  public static final String JSON_PROPERTY_TO = "to";
  private String to;

  public static final String JSON_PROPERTY_PRODUCT = "product";
  private String product;

  public static final String JSON_PROPERTY_VARIABLE = "variable";
  private String variable;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_QUANTITY = "quantity";
  private String quantity;

  public static final String JSON_PROPERTY_UNIT = "unit";
  private String unit;

  public GetUsageReport200ResponseUsageInner() { 
  }

  @JsonCreator
  public GetUsageReport200ResponseUsageInner(
    @JsonProperty(JSON_PROPERTY_FROM) String from, 
    @JsonProperty(JSON_PROPERTY_TO) String to, 
    @JsonProperty(JSON_PROPERTY_PRODUCT) String product, 
    @JsonProperty(JSON_PROPERTY_VARIABLE) String variable, 
    @JsonProperty(JSON_PROPERTY_DESCRIPTION) String description, 
    @JsonProperty(JSON_PROPERTY_QUANTITY) String quantity, 
    @JsonProperty(JSON_PROPERTY_UNIT) String unit
  ) {
  this();
    this.from = from;
    this.to = to;
    this.product = product;
    this.variable = variable;
    this.description = description;
    this.quantity = quantity;
    this.unit = unit;
  }

   /**
   * Period Start Date
   * @return from
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FROM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFrom() {
    return from;
  }




   /**
   * Period End Date
   * @return to
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTo() {
    return to;
  }




   /**
   * Product
   * @return product
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRODUCT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProduct() {
    return product;
  }




   /**
   * Variable
   * @return variable
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VARIABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVariable() {
    return variable;
  }




   /**
   * Description
   * @return description
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }




   /**
   * Quantity
   * @return quantity
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getQuantity() {
    return quantity;
  }




   /**
   * Unit
   * @return unit
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UNIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUnit() {
    return unit;
  }




  /**
   * Return true if this get_usage_report_200_response_usage_inner object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetUsageReport200ResponseUsageInner getUsageReport200ResponseUsageInner = (GetUsageReport200ResponseUsageInner) o;
    return Objects.equals(this.from, getUsageReport200ResponseUsageInner.from) &&
        Objects.equals(this.to, getUsageReport200ResponseUsageInner.to) &&
        Objects.equals(this.product, getUsageReport200ResponseUsageInner.product) &&
        Objects.equals(this.variable, getUsageReport200ResponseUsageInner.variable) &&
        Objects.equals(this.description, getUsageReport200ResponseUsageInner.description) &&
        Objects.equals(this.quantity, getUsageReport200ResponseUsageInner.quantity) &&
        Objects.equals(this.unit, getUsageReport200ResponseUsageInner.unit);
  }

  @Override
  public int hashCode() {
    return Objects.hash(from, to, product, variable, description, quantity, unit);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetUsageReport200ResponseUsageInner {\n");
    sb.append("    from: ").append(toIndentedString(from)).append("\n");
    sb.append("    to: ").append(toIndentedString(to)).append("\n");
    sb.append("    product: ").append(toIndentedString(product)).append("\n");
    sb.append("    variable: ").append(toIndentedString(variable)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    unit: ").append(toIndentedString(unit)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `from` to the URL query string
    if (getFrom() != null) {
      joiner.add(String.format("%sfrom%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getFrom()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `to` to the URL query string
    if (getTo() != null) {
      joiner.add(String.format("%sto%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getTo()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `product` to the URL query string
    if (getProduct() != null) {
      joiner.add(String.format("%sproduct%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getProduct()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `variable` to the URL query string
    if (getVariable() != null) {
      joiner.add(String.format("%svariable%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getVariable()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `description` to the URL query string
    if (getDescription() != null) {
      joiner.add(String.format("%sdescription%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getDescription()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `quantity` to the URL query string
    if (getQuantity() != null) {
      joiner.add(String.format("%squantity%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getQuantity()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `unit` to the URL query string
    if (getUnit() != null) {
      joiner.add(String.format("%sunit%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getUnit()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

