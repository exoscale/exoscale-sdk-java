/*
 * ExoscalePublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.exoscale.apichgva2.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for TemplateRequest2 type.
 */
public class TemplateRequest2 {
    private String maintainer;
    private String description;
    private boolean sshKeyEnabled;
    private String name;
    private String defaultUser;
    private Long size;
    private boolean passwordEnabled;
    private String build;
    private String checksum;
    private BootModeEnum bootMode;
    private String url;
    private String version;

    /**
     * Default constructor.
     */
    public TemplateRequest2() {
    }

    /**
     * Initialization constructor.
     * @param  sshKeyEnabled  boolean value for sshKeyEnabled.
     * @param  name  String value for name.
     * @param  passwordEnabled  boolean value for passwordEnabled.
     * @param  checksum  String value for checksum.
     * @param  url  String value for url.
     * @param  maintainer  String value for maintainer.
     * @param  description  String value for description.
     * @param  defaultUser  String value for defaultUser.
     * @param  size  Long value for size.
     * @param  build  String value for build.
     * @param  bootMode  BootModeEnum value for bootMode.
     * @param  version  String value for version.
     */
    public TemplateRequest2(
            boolean sshKeyEnabled,
            String name,
            boolean passwordEnabled,
            String checksum,
            String url,
            String maintainer,
            String description,
            String defaultUser,
            Long size,
            String build,
            BootModeEnum bootMode,
            String version) {
        this.maintainer = maintainer;
        this.description = description;
        this.sshKeyEnabled = sshKeyEnabled;
        this.name = name;
        this.defaultUser = defaultUser;
        this.size = size;
        this.passwordEnabled = passwordEnabled;
        this.build = build;
        this.checksum = checksum;
        this.bootMode = bootMode;
        this.url = url;
        this.version = version;
    }

    /**
     * Getter for Maintainer.
     * Template maintainer
     * @return Returns the String
     */
    @JsonGetter("maintainer")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getMaintainer() {
        return maintainer;
    }

    /**
     * Setter for Maintainer.
     * Template maintainer
     * @param maintainer Value for String
     */
    @JsonSetter("maintainer")
    public void setMaintainer(String maintainer) {
        this.maintainer = maintainer;
    }

    /**
     * Getter for Description.
     * Template description
     * @return Returns the String
     */
    @JsonGetter("description")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDescription() {
        return description;
    }

    /**
     * Setter for Description.
     * Template description
     * @param description Value for String
     */
    @JsonSetter("description")
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Getter for SshKeyEnabled.
     * Enable SSH key-based login
     * @return Returns the boolean
     */
    @JsonGetter("ssh-key-enabled")
    public boolean getSshKeyEnabled() {
        return sshKeyEnabled;
    }

    /**
     * Setter for SshKeyEnabled.
     * Enable SSH key-based login
     * @param sshKeyEnabled Value for boolean
     */
    @JsonSetter("ssh-key-enabled")
    public void setSshKeyEnabled(boolean sshKeyEnabled) {
        this.sshKeyEnabled = sshKeyEnabled;
    }

    /**
     * Getter for Name.
     * Template name
     * @return Returns the String
     */
    @JsonGetter("name")
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * Template name
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for DefaultUser.
     * Template default user
     * @return Returns the String
     */
    @JsonGetter("default-user")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDefaultUser() {
        return defaultUser;
    }

    /**
     * Setter for DefaultUser.
     * Template default user
     * @param defaultUser Value for String
     */
    @JsonSetter("default-user")
    public void setDefaultUser(String defaultUser) {
        this.defaultUser = defaultUser;
    }

    /**
     * Getter for Size.
     * Template size
     * @return Returns the Long
     */
    @JsonGetter("size")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Long getSize() {
        return size;
    }

    /**
     * Setter for Size.
     * Template size
     * @param size Value for Long
     */
    @JsonSetter("size")
    public void setSize(Long size) {
        this.size = size;
    }

    /**
     * Getter for PasswordEnabled.
     * Enable password-based login
     * @return Returns the boolean
     */
    @JsonGetter("password-enabled")
    public boolean getPasswordEnabled() {
        return passwordEnabled;
    }

    /**
     * Setter for PasswordEnabled.
     * Enable password-based login
     * @param passwordEnabled Value for boolean
     */
    @JsonSetter("password-enabled")
    public void setPasswordEnabled(boolean passwordEnabled) {
        this.passwordEnabled = passwordEnabled;
    }

    /**
     * Getter for Build.
     * Template build
     * @return Returns the String
     */
    @JsonGetter("build")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getBuild() {
        return build;
    }

    /**
     * Setter for Build.
     * Template build
     * @param build Value for String
     */
    @JsonSetter("build")
    public void setBuild(String build) {
        this.build = build;
    }

    /**
     * Getter for Checksum.
     * Template MD5 checksum
     * @return Returns the String
     */
    @JsonGetter("checksum")
    public String getChecksum() {
        return checksum;
    }

    /**
     * Setter for Checksum.
     * Template MD5 checksum
     * @param checksum Value for String
     */
    @JsonSetter("checksum")
    public void setChecksum(String checksum) {
        this.checksum = checksum;
    }

    /**
     * Getter for BootMode.
     * Boot mode (default: legacy)
     * @return Returns the BootModeEnum
     */
    @JsonGetter("boot-mode")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public BootModeEnum getBootMode() {
        return bootMode;
    }

    /**
     * Setter for BootMode.
     * Boot mode (default: legacy)
     * @param bootMode Value for BootModeEnum
     */
    @JsonSetter("boot-mode")
    public void setBootMode(BootModeEnum bootMode) {
        this.bootMode = bootMode;
    }

    /**
     * Getter for Url.
     * Template source URL
     * @return Returns the String
     */
    @JsonGetter("url")
    public String getUrl() {
        return url;
    }

    /**
     * Setter for Url.
     * Template source URL
     * @param url Value for String
     */
    @JsonSetter("url")
    public void setUrl(String url) {
        this.url = url;
    }

    /**
     * Getter for Version.
     * Template version
     * @return Returns the String
     */
    @JsonGetter("version")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getVersion() {
        return version;
    }

    /**
     * Setter for Version.
     * Template version
     * @param version Value for String
     */
    @JsonSetter("version")
    public void setVersion(String version) {
        this.version = version;
    }

    /**
     * Converts this TemplateRequest2 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "TemplateRequest2 [" + "sshKeyEnabled=" + sshKeyEnabled + ", name=" + name
                + ", passwordEnabled=" + passwordEnabled + ", checksum=" + checksum + ", url=" + url
                + ", maintainer=" + maintainer + ", description=" + description + ", defaultUser="
                + defaultUser + ", size=" + size + ", build=" + build + ", bootMode=" + bootMode
                + ", version=" + version + "]";
    }

    /**
     * Builds a new {@link TemplateRequest2.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link TemplateRequest2.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(sshKeyEnabled, name, passwordEnabled, checksum, url)
                .maintainer(getMaintainer())
                .description(getDescription())
                .defaultUser(getDefaultUser())
                .size(getSize())
                .build(getBuild())
                .bootMode(getBootMode())
                .version(getVersion());
        return builder;
    }

    /**
     * Class to build instances of {@link TemplateRequest2}.
     */
    public static class Builder {
        private boolean sshKeyEnabled;
        private String name;
        private boolean passwordEnabled;
        private String checksum;
        private String url;
        private String maintainer;
        private String description;
        private String defaultUser;
        private Long size;
        private String build;
        private BootModeEnum bootMode;
        private String version;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  sshKeyEnabled  boolean value for sshKeyEnabled.
         * @param  name  String value for name.
         * @param  passwordEnabled  boolean value for passwordEnabled.
         * @param  checksum  String value for checksum.
         * @param  url  String value for url.
         */
        public Builder(boolean sshKeyEnabled, String name, boolean passwordEnabled, String checksum,
                String url) {
            this.sshKeyEnabled = sshKeyEnabled;
            this.name = name;
            this.passwordEnabled = passwordEnabled;
            this.checksum = checksum;
            this.url = url;
        }

        /**
         * Setter for sshKeyEnabled.
         * @param  sshKeyEnabled  boolean value for sshKeyEnabled.
         * @return Builder
         */
        public Builder sshKeyEnabled(boolean sshKeyEnabled) {
            this.sshKeyEnabled = sshKeyEnabled;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for passwordEnabled.
         * @param  passwordEnabled  boolean value for passwordEnabled.
         * @return Builder
         */
        public Builder passwordEnabled(boolean passwordEnabled) {
            this.passwordEnabled = passwordEnabled;
            return this;
        }

        /**
         * Setter for checksum.
         * @param  checksum  String value for checksum.
         * @return Builder
         */
        public Builder checksum(String checksum) {
            this.checksum = checksum;
            return this;
        }

        /**
         * Setter for url.
         * @param  url  String value for url.
         * @return Builder
         */
        public Builder url(String url) {
            this.url = url;
            return this;
        }

        /**
         * Setter for maintainer.
         * @param  maintainer  String value for maintainer.
         * @return Builder
         */
        public Builder maintainer(String maintainer) {
            this.maintainer = maintainer;
            return this;
        }

        /**
         * Setter for description.
         * @param  description  String value for description.
         * @return Builder
         */
        public Builder description(String description) {
            this.description = description;
            return this;
        }

        /**
         * Setter for defaultUser.
         * @param  defaultUser  String value for defaultUser.
         * @return Builder
         */
        public Builder defaultUser(String defaultUser) {
            this.defaultUser = defaultUser;
            return this;
        }

        /**
         * Setter for size.
         * @param  size  Long value for size.
         * @return Builder
         */
        public Builder size(Long size) {
            this.size = size;
            return this;
        }

        /**
         * Setter for build.
         * @param  build  String value for build.
         * @return Builder
         */
        public Builder build(String build) {
            this.build = build;
            return this;
        }

        /**
         * Setter for bootMode.
         * @param  bootMode  BootModeEnum value for bootMode.
         * @return Builder
         */
        public Builder bootMode(BootModeEnum bootMode) {
            this.bootMode = bootMode;
            return this;
        }

        /**
         * Setter for version.
         * @param  version  String value for version.
         * @return Builder
         */
        public Builder version(String version) {
            this.version = version;
            return this;
        }

        /**
         * Builds a new {@link TemplateRequest2} object using the set fields.
         * @return {@link TemplateRequest2}
         */
        public TemplateRequest2 build() {
            return new TemplateRequest2(sshKeyEnabled, name, passwordEnabled, checksum, url,
                    maintainer, description, defaultUser, size, build, bootMode, version);
        }
    }
}
