/*
 * Exoscale Public API
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@exoscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.exoscale.api;

import com.exoscale.model.CreateInstancePoolRequest;
import com.exoscale.model.EvictInstancePoolMembersRequest;
import com.exoscale.model.InstancePool;
import com.exoscale.model.ListInstancePools200Response;
import com.exoscale.model.Operation;
import com.exoscale.model.ScaleInstancePoolRequest;
import java.util.UUID;
import com.exoscale.model.UpdateInstancePoolRequest;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

/**
 * API tests for InstancePoolApi
 */
@Ignore
public class InstancePoolApiTest {

    private final InstancePoolApi api = new InstancePoolApi();

    
    /**
     * Create an Instance Pool
     *
     * 
     */
    @Test
    public void createInstancePoolTest()  {
        CreateInstancePoolRequest createInstancePoolRequest = null;
        Operation response = api.createInstancePool(createInstancePoolRequest).block();

        // TODO: test validations
    }
    
    /**
     * Delete an Instance Pool
     *
     * 
     */
    @Test
    public void deleteInstancePoolTest()  {
        UUID id = null;
        Operation response = api.deleteInstancePool(id).block();

        // TODO: test validations
    }
    
    /**
     * Evict Instance Pool members
     *
     * This operation evicts the specified Compute instances member from the Instance Pool, shrinking it to &#x60;&amp;lt;current pool size&amp;gt; - &amp;lt;# evicted members&amp;gt;&#x60;.
     */
    @Test
    public void evictInstancePoolMembersTest()  {
        UUID id = null;
        EvictInstancePoolMembersRequest evictInstancePoolMembersRequest = null;
        Operation response = api.evictInstancePoolMembers(id, evictInstancePoolMembersRequest).block();

        // TODO: test validations
    }
    
    /**
     * Retrieve Instance Pool details
     *
     * 
     */
    @Test
    public void getInstancePoolTest()  {
        UUID id = null;
        InstancePool response = api.getInstancePool(id).block();

        // TODO: test validations
    }
    
    /**
     * List Instance Pools
     *
     * 
     */
    @Test
    public void listInstancePoolsTest()  {
        ListInstancePools200Response response = api.listInstancePools().block();

        // TODO: test validations
    }
    
    /**
     * Reset an Instance Pool field to its default value
     *
     * 
     */
    @Test
    public void resetInstancePoolFieldTest()  {
        UUID id = null;
        String field = null;
        Operation response = api.resetInstancePoolField(id, field).block();

        // TODO: test validations
    }
    
    /**
     * Scale an Instance Pool
     *
     * 
     */
    @Test
    public void scaleInstancePoolTest()  {
        UUID id = null;
        ScaleInstancePoolRequest scaleInstancePoolRequest = null;
        Operation response = api.scaleInstancePool(id, scaleInstancePoolRequest).block();

        // TODO: test validations
    }
    
    /**
     * Update an Instance Pool
     *
     * 
     */
    @Test
    public void updateInstancePoolTest()  {
        UUID id = null;
        UpdateInstancePoolRequest updateInstancePoolRequest = null;
        Operation response = api.updateInstancePool(id, updateInstancePoolRequest).block();

        // TODO: test validations
    }
    
}
