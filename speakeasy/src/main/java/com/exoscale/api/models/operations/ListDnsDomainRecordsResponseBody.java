/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.exoscale.api.models.operations;

import com.exoscale.api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Optional;

/**
 * ListDnsDomainRecordsResponseBody - 200
 */

public class ListDnsDomainRecordsResponseBody {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dns-domain-records")
    private Optional<? extends java.util.List<com.exoscale.api.models.components.DnsDomainRecord>> dnsDomainRecords;

    public ListDnsDomainRecordsResponseBody(
            @JsonProperty("dns-domain-records") Optional<? extends java.util.List<com.exoscale.api.models.components.DnsDomainRecord>> dnsDomainRecords) {
        Utils.checkNotNull(dnsDomainRecords, "dnsDomainRecords");
        this.dnsDomainRecords = dnsDomainRecords;
    }

    public Optional<? extends java.util.List<com.exoscale.api.models.components.DnsDomainRecord>> dnsDomainRecords() {
        return dnsDomainRecords;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public ListDnsDomainRecordsResponseBody withDnsDomainRecords(java.util.List<com.exoscale.api.models.components.DnsDomainRecord> dnsDomainRecords) {
        Utils.checkNotNull(dnsDomainRecords, "dnsDomainRecords");
        this.dnsDomainRecords = Optional.ofNullable(dnsDomainRecords);
        return this;
    }

    public ListDnsDomainRecordsResponseBody withDnsDomainRecords(Optional<? extends java.util.List<com.exoscale.api.models.components.DnsDomainRecord>> dnsDomainRecords) {
        Utils.checkNotNull(dnsDomainRecords, "dnsDomainRecords");
        this.dnsDomainRecords = dnsDomainRecords;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ListDnsDomainRecordsResponseBody other = (ListDnsDomainRecordsResponseBody) o;
        return 
            java.util.Objects.deepEquals(this.dnsDomainRecords, other.dnsDomainRecords);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            dnsDomainRecords);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ListDnsDomainRecordsResponseBody.class,
                "dnsDomainRecords", dnsDomainRecords);
    }
    
    public final static class Builder {
 
        private Optional<? extends java.util.List<com.exoscale.api.models.components.DnsDomainRecord>> dnsDomainRecords = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder dnsDomainRecords(java.util.List<com.exoscale.api.models.components.DnsDomainRecord> dnsDomainRecords) {
            Utils.checkNotNull(dnsDomainRecords, "dnsDomainRecords");
            this.dnsDomainRecords = Optional.ofNullable(dnsDomainRecords);
            return this;
        }

        public Builder dnsDomainRecords(Optional<? extends java.util.List<com.exoscale.api.models.components.DnsDomainRecord>> dnsDomainRecords) {
            Utils.checkNotNull(dnsDomainRecords, "dnsDomainRecords");
            this.dnsDomainRecords = dnsDomainRecords;
            return this;
        }
        
        public ListDnsDomainRecordsResponseBody build() {
            return new ListDnsDomainRecordsResponseBody(
                dnsDomainRecords);
        }
    }
}

