/*
 * Exoscale Public API
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@exoscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import org.openapitools.client.model.InstanceState;
import org.openapitools.client.model.InstanceType;
import org.openapitools.client.model.Manager;
import org.openapitools.client.model.PrivateNetwork;
import org.openapitools.client.model.PublicIpAssignment;
import org.openapitools.client.model.SecurityGroup;
import org.openapitools.client.model.SshKey;
import org.openapitools.client.model.Template;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Instance
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-27T17:14:44.205710495Z[Etc/UTC]", comments = "Generator version: 7.5.0-SNAPSHOT")
public class ListInstances200ResponseInstancesInner {
  public static final String SERIALIZED_NAME_PUBLIC_IP_ASSIGNMENT = "public-ip-assignment";
  @SerializedName(SERIALIZED_NAME_PUBLIC_IP_ASSIGNMENT)
  private PublicIpAssignment publicIpAssignment;

  public static final String SERIALIZED_NAME_LABELS = "labels";
  @SerializedName(SERIALIZED_NAME_LABELS)
  private Map<String, String> labels = new HashMap<>();

  public static final String SERIALIZED_NAME_SECURITY_GROUPS = "security-groups";
  @SerializedName(SERIALIZED_NAME_SECURITY_GROUPS)
  private List<SecurityGroup> securityGroups = new ArrayList<>();

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_INSTANCE_TYPE = "instance-type";
  @SerializedName(SERIALIZED_NAME_INSTANCE_TYPE)
  private InstanceType instanceType;

  public static final String SERIALIZED_NAME_PRIVATE_NETWORKS = "private-networks";
  @SerializedName(SERIALIZED_NAME_PRIVATE_NETWORKS)
  private List<PrivateNetwork> privateNetworks = new ArrayList<>();

  public static final String SERIALIZED_NAME_TEMPLATE = "template";
  @SerializedName(SERIALIZED_NAME_TEMPLATE)
  private Template template;

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private InstanceState state;

  public static final String SERIALIZED_NAME_SSH_KEY = "ssh-key";
  @SerializedName(SERIALIZED_NAME_SSH_KEY)
  private SshKey sshKey;

  public static final String SERIALIZED_NAME_MANAGER = "manager";
  @SerializedName(SERIALIZED_NAME_MANAGER)
  private Manager manager;

  public static final String SERIALIZED_NAME_IPV6_ADDRESS = "ipv6-address";
  @SerializedName(SERIALIZED_NAME_IPV6_ADDRESS)
  private String ipv6Address;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private UUID id;

  public static final String SERIALIZED_NAME_SSH_KEYS = "ssh-keys";
  @SerializedName(SERIALIZED_NAME_SSH_KEYS)
  private List<SshKey> sshKeys = new ArrayList<>();

  public static final String SERIALIZED_NAME_CREATED_AT = "created-at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_PUBLIC_IP = "public-ip";
  @SerializedName(SERIALIZED_NAME_PUBLIC_IP)
  private String publicIp;

  public ListInstances200ResponseInstancesInner() {
  }

  public ListInstances200ResponseInstancesInner publicIpAssignment(PublicIpAssignment publicIpAssignment) {
    this.publicIpAssignment = publicIpAssignment;
    return this;
  }

   /**
   * Get publicIpAssignment
   * @return publicIpAssignment
  **/
  @javax.annotation.Nullable
  public PublicIpAssignment getPublicIpAssignment() {
    return publicIpAssignment;
  }

  public void setPublicIpAssignment(PublicIpAssignment publicIpAssignment) {
    this.publicIpAssignment = publicIpAssignment;
  }


  public ListInstances200ResponseInstancesInner labels(Map<String, String> labels) {
    this.labels = labels;
    return this;
  }

  public ListInstances200ResponseInstancesInner putLabelsItem(String key, String labelsItem) {
    if (this.labels == null) {
      this.labels = new HashMap<>();
    }
    this.labels.put(key, labelsItem);
    return this;
  }

   /**
   * Get labels
   * @return labels
  **/
  @javax.annotation.Nullable
  public Map<String, String> getLabels() {
    return labels;
  }

  public void setLabels(Map<String, String> labels) {
    this.labels = labels;
  }


  public ListInstances200ResponseInstancesInner securityGroups(List<SecurityGroup> securityGroups) {
    this.securityGroups = securityGroups;
    return this;
  }

  public ListInstances200ResponseInstancesInner addSecurityGroupsItem(SecurityGroup securityGroupsItem) {
    if (this.securityGroups == null) {
      this.securityGroups = new ArrayList<>();
    }
    this.securityGroups.add(securityGroupsItem);
    return this;
  }

   /**
   * Instance Security Groups
   * @return securityGroups
  **/
  @javax.annotation.Nullable
  public List<SecurityGroup> getSecurityGroups() {
    return securityGroups;
  }

  public void setSecurityGroups(List<SecurityGroup> securityGroups) {
    this.securityGroups = securityGroups;
  }


  public ListInstances200ResponseInstancesInner name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Instance name
   * @return name
  **/
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public ListInstances200ResponseInstancesInner instanceType(InstanceType instanceType) {
    this.instanceType = instanceType;
    return this;
  }

   /**
   * Get instanceType
   * @return instanceType
  **/
  @javax.annotation.Nullable
  public InstanceType getInstanceType() {
    return instanceType;
  }

  public void setInstanceType(InstanceType instanceType) {
    this.instanceType = instanceType;
  }


  public ListInstances200ResponseInstancesInner privateNetworks(List<PrivateNetwork> privateNetworks) {
    this.privateNetworks = privateNetworks;
    return this;
  }

  public ListInstances200ResponseInstancesInner addPrivateNetworksItem(PrivateNetwork privateNetworksItem) {
    if (this.privateNetworks == null) {
      this.privateNetworks = new ArrayList<>();
    }
    this.privateNetworks.add(privateNetworksItem);
    return this;
  }

   /**
   * Instance Private Networks
   * @return privateNetworks
  **/
  @javax.annotation.Nullable
  public List<PrivateNetwork> getPrivateNetworks() {
    return privateNetworks;
  }

  public void setPrivateNetworks(List<PrivateNetwork> privateNetworks) {
    this.privateNetworks = privateNetworks;
  }


  public ListInstances200ResponseInstancesInner template(Template template) {
    this.template = template;
    return this;
  }

   /**
   * Get template
   * @return template
  **/
  @javax.annotation.Nullable
  public Template getTemplate() {
    return template;
  }

  public void setTemplate(Template template) {
    this.template = template;
  }


  public ListInstances200ResponseInstancesInner state(InstanceState state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @javax.annotation.Nullable
  public InstanceState getState() {
    return state;
  }

  public void setState(InstanceState state) {
    this.state = state;
  }


  public ListInstances200ResponseInstancesInner sshKey(SshKey sshKey) {
    this.sshKey = sshKey;
    return this;
  }

   /**
   * Get sshKey
   * @return sshKey
  **/
  @javax.annotation.Nullable
  public SshKey getSshKey() {
    return sshKey;
  }

  public void setSshKey(SshKey sshKey) {
    this.sshKey = sshKey;
  }


  public ListInstances200ResponseInstancesInner manager(Manager manager) {
    this.manager = manager;
    return this;
  }

   /**
   * Get manager
   * @return manager
  **/
  @javax.annotation.Nullable
  public Manager getManager() {
    return manager;
  }

  public void setManager(Manager manager) {
    this.manager = manager;
  }


  public ListInstances200ResponseInstancesInner ipv6Address(String ipv6Address) {
    this.ipv6Address = ipv6Address;
    return this;
  }

   /**
   * Instance IPv6 address
   * @return ipv6Address
  **/
  @javax.annotation.Nullable
  public String getIpv6Address() {
    return ipv6Address;
  }

  public void setIpv6Address(String ipv6Address) {
    this.ipv6Address = ipv6Address;
  }


  public ListInstances200ResponseInstancesInner id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Instance ID
   * @return id
  **/
  @javax.annotation.Nullable
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }


  public ListInstances200ResponseInstancesInner sshKeys(List<SshKey> sshKeys) {
    this.sshKeys = sshKeys;
    return this;
  }

  public ListInstances200ResponseInstancesInner addSshKeysItem(SshKey sshKeysItem) {
    if (this.sshKeys == null) {
      this.sshKeys = new ArrayList<>();
    }
    this.sshKeys.add(sshKeysItem);
    return this;
  }

   /**
   * Instance SSH Keys
   * @return sshKeys
  **/
  @javax.annotation.Nullable
  public List<SshKey> getSshKeys() {
    return sshKeys;
  }

  public void setSshKeys(List<SshKey> sshKeys) {
    this.sshKeys = sshKeys;
  }


  public ListInstances200ResponseInstancesInner createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Instance creation date
   * @return createdAt
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public ListInstances200ResponseInstancesInner publicIp(String publicIp) {
    this.publicIp = publicIp;
    return this;
  }

   /**
   * Instance public IPv4 address
   * @return publicIp
  **/
  @javax.annotation.Nullable
  public String getPublicIp() {
    return publicIp;
  }

  public void setPublicIp(String publicIp) {
    this.publicIp = publicIp;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListInstances200ResponseInstancesInner listInstances200ResponseInstancesInner = (ListInstances200ResponseInstancesInner) o;
    return Objects.equals(this.publicIpAssignment, listInstances200ResponseInstancesInner.publicIpAssignment) &&
        Objects.equals(this.labels, listInstances200ResponseInstancesInner.labels) &&
        Objects.equals(this.securityGroups, listInstances200ResponseInstancesInner.securityGroups) &&
        Objects.equals(this.name, listInstances200ResponseInstancesInner.name) &&
        Objects.equals(this.instanceType, listInstances200ResponseInstancesInner.instanceType) &&
        Objects.equals(this.privateNetworks, listInstances200ResponseInstancesInner.privateNetworks) &&
        Objects.equals(this.template, listInstances200ResponseInstancesInner.template) &&
        Objects.equals(this.state, listInstances200ResponseInstancesInner.state) &&
        Objects.equals(this.sshKey, listInstances200ResponseInstancesInner.sshKey) &&
        Objects.equals(this.manager, listInstances200ResponseInstancesInner.manager) &&
        Objects.equals(this.ipv6Address, listInstances200ResponseInstancesInner.ipv6Address) &&
        Objects.equals(this.id, listInstances200ResponseInstancesInner.id) &&
        Objects.equals(this.sshKeys, listInstances200ResponseInstancesInner.sshKeys) &&
        Objects.equals(this.createdAt, listInstances200ResponseInstancesInner.createdAt) &&
        Objects.equals(this.publicIp, listInstances200ResponseInstancesInner.publicIp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(publicIpAssignment, labels, securityGroups, name, instanceType, privateNetworks, template, state, sshKey, manager, ipv6Address, id, sshKeys, createdAt, publicIp);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListInstances200ResponseInstancesInner {\n");
    sb.append("    publicIpAssignment: ").append(toIndentedString(publicIpAssignment)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    securityGroups: ").append(toIndentedString(securityGroups)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    instanceType: ").append(toIndentedString(instanceType)).append("\n");
    sb.append("    privateNetworks: ").append(toIndentedString(privateNetworks)).append("\n");
    sb.append("    template: ").append(toIndentedString(template)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    sshKey: ").append(toIndentedString(sshKey)).append("\n");
    sb.append("    manager: ").append(toIndentedString(manager)).append("\n");
    sb.append("    ipv6Address: ").append(toIndentedString(ipv6Address)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    sshKeys: ").append(toIndentedString(sshKeys)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    publicIp: ").append(toIndentedString(publicIp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("public-ip-assignment");
    openapiFields.add("labels");
    openapiFields.add("security-groups");
    openapiFields.add("name");
    openapiFields.add("instance-type");
    openapiFields.add("private-networks");
    openapiFields.add("template");
    openapiFields.add("state");
    openapiFields.add("ssh-key");
    openapiFields.add("manager");
    openapiFields.add("ipv6-address");
    openapiFields.add("id");
    openapiFields.add("ssh-keys");
    openapiFields.add("created-at");
    openapiFields.add("public-ip");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to ListInstances200ResponseInstancesInner
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ListInstances200ResponseInstancesInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ListInstances200ResponseInstancesInner is not found in the empty JSON string", ListInstances200ResponseInstancesInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ListInstances200ResponseInstancesInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ListInstances200ResponseInstancesInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `public-ip-assignment`
      if (jsonObj.get("public-ip-assignment") != null && !jsonObj.get("public-ip-assignment").isJsonNull()) {
        PublicIpAssignment.validateJsonElement(jsonObj.get("public-ip-assignment"));
      }
      if (jsonObj.get("security-groups") != null && !jsonObj.get("security-groups").isJsonNull()) {
        JsonArray jsonArraysecurityGroups = jsonObj.getAsJsonArray("security-groups");
        if (jsonArraysecurityGroups != null) {
          // ensure the json data is an array
          if (!jsonObj.get("security-groups").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `security-groups` to be an array in the JSON string but got `%s`", jsonObj.get("security-groups").toString()));
          }

          // validate the optional field `security-groups` (array)
          for (int i = 0; i < jsonArraysecurityGroups.size(); i++) {
            SecurityGroup.validateJsonElement(jsonArraysecurityGroups.get(i));
          };
        }
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the optional field `instance-type`
      if (jsonObj.get("instance-type") != null && !jsonObj.get("instance-type").isJsonNull()) {
        InstanceType.validateJsonElement(jsonObj.get("instance-type"));
      }
      if (jsonObj.get("private-networks") != null && !jsonObj.get("private-networks").isJsonNull()) {
        JsonArray jsonArrayprivateNetworks = jsonObj.getAsJsonArray("private-networks");
        if (jsonArrayprivateNetworks != null) {
          // ensure the json data is an array
          if (!jsonObj.get("private-networks").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `private-networks` to be an array in the JSON string but got `%s`", jsonObj.get("private-networks").toString()));
          }

          // validate the optional field `private-networks` (array)
          for (int i = 0; i < jsonArrayprivateNetworks.size(); i++) {
            PrivateNetwork.validateJsonElement(jsonArrayprivateNetworks.get(i));
          };
        }
      }
      // validate the optional field `template`
      if (jsonObj.get("template") != null && !jsonObj.get("template").isJsonNull()) {
        Template.validateJsonElement(jsonObj.get("template"));
      }
      // validate the optional field `state`
      if (jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) {
        InstanceState.validateJsonElement(jsonObj.get("state"));
      }
      // validate the optional field `ssh-key`
      if (jsonObj.get("ssh-key") != null && !jsonObj.get("ssh-key").isJsonNull()) {
        SshKey.validateJsonElement(jsonObj.get("ssh-key"));
      }
      // validate the optional field `manager`
      if (jsonObj.get("manager") != null && !jsonObj.get("manager").isJsonNull()) {
        Manager.validateJsonElement(jsonObj.get("manager"));
      }
      if ((jsonObj.get("ipv6-address") != null && !jsonObj.get("ipv6-address").isJsonNull()) && !jsonObj.get("ipv6-address").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ipv6-address` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ipv6-address").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if (jsonObj.get("ssh-keys") != null && !jsonObj.get("ssh-keys").isJsonNull()) {
        JsonArray jsonArraysshKeys = jsonObj.getAsJsonArray("ssh-keys");
        if (jsonArraysshKeys != null) {
          // ensure the json data is an array
          if (!jsonObj.get("ssh-keys").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `ssh-keys` to be an array in the JSON string but got `%s`", jsonObj.get("ssh-keys").toString()));
          }

          // validate the optional field `ssh-keys` (array)
          for (int i = 0; i < jsonArraysshKeys.size(); i++) {
            SshKey.validateJsonElement(jsonArraysshKeys.get(i));
          };
        }
      }
      if ((jsonObj.get("public-ip") != null && !jsonObj.get("public-ip").isJsonNull()) && !jsonObj.get("public-ip").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `public-ip` to be a primitive type in the JSON string but got `%s`", jsonObj.get("public-ip").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ListInstances200ResponseInstancesInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ListInstances200ResponseInstancesInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ListInstances200ResponseInstancesInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ListInstances200ResponseInstancesInner.class));

       return (TypeAdapter<T>) new TypeAdapter<ListInstances200ResponseInstancesInner>() {
           @Override
           public void write(JsonWriter out, ListInstances200ResponseInstancesInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ListInstances200ResponseInstancesInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ListInstances200ResponseInstancesInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ListInstances200ResponseInstancesInner
  * @throws IOException if the JSON string is invalid with respect to ListInstances200ResponseInstancesInner
  */
  public static ListInstances200ResponseInstancesInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ListInstances200ResponseInstancesInner.class);
  }

 /**
  * Convert an instance of ListInstances200ResponseInstancesInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

