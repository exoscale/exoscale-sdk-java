/*
 * ExoscalePublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.exoscale.apichgva2.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for TemplateResponse type.
 */
public class TemplateResponse {
    private List<Template> templates;

    /**
     * Default constructor.
     */
    public TemplateResponse() {
    }

    /**
     * Initialization constructor.
     * @param  templates  List of Template value for templates.
     */
    public TemplateResponse(
            List<Template> templates) {
        this.templates = templates;
    }

    /**
     * Getter for Templates.
     * @return Returns the List of Template
     */
    @JsonGetter("templates")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<Template> getTemplates() {
        return templates;
    }

    /**
     * Setter for Templates.
     * @param templates Value for List of Template
     */
    @JsonSetter("templates")
    public void setTemplates(List<Template> templates) {
        this.templates = templates;
    }

    /**
     * Converts this TemplateResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "TemplateResponse [" + "templates=" + templates + "]";
    }

    /**
     * Builds a new {@link TemplateResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link TemplateResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .templates(getTemplates());
        return builder;
    }

    /**
     * Class to build instances of {@link TemplateResponse}.
     */
    public static class Builder {
        private List<Template> templates;



        /**
         * Setter for templates.
         * @param  templates  List of Template value for templates.
         * @return Builder
         */
        public Builder templates(List<Template> templates) {
            this.templates = templates;
            return this;
        }

        /**
         * Builds a new {@link TemplateResponse} object using the set fields.
         * @return {@link TemplateResponse}
         */
        public TemplateResponse build() {
            return new TemplateResponse(templates);
        }
    }
}
