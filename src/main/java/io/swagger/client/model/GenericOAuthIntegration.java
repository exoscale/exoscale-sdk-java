/*
 * Exoscale Public API
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * OpenAPI spec version: 2.0.0
 * Contact: api@exoscale.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * GenericOAuthIntegration
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-03-08T17:23:40.261901+01:00[Europe/Vienna]")

public class GenericOAuthIntegration {
  @JsonProperty("scopes")
  private List<String> scopes = null;

  @JsonProperty("allowed_domains")
  private List<String> allowedDomains = null;

  @JsonProperty("allowed_organizations")
  private List<String> allowedOrganizations = null;

  @JsonProperty("token_url")
  private String tokenUrl = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("auth_url")
  private String authUrl = null;

  @JsonProperty("api_url")
  private String apiUrl = null;

  @JsonProperty("auto_login")
  private Boolean autoLogin = null;

  @JsonProperty("client_id")
  private String clientId = null;

  @JsonProperty("client_secret")
  private String clientSecret = null;

  @JsonProperty("allow_sign_up")
  private Boolean allowSignUp = null;

  public GenericOAuthIntegration scopes(List<String> scopes) {
    this.scopes = scopes;
    return this;
  }

  public GenericOAuthIntegration addScopesItem(String scopesItem) {
    if (this.scopes == null) {
      this.scopes = new ArrayList<>();
    }
    this.scopes.add(scopesItem);
    return this;
  }

   /**
   * Get scopes
   * @return scopes
  **/
  @Schema(description = "")
  public List<String> getScopes() {
    return scopes;
  }

  public void setScopes(List<String> scopes) {
    this.scopes = scopes;
  }

  public GenericOAuthIntegration allowedDomains(List<String> allowedDomains) {
    this.allowedDomains = allowedDomains;
    return this;
  }

  public GenericOAuthIntegration addAllowedDomainsItem(String allowedDomainsItem) {
    if (this.allowedDomains == null) {
      this.allowedDomains = new ArrayList<>();
    }
    this.allowedDomains.add(allowedDomainsItem);
    return this;
  }

   /**
   * Get allowedDomains
   * @return allowedDomains
  **/
  @Schema(description = "")
  public List<String> getAllowedDomains() {
    return allowedDomains;
  }

  public void setAllowedDomains(List<String> allowedDomains) {
    this.allowedDomains = allowedDomains;
  }

  public GenericOAuthIntegration allowedOrganizations(List<String> allowedOrganizations) {
    this.allowedOrganizations = allowedOrganizations;
    return this;
  }

  public GenericOAuthIntegration addAllowedOrganizationsItem(String allowedOrganizationsItem) {
    if (this.allowedOrganizations == null) {
      this.allowedOrganizations = new ArrayList<>();
    }
    this.allowedOrganizations.add(allowedOrganizationsItem);
    return this;
  }

   /**
   * Get allowedOrganizations
   * @return allowedOrganizations
  **/
  @Schema(description = "")
  public List<String> getAllowedOrganizations() {
    return allowedOrganizations;
  }

  public void setAllowedOrganizations(List<String> allowedOrganizations) {
    this.allowedOrganizations = allowedOrganizations;
  }

  public GenericOAuthIntegration tokenUrl(String tokenUrl) {
    this.tokenUrl = tokenUrl;
    return this;
  }

   /**
   * Get tokenUrl
   * @return tokenUrl
  **/
  @Schema(example = "https://yourprovider.com/oauth/token", required = true, description = "")
  public String getTokenUrl() {
    return tokenUrl;
  }

  public void setTokenUrl(String tokenUrl) {
    this.tokenUrl = tokenUrl;
  }

  public GenericOAuthIntegration name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(example = "My authentication", description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public GenericOAuthIntegration authUrl(String authUrl) {
    this.authUrl = authUrl;
    return this;
  }

   /**
   * Get authUrl
   * @return authUrl
  **/
  @Schema(example = "https://yourprovider.com/oauth/authorize", required = true, description = "")
  public String getAuthUrl() {
    return authUrl;
  }

  public void setAuthUrl(String authUrl) {
    this.authUrl = authUrl;
  }

  public GenericOAuthIntegration apiUrl(String apiUrl) {
    this.apiUrl = apiUrl;
    return this;
  }

   /**
   * Get apiUrl
   * @return apiUrl
  **/
  @Schema(example = "https://yourprovider.com/api", required = true, description = "")
  public String getApiUrl() {
    return apiUrl;
  }

  public void setApiUrl(String apiUrl) {
    this.apiUrl = apiUrl;
  }

  public GenericOAuthIntegration autoLogin(Boolean autoLogin) {
    this.autoLogin = autoLogin;
    return this;
  }

   /**
   * Get autoLogin
   * @return autoLogin
  **/
  @Schema(example = "false", description = "")
  public Boolean isAutoLogin() {
    return autoLogin;
  }

  public void setAutoLogin(Boolean autoLogin) {
    this.autoLogin = autoLogin;
  }

  public GenericOAuthIntegration clientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

   /**
   * Get clientId
   * @return clientId
  **/
  @Schema(example = "b1ba0bf54a4c2c0a1c29", required = true, description = "")
  public String getClientId() {
    return clientId;
  }

  public void setClientId(String clientId) {
    this.clientId = clientId;
  }

  public GenericOAuthIntegration clientSecret(String clientSecret) {
    this.clientSecret = clientSecret;
    return this;
  }

   /**
   * Get clientSecret
   * @return clientSecret
  **/
  @Schema(example = "bfa6gea4f129076761dcba8ce5e1e406bd83af7b", required = true, description = "")
  public String getClientSecret() {
    return clientSecret;
  }

  public void setClientSecret(String clientSecret) {
    this.clientSecret = clientSecret;
  }

  public GenericOAuthIntegration allowSignUp(Boolean allowSignUp) {
    this.allowSignUp = allowSignUp;
    return this;
  }

   /**
   * Get allowSignUp
   * @return allowSignUp
  **/
  @Schema(example = "false", description = "")
  public Boolean isAllowSignUp() {
    return allowSignUp;
  }

  public void setAllowSignUp(Boolean allowSignUp) {
    this.allowSignUp = allowSignUp;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GenericOAuthIntegration genericOAuthIntegration = (GenericOAuthIntegration) o;
    return Objects.equals(this.scopes, genericOAuthIntegration.scopes) &&
        Objects.equals(this.allowedDomains, genericOAuthIntegration.allowedDomains) &&
        Objects.equals(this.allowedOrganizations, genericOAuthIntegration.allowedOrganizations) &&
        Objects.equals(this.tokenUrl, genericOAuthIntegration.tokenUrl) &&
        Objects.equals(this.name, genericOAuthIntegration.name) &&
        Objects.equals(this.authUrl, genericOAuthIntegration.authUrl) &&
        Objects.equals(this.apiUrl, genericOAuthIntegration.apiUrl) &&
        Objects.equals(this.autoLogin, genericOAuthIntegration.autoLogin) &&
        Objects.equals(this.clientId, genericOAuthIntegration.clientId) &&
        Objects.equals(this.clientSecret, genericOAuthIntegration.clientSecret) &&
        Objects.equals(this.allowSignUp, genericOAuthIntegration.allowSignUp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(scopes, allowedDomains, allowedOrganizations, tokenUrl, name, authUrl, apiUrl, autoLogin, clientId, clientSecret, allowSignUp);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GenericOAuthIntegration {\n");
    
    sb.append("    scopes: ").append(toIndentedString(scopes)).append("\n");
    sb.append("    allowedDomains: ").append(toIndentedString(allowedDomains)).append("\n");
    sb.append("    allowedOrganizations: ").append(toIndentedString(allowedOrganizations)).append("\n");
    sb.append("    tokenUrl: ").append(toIndentedString(tokenUrl)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    authUrl: ").append(toIndentedString(authUrl)).append("\n");
    sb.append("    apiUrl: ").append(toIndentedString(apiUrl)).append("\n");
    sb.append("    autoLogin: ").append(toIndentedString(autoLogin)).append("\n");
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    clientSecret: ").append(toIndentedString(clientSecret)).append("\n");
    sb.append("    allowSignUp: ").append(toIndentedString(allowSignUp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
