/*
 * Exoscale Public API
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@exoscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.exoscale.model;

import java.util.Objects;
import java.util.Arrays;
import com.exoscale.model.EnumPgPoolMode;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * DbaasServicePgConnectionPoolsInner
 */
@JsonPropertyOrder({
  DbaasServicePgConnectionPoolsInner.JSON_PROPERTY_CONNECTION_URI,
  DbaasServicePgConnectionPoolsInner.JSON_PROPERTY_DATABASE,
  DbaasServicePgConnectionPoolsInner.JSON_PROPERTY_MODE,
  DbaasServicePgConnectionPoolsInner.JSON_PROPERTY_NAME,
  DbaasServicePgConnectionPoolsInner.JSON_PROPERTY_SIZE,
  DbaasServicePgConnectionPoolsInner.JSON_PROPERTY_USERNAME
})
@JsonTypeName("dbaas_service_pg_connection_pools_inner")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-04T16:37:05.548288+01:00[Europe/Vienna]")
public class DbaasServicePgConnectionPoolsInner {
  public static final String JSON_PROPERTY_CONNECTION_URI = "connection-uri";
  private String connectionUri;

  public static final String JSON_PROPERTY_DATABASE = "database";
  private String database;

  public static final String JSON_PROPERTY_MODE = "mode";
  private EnumPgPoolMode mode;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_SIZE = "size";
  private Long size;

  public static final String JSON_PROPERTY_USERNAME = "username";
  private String username;

  public DbaasServicePgConnectionPoolsInner() {
  }

  public DbaasServicePgConnectionPoolsInner connectionUri(String connectionUri) {
    
    this.connectionUri = connectionUri;
    return this;
  }

   /**
   * Connection URI for the DB pool
   * @return connectionUri
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CONNECTION_URI)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getConnectionUri() {
    return connectionUri;
  }


  @JsonProperty(JSON_PROPERTY_CONNECTION_URI)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setConnectionUri(String connectionUri) {
    this.connectionUri = connectionUri;
  }


  public DbaasServicePgConnectionPoolsInner database(String database) {
    
    this.database = database;
    return this;
  }

   /**
   * Get database
   * @return database
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DATABASE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDatabase() {
    return database;
  }


  @JsonProperty(JSON_PROPERTY_DATABASE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDatabase(String database) {
    this.database = database;
  }


  public DbaasServicePgConnectionPoolsInner mode(EnumPgPoolMode mode) {
    
    this.mode = mode;
    return this;
  }

   /**
   * Get mode
   * @return mode
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public EnumPgPoolMode getMode() {
    return mode;
  }


  @JsonProperty(JSON_PROPERTY_MODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMode(EnumPgPoolMode mode) {
    this.mode = mode;
  }


  public DbaasServicePgConnectionPoolsInner name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public DbaasServicePgConnectionPoolsInner size(Long size) {
    
    this.size = size;
    return this;
  }

   /**
   * Get size
   * minimum: 1
   * maximum: 10000
   * @return size
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getSize() {
    return size;
  }


  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSize(Long size) {
    this.size = size;
  }


  public DbaasServicePgConnectionPoolsInner username(String username) {
    
    this.username = username;
    return this;
  }

   /**
   * Get username
   * @return username
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_USERNAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getUsername() {
    return username;
  }


  @JsonProperty(JSON_PROPERTY_USERNAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUsername(String username) {
    this.username = username;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DbaasServicePgConnectionPoolsInner dbaasServicePgConnectionPoolsInner = (DbaasServicePgConnectionPoolsInner) o;
    return Objects.equals(this.connectionUri, dbaasServicePgConnectionPoolsInner.connectionUri) &&
        Objects.equals(this.database, dbaasServicePgConnectionPoolsInner.database) &&
        Objects.equals(this.mode, dbaasServicePgConnectionPoolsInner.mode) &&
        Objects.equals(this.name, dbaasServicePgConnectionPoolsInner.name) &&
        Objects.equals(this.size, dbaasServicePgConnectionPoolsInner.size) &&
        Objects.equals(this.username, dbaasServicePgConnectionPoolsInner.username);
  }

  @Override
  public int hashCode() {
    return Objects.hash(connectionUri, database, mode, name, size, username);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DbaasServicePgConnectionPoolsInner {\n");
    sb.append("    connectionUri: ").append(toIndentedString(connectionUri)).append("\n");
    sb.append("    database: ").append(toIndentedString(database)).append("\n");
    sb.append("    mode: ").append(toIndentedString(mode)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

