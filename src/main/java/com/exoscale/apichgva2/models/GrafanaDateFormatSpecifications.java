/*
 * ExoscalePublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.exoscale.apichgva2.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for GrafanaDateFormatSpecifications type.
 */
public class GrafanaDateFormatSpecifications {
    private String fullDate;
    private String intervalSecond;
    private String intervalMinute;
    private String intervalHour;
    private String intervalDay;
    private String intervalMonth;
    private String intervalYear;
    private String defaultTimezone;

    /**
     * Default constructor.
     */
    public GrafanaDateFormatSpecifications() {
    }

    /**
     * Initialization constructor.
     * @param  fullDate  String value for fullDate.
     * @param  intervalSecond  String value for intervalSecond.
     * @param  intervalMinute  String value for intervalMinute.
     * @param  intervalHour  String value for intervalHour.
     * @param  intervalDay  String value for intervalDay.
     * @param  intervalMonth  String value for intervalMonth.
     * @param  intervalYear  String value for intervalYear.
     * @param  defaultTimezone  String value for defaultTimezone.
     */
    public GrafanaDateFormatSpecifications(
            String fullDate,
            String intervalSecond,
            String intervalMinute,
            String intervalHour,
            String intervalDay,
            String intervalMonth,
            String intervalYear,
            String defaultTimezone) {
        this.fullDate = fullDate;
        this.intervalSecond = intervalSecond;
        this.intervalMinute = intervalMinute;
        this.intervalHour = intervalHour;
        this.intervalDay = intervalDay;
        this.intervalMonth = intervalMonth;
        this.intervalYear = intervalYear;
        this.defaultTimezone = defaultTimezone;
    }

    /**
     * Getter for FullDate.
     * @return Returns the String
     */
    @JsonGetter("full_date")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getFullDate() {
        return fullDate;
    }

    /**
     * Setter for FullDate.
     * @param fullDate Value for String
     */
    @JsonSetter("full_date")
    public void setFullDate(String fullDate) {
        this.fullDate = fullDate;
    }

    /**
     * Getter for IntervalSecond.
     * @return Returns the String
     */
    @JsonGetter("interval_second")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getIntervalSecond() {
        return intervalSecond;
    }

    /**
     * Setter for IntervalSecond.
     * @param intervalSecond Value for String
     */
    @JsonSetter("interval_second")
    public void setIntervalSecond(String intervalSecond) {
        this.intervalSecond = intervalSecond;
    }

    /**
     * Getter for IntervalMinute.
     * @return Returns the String
     */
    @JsonGetter("interval_minute")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getIntervalMinute() {
        return intervalMinute;
    }

    /**
     * Setter for IntervalMinute.
     * @param intervalMinute Value for String
     */
    @JsonSetter("interval_minute")
    public void setIntervalMinute(String intervalMinute) {
        this.intervalMinute = intervalMinute;
    }

    /**
     * Getter for IntervalHour.
     * @return Returns the String
     */
    @JsonGetter("interval_hour")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getIntervalHour() {
        return intervalHour;
    }

    /**
     * Setter for IntervalHour.
     * @param intervalHour Value for String
     */
    @JsonSetter("interval_hour")
    public void setIntervalHour(String intervalHour) {
        this.intervalHour = intervalHour;
    }

    /**
     * Getter for IntervalDay.
     * @return Returns the String
     */
    @JsonGetter("interval_day")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getIntervalDay() {
        return intervalDay;
    }

    /**
     * Setter for IntervalDay.
     * @param intervalDay Value for String
     */
    @JsonSetter("interval_day")
    public void setIntervalDay(String intervalDay) {
        this.intervalDay = intervalDay;
    }

    /**
     * Getter for IntervalMonth.
     * @return Returns the String
     */
    @JsonGetter("interval_month")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getIntervalMonth() {
        return intervalMonth;
    }

    /**
     * Setter for IntervalMonth.
     * @param intervalMonth Value for String
     */
    @JsonSetter("interval_month")
    public void setIntervalMonth(String intervalMonth) {
        this.intervalMonth = intervalMonth;
    }

    /**
     * Getter for IntervalYear.
     * @return Returns the String
     */
    @JsonGetter("interval_year")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getIntervalYear() {
        return intervalYear;
    }

    /**
     * Setter for IntervalYear.
     * @param intervalYear Value for String
     */
    @JsonSetter("interval_year")
    public void setIntervalYear(String intervalYear) {
        this.intervalYear = intervalYear;
    }

    /**
     * Getter for DefaultTimezone.
     * @return Returns the String
     */
    @JsonGetter("default_timezone")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDefaultTimezone() {
        return defaultTimezone;
    }

    /**
     * Setter for DefaultTimezone.
     * @param defaultTimezone Value for String
     */
    @JsonSetter("default_timezone")
    public void setDefaultTimezone(String defaultTimezone) {
        this.defaultTimezone = defaultTimezone;
    }

    /**
     * Converts this GrafanaDateFormatSpecifications into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "GrafanaDateFormatSpecifications [" + "fullDate=" + fullDate + ", intervalSecond="
                + intervalSecond + ", intervalMinute=" + intervalMinute + ", intervalHour="
                + intervalHour + ", intervalDay=" + intervalDay + ", intervalMonth=" + intervalMonth
                + ", intervalYear=" + intervalYear + ", defaultTimezone=" + defaultTimezone + "]";
    }

    /**
     * Builds a new {@link GrafanaDateFormatSpecifications.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link GrafanaDateFormatSpecifications.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .fullDate(getFullDate())
                .intervalSecond(getIntervalSecond())
                .intervalMinute(getIntervalMinute())
                .intervalHour(getIntervalHour())
                .intervalDay(getIntervalDay())
                .intervalMonth(getIntervalMonth())
                .intervalYear(getIntervalYear())
                .defaultTimezone(getDefaultTimezone());
        return builder;
    }

    /**
     * Class to build instances of {@link GrafanaDateFormatSpecifications}.
     */
    public static class Builder {
        private String fullDate;
        private String intervalSecond;
        private String intervalMinute;
        private String intervalHour;
        private String intervalDay;
        private String intervalMonth;
        private String intervalYear;
        private String defaultTimezone;



        /**
         * Setter for fullDate.
         * @param  fullDate  String value for fullDate.
         * @return Builder
         */
        public Builder fullDate(String fullDate) {
            this.fullDate = fullDate;
            return this;
        }

        /**
         * Setter for intervalSecond.
         * @param  intervalSecond  String value for intervalSecond.
         * @return Builder
         */
        public Builder intervalSecond(String intervalSecond) {
            this.intervalSecond = intervalSecond;
            return this;
        }

        /**
         * Setter for intervalMinute.
         * @param  intervalMinute  String value for intervalMinute.
         * @return Builder
         */
        public Builder intervalMinute(String intervalMinute) {
            this.intervalMinute = intervalMinute;
            return this;
        }

        /**
         * Setter for intervalHour.
         * @param  intervalHour  String value for intervalHour.
         * @return Builder
         */
        public Builder intervalHour(String intervalHour) {
            this.intervalHour = intervalHour;
            return this;
        }

        /**
         * Setter for intervalDay.
         * @param  intervalDay  String value for intervalDay.
         * @return Builder
         */
        public Builder intervalDay(String intervalDay) {
            this.intervalDay = intervalDay;
            return this;
        }

        /**
         * Setter for intervalMonth.
         * @param  intervalMonth  String value for intervalMonth.
         * @return Builder
         */
        public Builder intervalMonth(String intervalMonth) {
            this.intervalMonth = intervalMonth;
            return this;
        }

        /**
         * Setter for intervalYear.
         * @param  intervalYear  String value for intervalYear.
         * @return Builder
         */
        public Builder intervalYear(String intervalYear) {
            this.intervalYear = intervalYear;
            return this;
        }

        /**
         * Setter for defaultTimezone.
         * @param  defaultTimezone  String value for defaultTimezone.
         * @return Builder
         */
        public Builder defaultTimezone(String defaultTimezone) {
            this.defaultTimezone = defaultTimezone;
            return this;
        }

        /**
         * Builds a new {@link GrafanaDateFormatSpecifications} object using the set fields.
         * @return {@link GrafanaDateFormatSpecifications}
         */
        public GrafanaDateFormatSpecifications build() {
            return new GrafanaDateFormatSpecifications(fullDate, intervalSecond, intervalMinute,
                    intervalHour, intervalDay, intervalMonth, intervalYear, defaultTimezone);
        }
    }
}
