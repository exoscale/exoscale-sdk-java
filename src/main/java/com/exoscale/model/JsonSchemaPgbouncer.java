/*
 * Exoscale Public API
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@exoscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.exoscale.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * JsonSchemaPgbouncer
 */
@JsonPropertyOrder({
  JsonSchemaPgbouncer.JSON_PROPERTY_MIN_POOL_SIZE,
  JsonSchemaPgbouncer.JSON_PROPERTY_IGNORE_STARTUP_PARAMETERS,
  JsonSchemaPgbouncer.JSON_PROPERTY_SERVER_LIFETIME,
  JsonSchemaPgbouncer.JSON_PROPERTY_AUTODB_POOL_MODE,
  JsonSchemaPgbouncer.JSON_PROPERTY_SERVER_IDLE_TIMEOUT,
  JsonSchemaPgbouncer.JSON_PROPERTY_AUTODB_MAX_DB_CONNECTIONS,
  JsonSchemaPgbouncer.JSON_PROPERTY_SERVER_RESET_QUERY_ALWAYS,
  JsonSchemaPgbouncer.JSON_PROPERTY_AUTODB_POOL_SIZE,
  JsonSchemaPgbouncer.JSON_PROPERTY_AUTODB_IDLE_TIMEOUT
})
@JsonTypeName("json-schema-pgbouncer")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-04T16:37:05.548288+01:00[Europe/Vienna]")
public class JsonSchemaPgbouncer {
  public static final String JSON_PROPERTY_MIN_POOL_SIZE = "min_pool_size";
  private Integer minPoolSize;

  /**
   * Gets or Sets ignoreStartupParameters
   */
  public enum IgnoreStartupParametersEnum {
    EXTRA_FLOAT_DIGITS("extra_float_digits"),
    
    SEARCH_PATH("search_path");

    private String value;

    IgnoreStartupParametersEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static IgnoreStartupParametersEnum fromValue(String value) {
      for (IgnoreStartupParametersEnum b : IgnoreStartupParametersEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_IGNORE_STARTUP_PARAMETERS = "ignore_startup_parameters";
  private List<IgnoreStartupParametersEnum> ignoreStartupParameters;

  public static final String JSON_PROPERTY_SERVER_LIFETIME = "server_lifetime";
  private Integer serverLifetime;

  /**
   * Gets or Sets autodbPoolMode
   */
  public enum AutodbPoolModeEnum {
    SESSION("session"),
    
    TRANSACTION("transaction"),
    
    STATEMENT("statement");

    private String value;

    AutodbPoolModeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AutodbPoolModeEnum fromValue(String value) {
      for (AutodbPoolModeEnum b : AutodbPoolModeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_AUTODB_POOL_MODE = "autodb_pool_mode";
  private AutodbPoolModeEnum autodbPoolMode;

  public static final String JSON_PROPERTY_SERVER_IDLE_TIMEOUT = "server_idle_timeout";
  private Integer serverIdleTimeout;

  public static final String JSON_PROPERTY_AUTODB_MAX_DB_CONNECTIONS = "autodb_max_db_connections";
  private Integer autodbMaxDbConnections;

  public static final String JSON_PROPERTY_SERVER_RESET_QUERY_ALWAYS = "server_reset_query_always";
  private Boolean serverResetQueryAlways;

  public static final String JSON_PROPERTY_AUTODB_POOL_SIZE = "autodb_pool_size";
  private Integer autodbPoolSize;

  public static final String JSON_PROPERTY_AUTODB_IDLE_TIMEOUT = "autodb_idle_timeout";
  private Integer autodbIdleTimeout;

  public JsonSchemaPgbouncer() {
  }

  public JsonSchemaPgbouncer minPoolSize(Integer minPoolSize) {
    
    this.minPoolSize = minPoolSize;
    return this;
  }

   /**
   * Get minPoolSize
   * minimum: 0
   * maximum: 10000
   * @return minPoolSize
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MIN_POOL_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMinPoolSize() {
    return minPoolSize;
  }


  @JsonProperty(JSON_PROPERTY_MIN_POOL_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMinPoolSize(Integer minPoolSize) {
    this.minPoolSize = minPoolSize;
  }


  public JsonSchemaPgbouncer ignoreStartupParameters(List<IgnoreStartupParametersEnum> ignoreStartupParameters) {
    
    this.ignoreStartupParameters = ignoreStartupParameters;
    return this;
  }

  public JsonSchemaPgbouncer addIgnoreStartupParametersItem(IgnoreStartupParametersEnum ignoreStartupParametersItem) {
    if (this.ignoreStartupParameters == null) {
      this.ignoreStartupParameters = new ArrayList<>();
    }
    this.ignoreStartupParameters.add(ignoreStartupParametersItem);
    return this;
  }

   /**
   * Get ignoreStartupParameters
   * @return ignoreStartupParameters
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IGNORE_STARTUP_PARAMETERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<IgnoreStartupParametersEnum> getIgnoreStartupParameters() {
    return ignoreStartupParameters;
  }


  @JsonProperty(JSON_PROPERTY_IGNORE_STARTUP_PARAMETERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIgnoreStartupParameters(List<IgnoreStartupParametersEnum> ignoreStartupParameters) {
    this.ignoreStartupParameters = ignoreStartupParameters;
  }


  public JsonSchemaPgbouncer serverLifetime(Integer serverLifetime) {
    
    this.serverLifetime = serverLifetime;
    return this;
  }

   /**
   * Get serverLifetime
   * minimum: 60
   * maximum: 86400
   * @return serverLifetime
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SERVER_LIFETIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getServerLifetime() {
    return serverLifetime;
  }


  @JsonProperty(JSON_PROPERTY_SERVER_LIFETIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setServerLifetime(Integer serverLifetime) {
    this.serverLifetime = serverLifetime;
  }


  public JsonSchemaPgbouncer autodbPoolMode(AutodbPoolModeEnum autodbPoolMode) {
    
    this.autodbPoolMode = autodbPoolMode;
    return this;
  }

   /**
   * Get autodbPoolMode
   * @return autodbPoolMode
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUTODB_POOL_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AutodbPoolModeEnum getAutodbPoolMode() {
    return autodbPoolMode;
  }


  @JsonProperty(JSON_PROPERTY_AUTODB_POOL_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAutodbPoolMode(AutodbPoolModeEnum autodbPoolMode) {
    this.autodbPoolMode = autodbPoolMode;
  }


  public JsonSchemaPgbouncer serverIdleTimeout(Integer serverIdleTimeout) {
    
    this.serverIdleTimeout = serverIdleTimeout;
    return this;
  }

   /**
   * Get serverIdleTimeout
   * minimum: 0
   * maximum: 86400
   * @return serverIdleTimeout
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SERVER_IDLE_TIMEOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getServerIdleTimeout() {
    return serverIdleTimeout;
  }


  @JsonProperty(JSON_PROPERTY_SERVER_IDLE_TIMEOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setServerIdleTimeout(Integer serverIdleTimeout) {
    this.serverIdleTimeout = serverIdleTimeout;
  }


  public JsonSchemaPgbouncer autodbMaxDbConnections(Integer autodbMaxDbConnections) {
    
    this.autodbMaxDbConnections = autodbMaxDbConnections;
    return this;
  }

   /**
   * Get autodbMaxDbConnections
   * minimum: 0
   * maximum: 2147483647
   * @return autodbMaxDbConnections
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUTODB_MAX_DB_CONNECTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getAutodbMaxDbConnections() {
    return autodbMaxDbConnections;
  }


  @JsonProperty(JSON_PROPERTY_AUTODB_MAX_DB_CONNECTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAutodbMaxDbConnections(Integer autodbMaxDbConnections) {
    this.autodbMaxDbConnections = autodbMaxDbConnections;
  }


  public JsonSchemaPgbouncer serverResetQueryAlways(Boolean serverResetQueryAlways) {
    
    this.serverResetQueryAlways = serverResetQueryAlways;
    return this;
  }

   /**
   * Get serverResetQueryAlways
   * @return serverResetQueryAlways
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SERVER_RESET_QUERY_ALWAYS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getServerResetQueryAlways() {
    return serverResetQueryAlways;
  }


  @JsonProperty(JSON_PROPERTY_SERVER_RESET_QUERY_ALWAYS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setServerResetQueryAlways(Boolean serverResetQueryAlways) {
    this.serverResetQueryAlways = serverResetQueryAlways;
  }


  public JsonSchemaPgbouncer autodbPoolSize(Integer autodbPoolSize) {
    
    this.autodbPoolSize = autodbPoolSize;
    return this;
  }

   /**
   * Get autodbPoolSize
   * minimum: 0
   * maximum: 10000
   * @return autodbPoolSize
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUTODB_POOL_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getAutodbPoolSize() {
    return autodbPoolSize;
  }


  @JsonProperty(JSON_PROPERTY_AUTODB_POOL_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAutodbPoolSize(Integer autodbPoolSize) {
    this.autodbPoolSize = autodbPoolSize;
  }


  public JsonSchemaPgbouncer autodbIdleTimeout(Integer autodbIdleTimeout) {
    
    this.autodbIdleTimeout = autodbIdleTimeout;
    return this;
  }

   /**
   * Get autodbIdleTimeout
   * minimum: 0
   * maximum: 86400
   * @return autodbIdleTimeout
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUTODB_IDLE_TIMEOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getAutodbIdleTimeout() {
    return autodbIdleTimeout;
  }


  @JsonProperty(JSON_PROPERTY_AUTODB_IDLE_TIMEOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAutodbIdleTimeout(Integer autodbIdleTimeout) {
    this.autodbIdleTimeout = autodbIdleTimeout;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JsonSchemaPgbouncer jsonSchemaPgbouncer = (JsonSchemaPgbouncer) o;
    return Objects.equals(this.minPoolSize, jsonSchemaPgbouncer.minPoolSize) &&
        Objects.equals(this.ignoreStartupParameters, jsonSchemaPgbouncer.ignoreStartupParameters) &&
        Objects.equals(this.serverLifetime, jsonSchemaPgbouncer.serverLifetime) &&
        Objects.equals(this.autodbPoolMode, jsonSchemaPgbouncer.autodbPoolMode) &&
        Objects.equals(this.serverIdleTimeout, jsonSchemaPgbouncer.serverIdleTimeout) &&
        Objects.equals(this.autodbMaxDbConnections, jsonSchemaPgbouncer.autodbMaxDbConnections) &&
        Objects.equals(this.serverResetQueryAlways, jsonSchemaPgbouncer.serverResetQueryAlways) &&
        Objects.equals(this.autodbPoolSize, jsonSchemaPgbouncer.autodbPoolSize) &&
        Objects.equals(this.autodbIdleTimeout, jsonSchemaPgbouncer.autodbIdleTimeout);
  }

  @Override
  public int hashCode() {
    return Objects.hash(minPoolSize, ignoreStartupParameters, serverLifetime, autodbPoolMode, serverIdleTimeout, autodbMaxDbConnections, serverResetQueryAlways, autodbPoolSize, autodbIdleTimeout);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JsonSchemaPgbouncer {\n");
    sb.append("    minPoolSize: ").append(toIndentedString(minPoolSize)).append("\n");
    sb.append("    ignoreStartupParameters: ").append(toIndentedString(ignoreStartupParameters)).append("\n");
    sb.append("    serverLifetime: ").append(toIndentedString(serverLifetime)).append("\n");
    sb.append("    autodbPoolMode: ").append(toIndentedString(autodbPoolMode)).append("\n");
    sb.append("    serverIdleTimeout: ").append(toIndentedString(serverIdleTimeout)).append("\n");
    sb.append("    autodbMaxDbConnections: ").append(toIndentedString(autodbMaxDbConnections)).append("\n");
    sb.append("    serverResetQueryAlways: ").append(toIndentedString(serverResetQueryAlways)).append("\n");
    sb.append("    autodbPoolSize: ").append(toIndentedString(autodbPoolSize)).append("\n");
    sb.append("    autodbIdleTimeout: ").append(toIndentedString(autodbIdleTimeout)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

