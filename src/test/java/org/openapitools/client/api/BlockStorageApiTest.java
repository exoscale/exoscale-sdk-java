/*
 * Exoscale Public API
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@exoscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AttachBlockStorageVolumeToInstanceRequest;
import org.openapitools.client.model.BlockStorageSnapshot;
import org.openapitools.client.model.BlockStorageVolume;
import org.openapitools.client.model.CreateBlockStorageSnapshotRequest;
import org.openapitools.client.model.CreateBlockStorageVolumeRequest;
import org.openapitools.client.model.ListBlockStorageSnapshots200Response;
import org.openapitools.client.model.ListBlockStorageVolumes200Response;
import org.openapitools.client.model.Operation;
import org.openapitools.client.model.ResizeBlockStorageVolumeRequest;
import java.util.UUID;
import org.openapitools.client.model.UpdateBlockStorageVolumeLabelsRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BlockStorageApi
 */
@Disabled
public class BlockStorageApiTest {

    private final BlockStorageApi api = new BlockStorageApi();

    /**
     * Attach block storage volume to an instance
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void attachBlockStorageVolumeToInstanceTest() throws ApiException {
        UUID id = null;
        AttachBlockStorageVolumeToInstanceRequest attachBlockStorageVolumeToInstanceRequest = null;
        Operation response = api.attachBlockStorageVolumeToInstance(id, attachBlockStorageVolumeToInstanceRequest);
        // TODO: test validations
    }

    /**
     * Create a block storage snapshot
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createBlockStorageSnapshotTest() throws ApiException {
        UUID id = null;
        CreateBlockStorageSnapshotRequest createBlockStorageSnapshotRequest = null;
        Operation response = api.createBlockStorageSnapshot(id, createBlockStorageSnapshotRequest);
        // TODO: test validations
    }

    /**
     * Create a block storage volume
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createBlockStorageVolumeTest() throws ApiException {
        CreateBlockStorageVolumeRequest createBlockStorageVolumeRequest = null;
        Operation response = api.createBlockStorageVolume(createBlockStorageVolumeRequest);
        // TODO: test validations
    }

    /**
     * Delete a block storage snapshot, data will be unrecoverable
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteBlockStorageSnapshotTest() throws ApiException {
        UUID id = null;
        Operation response = api.deleteBlockStorageSnapshot(id);
        // TODO: test validations
    }

    /**
     * Delete a block storage volume, data will be unrecoverable
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteBlockStorageVolumeTest() throws ApiException {
        UUID id = null;
        Operation response = api.deleteBlockStorageVolume(id);
        // TODO: test validations
    }

    /**
     * Detach block storage volume
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void detachBlockStorageVolumeTest() throws ApiException {
        UUID id = null;
        Operation response = api.detachBlockStorageVolume(id);
        // TODO: test validations
    }

    /**
     * Retrieve block storage snapshot details
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBlockStorageSnapshotTest() throws ApiException {
        UUID id = null;
        BlockStorageSnapshot response = api.getBlockStorageSnapshot(id);
        // TODO: test validations
    }

    /**
     * Retrieve block storage volume details
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBlockStorageVolumeTest() throws ApiException {
        UUID id = null;
        BlockStorageVolume response = api.getBlockStorageVolume(id);
        // TODO: test validations
    }

    /**
     * List block storage snapshots
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listBlockStorageSnapshotsTest() throws ApiException {
        ListBlockStorageSnapshots200Response response = api.listBlockStorageSnapshots();
        // TODO: test validations
    }

    /**
     * List block storage volumes
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listBlockStorageVolumesTest() throws ApiException {
        UUID instanceId = null;
        ListBlockStorageVolumes200Response response = api.listBlockStorageVolumes(instanceId);
        // TODO: test validations
    }

    /**
     * Resize a block storage volume
     *
     * This operation resizes a Block storage volume. Note: the volume can only grow, cannot be shrunk.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void resizeBlockStorageVolumeTest() throws ApiException {
        UUID id = null;
        ResizeBlockStorageVolumeRequest resizeBlockStorageVolumeRequest = null;
        BlockStorageVolume response = api.resizeBlockStorageVolume(id, resizeBlockStorageVolumeRequest);
        // TODO: test validations
    }

    /**
     * Set block storage volume labels
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateBlockStorageVolumeLabelsTest() throws ApiException {
        UUID id = null;
        UpdateBlockStorageVolumeLabelsRequest updateBlockStorageVolumeLabelsRequest = null;
        Operation response = api.updateBlockStorageVolumeLabels(id, updateBlockStorageVolumeLabelsRequest);
        // TODO: test validations
    }

}
