/*
 * ExoscalePublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.exoscale.apichgva2.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for AccessKey type.
 */
public class AccessKey {
    private String name;
    private String key;
    private String secret;
    private Type3Enum type;
    private VersionEnum version;
    private List<String> tags;
    private List<String> operations;
    private List<AccessKeyResource> resources;

    /**
     * Default constructor.
     */
    public AccessKey() {
    }

    /**
     * Initialization constructor.
     * @param  name  String value for name.
     * @param  key  String value for key.
     * @param  secret  String value for secret.
     * @param  type  Type3Enum value for type.
     * @param  version  VersionEnum value for version.
     * @param  tags  List of String value for tags.
     * @param  operations  List of String value for operations.
     * @param  resources  List of AccessKeyResource value for resources.
     */
    public AccessKey(
            String name,
            String key,
            String secret,
            Type3Enum type,
            VersionEnum version,
            List<String> tags,
            List<String> operations,
            List<AccessKeyResource> resources) {
        this.name = name;
        this.key = key;
        this.secret = secret;
        this.type = type;
        this.version = version;
        this.tags = tags;
        this.operations = operations;
        this.resources = resources;
    }

    /**
     * Getter for Name.
     * IAM Access Key name
     * @return Returns the String
     */
    @JsonGetter("name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * IAM Access Key name
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for Key.
     * IAM Access Key
     * @return Returns the String
     */
    @JsonGetter("key")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getKey() {
        return key;
    }

    /**
     * Setter for Key.
     * IAM Access Key
     * @param key Value for String
     */
    @JsonSetter("key")
    public void setKey(String key) {
        this.key = key;
    }

    /**
     * Getter for Secret.
     * IAM Access Key Secret
     * @return Returns the String
     */
    @JsonGetter("secret")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getSecret() {
        return secret;
    }

    /**
     * Setter for Secret.
     * IAM Access Key Secret
     * @param secret Value for String
     */
    @JsonSetter("secret")
    public void setSecret(String secret) {
        this.secret = secret;
    }

    /**
     * Getter for Type.
     * IAM Access Key type
     * @return Returns the Type3Enum
     */
    @JsonGetter("type")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Type3Enum getType() {
        return type;
    }

    /**
     * Setter for Type.
     * IAM Access Key type
     * @param type Value for Type3Enum
     */
    @JsonSetter("type")
    public void setType(Type3Enum type) {
        this.type = type;
    }

    /**
     * Getter for Version.
     * IAM Access Key version
     * @return Returns the VersionEnum
     */
    @JsonGetter("version")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public VersionEnum getVersion() {
        return version;
    }

    /**
     * Setter for Version.
     * IAM Access Key version
     * @param version Value for VersionEnum
     */
    @JsonSetter("version")
    public void setVersion(VersionEnum version) {
        this.version = version;
    }

    /**
     * Getter for Tags.
     * IAM Access Key tags
     * @return Returns the List of String
     */
    @JsonGetter("tags")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<String> getTags() {
        return tags;
    }

    /**
     * Setter for Tags.
     * IAM Access Key tags
     * @param tags Value for List of String
     */
    @JsonSetter("tags")
    public void setTags(List<String> tags) {
        this.tags = tags;
    }

    /**
     * Getter for Operations.
     * IAM Access Key operations
     * @return Returns the List of String
     */
    @JsonGetter("operations")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<String> getOperations() {
        return operations;
    }

    /**
     * Setter for Operations.
     * IAM Access Key operations
     * @param operations Value for List of String
     */
    @JsonSetter("operations")
    public void setOperations(List<String> operations) {
        this.operations = operations;
    }

    /**
     * Getter for Resources.
     * IAM Access Key Resources
     * @return Returns the List of AccessKeyResource
     */
    @JsonGetter("resources")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<AccessKeyResource> getResources() {
        return resources;
    }

    /**
     * Setter for Resources.
     * IAM Access Key Resources
     * @param resources Value for List of AccessKeyResource
     */
    @JsonSetter("resources")
    public void setResources(List<AccessKeyResource> resources) {
        this.resources = resources;
    }

    /**
     * Converts this AccessKey into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "AccessKey [" + "name=" + name + ", key=" + key + ", secret=" + secret + ", type="
                + type + ", version=" + version + ", tags=" + tags + ", operations=" + operations
                + ", resources=" + resources + "]";
    }

    /**
     * Builds a new {@link AccessKey.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link AccessKey.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .name(getName())
                .key(getKey())
                .secret(getSecret())
                .type(getType())
                .version(getVersion())
                .tags(getTags())
                .operations(getOperations())
                .resources(getResources());
        return builder;
    }

    /**
     * Class to build instances of {@link AccessKey}.
     */
    public static class Builder {
        private String name;
        private String key;
        private String secret;
        private Type3Enum type;
        private VersionEnum version;
        private List<String> tags;
        private List<String> operations;
        private List<AccessKeyResource> resources;



        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for key.
         * @param  key  String value for key.
         * @return Builder
         */
        public Builder key(String key) {
            this.key = key;
            return this;
        }

        /**
         * Setter for secret.
         * @param  secret  String value for secret.
         * @return Builder
         */
        public Builder secret(String secret) {
            this.secret = secret;
            return this;
        }

        /**
         * Setter for type.
         * @param  type  Type3Enum value for type.
         * @return Builder
         */
        public Builder type(Type3Enum type) {
            this.type = type;
            return this;
        }

        /**
         * Setter for version.
         * @param  version  VersionEnum value for version.
         * @return Builder
         */
        public Builder version(VersionEnum version) {
            this.version = version;
            return this;
        }

        /**
         * Setter for tags.
         * @param  tags  List of String value for tags.
         * @return Builder
         */
        public Builder tags(List<String> tags) {
            this.tags = tags;
            return this;
        }

        /**
         * Setter for operations.
         * @param  operations  List of String value for operations.
         * @return Builder
         */
        public Builder operations(List<String> operations) {
            this.operations = operations;
            return this;
        }

        /**
         * Setter for resources.
         * @param  resources  List of AccessKeyResource value for resources.
         * @return Builder
         */
        public Builder resources(List<AccessKeyResource> resources) {
            this.resources = resources;
            return this;
        }

        /**
         * Builds a new {@link AccessKey} object using the set fields.
         * @return {@link AccessKey}
         */
        public AccessKey build() {
            return new AccessKey(name, key, secret, type, version, tags, operations, resources);
        }
    }
}
