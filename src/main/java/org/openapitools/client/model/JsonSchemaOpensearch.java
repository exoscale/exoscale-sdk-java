/*
 * Exoscale Public API
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@exoscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.OpensearchEmailSenderSettings;
import org.openapitools.client.model.OpensearchISMHistorySettings;
import org.openapitools.client.model.OpensearchSecurityPluginSettings;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * JsonSchemaOpensearch
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-27T17:14:44.205710495Z[Etc/UTC]", comments = "Generator version: 7.5.0-SNAPSHOT")
public class JsonSchemaOpensearch {
  public static final String SERIALIZED_NAME_THREAD_POOL_SEARCH_THROTTLED_SIZE = "thread_pool_search_throttled_size";
  @SerializedName(SERIALIZED_NAME_THREAD_POOL_SEARCH_THROTTLED_SIZE)
  private Integer threadPoolSearchThrottledSize;

  public static final String SERIALIZED_NAME_THREAD_POOL_ANALYZE_SIZE = "thread_pool_analyze_size";
  @SerializedName(SERIALIZED_NAME_THREAD_POOL_ANALYZE_SIZE)
  private Integer threadPoolAnalyzeSize;

  public static final String SERIALIZED_NAME_THREAD_POOL_GET_SIZE = "thread_pool_get_size";
  @SerializedName(SERIALIZED_NAME_THREAD_POOL_GET_SIZE)
  private Integer threadPoolGetSize;

  public static final String SERIALIZED_NAME_THREAD_POOL_GET_QUEUE_SIZE = "thread_pool_get_queue_size";
  @SerializedName(SERIALIZED_NAME_THREAD_POOL_GET_QUEUE_SIZE)
  private Integer threadPoolGetQueueSize;

  public static final String SERIALIZED_NAME_INDICES_RECOVERY_MAX_CONCURRENT_FILE_CHUNKS = "indices_recovery_max_concurrent_file_chunks";
  @SerializedName(SERIALIZED_NAME_INDICES_RECOVERY_MAX_CONCURRENT_FILE_CHUNKS)
  private Integer indicesRecoveryMaxConcurrentFileChunks;

  public static final String SERIALIZED_NAME_INDICES_QUERIES_CACHE_SIZE = "indices_queries_cache_size";
  @SerializedName(SERIALIZED_NAME_INDICES_QUERIES_CACHE_SIZE)
  private Integer indicesQueriesCacheSize;

  public static final String SERIALIZED_NAME_THREAD_POOL_SEARCH_SIZE = "thread_pool_search_size";
  @SerializedName(SERIALIZED_NAME_THREAD_POOL_SEARCH_SIZE)
  private Integer threadPoolSearchSize;

  public static final String SERIALIZED_NAME_INDICES_RECOVERY_MAX_BYTES_PER_SEC = "indices_recovery_max_bytes_per_sec";
  @SerializedName(SERIALIZED_NAME_INDICES_RECOVERY_MAX_BYTES_PER_SEC)
  private Integer indicesRecoveryMaxBytesPerSec;

  public static final String SERIALIZED_NAME_HTTP_MAX_INITIAL_LINE_LENGTH = "http_max_initial_line_length";
  @SerializedName(SERIALIZED_NAME_HTTP_MAX_INITIAL_LINE_LENGTH)
  private Integer httpMaxInitialLineLength;

  public static final String SERIALIZED_NAME_THREAD_POOL_WRITE_QUEUE_SIZE = "thread_pool_write_queue_size";
  @SerializedName(SERIALIZED_NAME_THREAD_POOL_WRITE_QUEUE_SIZE)
  private Integer threadPoolWriteQueueSize;

  public static final String SERIALIZED_NAME_SCRIPT_MAX_COMPILATIONS_RATE = "script_max_compilations_rate";
  @SerializedName(SERIALIZED_NAME_SCRIPT_MAX_COMPILATIONS_RATE)
  private String scriptMaxCompilationsRate;

  public static final String SERIALIZED_NAME_SEARCH_MAX_BUCKETS = "search_max_buckets";
  @SerializedName(SERIALIZED_NAME_SEARCH_MAX_BUCKETS)
  private Integer searchMaxBuckets;

  public static final String SERIALIZED_NAME_REINDEX_REMOTE_WHITELIST = "reindex_remote_whitelist";
  @SerializedName(SERIALIZED_NAME_REINDEX_REMOTE_WHITELIST)
  private List<String> reindexRemoteWhitelist;

  public static final String SERIALIZED_NAME_OVERRIDE_MAIN_RESPONSE_VERSION = "override_main_response_version";
  @SerializedName(SERIALIZED_NAME_OVERRIDE_MAIN_RESPONSE_VERSION)
  private Boolean overrideMainResponseVersion;

  public static final String SERIALIZED_NAME_HTTP_MAX_HEADER_SIZE = "http_max_header_size";
  @SerializedName(SERIALIZED_NAME_HTTP_MAX_HEADER_SIZE)
  private Integer httpMaxHeaderSize;

  public static final String SERIALIZED_NAME_EMAIL_SENDER = "email-sender";
  @SerializedName(SERIALIZED_NAME_EMAIL_SENDER)
  private OpensearchEmailSenderSettings emailSender;

  public static final String SERIALIZED_NAME_INDICES_FIELDDATA_CACHE_SIZE = "indices_fielddata_cache_size";
  @SerializedName(SERIALIZED_NAME_INDICES_FIELDDATA_CACHE_SIZE)
  private Integer indicesFielddataCacheSize;

  public static final String SERIALIZED_NAME_ACTION_DESTRUCTIVE_REQUIRES_NAME = "action_destructive_requires_name";
  @SerializedName(SERIALIZED_NAME_ACTION_DESTRUCTIVE_REQUIRES_NAME)
  private Boolean actionDestructiveRequiresName;

  public static final String SERIALIZED_NAME_INDICES_MEMORY_INDEX_BUFFER_SIZE = "indices_memory_index_buffer_size";
  @SerializedName(SERIALIZED_NAME_INDICES_MEMORY_INDEX_BUFFER_SIZE)
  private Integer indicesMemoryIndexBufferSize;

  public static final String SERIALIZED_NAME_THREAD_POOL_FORCE_MERGE_SIZE = "thread_pool_force_merge_size";
  @SerializedName(SERIALIZED_NAME_THREAD_POOL_FORCE_MERGE_SIZE)
  private Integer threadPoolForceMergeSize;

  public static final String SERIALIZED_NAME_AUTH_FAILURE_LISTENERS = "auth_failure_listeners";
  @SerializedName(SERIALIZED_NAME_AUTH_FAILURE_LISTENERS)
  private OpensearchSecurityPluginSettings authFailureListeners;

  public static final String SERIALIZED_NAME_ISM_HISTORY = "ism-history";
  @SerializedName(SERIALIZED_NAME_ISM_HISTORY)
  private OpensearchISMHistorySettings ismHistory;

  public static final String SERIALIZED_NAME_CLUSTER_ROUTING_ALLOCATION_NODE_CONCURRENT_RECOVERIES = "cluster_routing_allocation_node_concurrent_recoveries";
  @SerializedName(SERIALIZED_NAME_CLUSTER_ROUTING_ALLOCATION_NODE_CONCURRENT_RECOVERIES)
  private Integer clusterRoutingAllocationNodeConcurrentRecoveries;

  public static final String SERIALIZED_NAME_THREAD_POOL_ANALYZE_QUEUE_SIZE = "thread_pool_analyze_queue_size";
  @SerializedName(SERIALIZED_NAME_THREAD_POOL_ANALYZE_QUEUE_SIZE)
  private Integer threadPoolAnalyzeQueueSize;

  public static final String SERIALIZED_NAME_ACTION_AUTO_CREATE_INDEX_ENABLED = "action_auto_create_index_enabled";
  @SerializedName(SERIALIZED_NAME_ACTION_AUTO_CREATE_INDEX_ENABLED)
  private Boolean actionAutoCreateIndexEnabled;

  public static final String SERIALIZED_NAME_HTTP_MAX_CONTENT_LENGTH = "http_max_content_length";
  @SerializedName(SERIALIZED_NAME_HTTP_MAX_CONTENT_LENGTH)
  private Integer httpMaxContentLength;

  public static final String SERIALIZED_NAME_THREAD_POOL_WRITE_SIZE = "thread_pool_write_size";
  @SerializedName(SERIALIZED_NAME_THREAD_POOL_WRITE_SIZE)
  private Integer threadPoolWriteSize;

  public static final String SERIALIZED_NAME_THREAD_POOL_SEARCH_QUEUE_SIZE = "thread_pool_search_queue_size";
  @SerializedName(SERIALIZED_NAME_THREAD_POOL_SEARCH_QUEUE_SIZE)
  private Integer threadPoolSearchQueueSize;

  public static final String SERIALIZED_NAME_INDICES_QUERY_BOOL_MAX_CLAUSE_COUNT = "indices_query_bool_max_clause_count";
  @SerializedName(SERIALIZED_NAME_INDICES_QUERY_BOOL_MAX_CLAUSE_COUNT)
  private Integer indicesQueryBoolMaxClauseCount;

  public static final String SERIALIZED_NAME_THREAD_POOL_SEARCH_THROTTLED_QUEUE_SIZE = "thread_pool_search_throttled_queue_size";
  @SerializedName(SERIALIZED_NAME_THREAD_POOL_SEARCH_THROTTLED_QUEUE_SIZE)
  private Integer threadPoolSearchThrottledQueueSize;

  public static final String SERIALIZED_NAME_CLUSTER_MAX_SHARDS_PER_NODE = "cluster_max_shards_per_node";
  @SerializedName(SERIALIZED_NAME_CLUSTER_MAX_SHARDS_PER_NODE)
  private Integer clusterMaxShardsPerNode;

  public JsonSchemaOpensearch() {
  }

  public JsonSchemaOpensearch threadPoolSearchThrottledSize(Integer threadPoolSearchThrottledSize) {
    this.threadPoolSearchThrottledSize = threadPoolSearchThrottledSize;
    return this;
  }

   /**
   * Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
   * minimum: 1
   * maximum: 128
   * @return threadPoolSearchThrottledSize
  **/
  @javax.annotation.Nullable
  public Integer getThreadPoolSearchThrottledSize() {
    return threadPoolSearchThrottledSize;
  }

  public void setThreadPoolSearchThrottledSize(Integer threadPoolSearchThrottledSize) {
    this.threadPoolSearchThrottledSize = threadPoolSearchThrottledSize;
  }


  public JsonSchemaOpensearch threadPoolAnalyzeSize(Integer threadPoolAnalyzeSize) {
    this.threadPoolAnalyzeSize = threadPoolAnalyzeSize;
    return this;
  }

   /**
   * Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
   * minimum: 1
   * maximum: 128
   * @return threadPoolAnalyzeSize
  **/
  @javax.annotation.Nullable
  public Integer getThreadPoolAnalyzeSize() {
    return threadPoolAnalyzeSize;
  }

  public void setThreadPoolAnalyzeSize(Integer threadPoolAnalyzeSize) {
    this.threadPoolAnalyzeSize = threadPoolAnalyzeSize;
  }


  public JsonSchemaOpensearch threadPoolGetSize(Integer threadPoolGetSize) {
    this.threadPoolGetSize = threadPoolGetSize;
    return this;
  }

   /**
   * Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
   * minimum: 1
   * maximum: 128
   * @return threadPoolGetSize
  **/
  @javax.annotation.Nullable
  public Integer getThreadPoolGetSize() {
    return threadPoolGetSize;
  }

  public void setThreadPoolGetSize(Integer threadPoolGetSize) {
    this.threadPoolGetSize = threadPoolGetSize;
  }


  public JsonSchemaOpensearch threadPoolGetQueueSize(Integer threadPoolGetQueueSize) {
    this.threadPoolGetQueueSize = threadPoolGetQueueSize;
    return this;
  }

   /**
   * Size for the thread pool queue. See documentation for exact details.
   * minimum: 10
   * maximum: 2000
   * @return threadPoolGetQueueSize
  **/
  @javax.annotation.Nullable
  public Integer getThreadPoolGetQueueSize() {
    return threadPoolGetQueueSize;
  }

  public void setThreadPoolGetQueueSize(Integer threadPoolGetQueueSize) {
    this.threadPoolGetQueueSize = threadPoolGetQueueSize;
  }


  public JsonSchemaOpensearch indicesRecoveryMaxConcurrentFileChunks(Integer indicesRecoveryMaxConcurrentFileChunks) {
    this.indicesRecoveryMaxConcurrentFileChunks = indicesRecoveryMaxConcurrentFileChunks;
    return this;
  }

   /**
   * Number of file chunks sent in parallel for each recovery. Defaults to 2.
   * minimum: 2
   * maximum: 5
   * @return indicesRecoveryMaxConcurrentFileChunks
  **/
  @javax.annotation.Nullable
  public Integer getIndicesRecoveryMaxConcurrentFileChunks() {
    return indicesRecoveryMaxConcurrentFileChunks;
  }

  public void setIndicesRecoveryMaxConcurrentFileChunks(Integer indicesRecoveryMaxConcurrentFileChunks) {
    this.indicesRecoveryMaxConcurrentFileChunks = indicesRecoveryMaxConcurrentFileChunks;
  }


  public JsonSchemaOpensearch indicesQueriesCacheSize(Integer indicesQueriesCacheSize) {
    this.indicesQueriesCacheSize = indicesQueriesCacheSize;
    return this;
  }

   /**
   * Percentage value. Default is 10%. Maximum amount of heap used for query cache. This is an expert setting. Too low value will decrease query performance and increase performance for other operations; too high value will cause issues with other OpenSearch functionality.
   * minimum: 3
   * maximum: 40
   * @return indicesQueriesCacheSize
  **/
  @javax.annotation.Nullable
  public Integer getIndicesQueriesCacheSize() {
    return indicesQueriesCacheSize;
  }

  public void setIndicesQueriesCacheSize(Integer indicesQueriesCacheSize) {
    this.indicesQueriesCacheSize = indicesQueriesCacheSize;
  }


  public JsonSchemaOpensearch threadPoolSearchSize(Integer threadPoolSearchSize) {
    this.threadPoolSearchSize = threadPoolSearchSize;
    return this;
  }

   /**
   * Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
   * minimum: 1
   * maximum: 128
   * @return threadPoolSearchSize
  **/
  @javax.annotation.Nullable
  public Integer getThreadPoolSearchSize() {
    return threadPoolSearchSize;
  }

  public void setThreadPoolSearchSize(Integer threadPoolSearchSize) {
    this.threadPoolSearchSize = threadPoolSearchSize;
  }


  public JsonSchemaOpensearch indicesRecoveryMaxBytesPerSec(Integer indicesRecoveryMaxBytesPerSec) {
    this.indicesRecoveryMaxBytesPerSec = indicesRecoveryMaxBytesPerSec;
    return this;
  }

   /**
   * Limits total inbound and outbound recovery traffic for each node. Applies to both peer recoveries as well as snapshot recoveries (i.e., restores from a snapshot). Defaults to 40mb
   * minimum: 40
   * maximum: 400
   * @return indicesRecoveryMaxBytesPerSec
  **/
  @javax.annotation.Nullable
  public Integer getIndicesRecoveryMaxBytesPerSec() {
    return indicesRecoveryMaxBytesPerSec;
  }

  public void setIndicesRecoveryMaxBytesPerSec(Integer indicesRecoveryMaxBytesPerSec) {
    this.indicesRecoveryMaxBytesPerSec = indicesRecoveryMaxBytesPerSec;
  }


  public JsonSchemaOpensearch httpMaxInitialLineLength(Integer httpMaxInitialLineLength) {
    this.httpMaxInitialLineLength = httpMaxInitialLineLength;
    return this;
  }

   /**
   * The max length of an HTTP URL, in bytes
   * minimum: 1024
   * maximum: 65536
   * @return httpMaxInitialLineLength
  **/
  @javax.annotation.Nullable
  public Integer getHttpMaxInitialLineLength() {
    return httpMaxInitialLineLength;
  }

  public void setHttpMaxInitialLineLength(Integer httpMaxInitialLineLength) {
    this.httpMaxInitialLineLength = httpMaxInitialLineLength;
  }


  public JsonSchemaOpensearch threadPoolWriteQueueSize(Integer threadPoolWriteQueueSize) {
    this.threadPoolWriteQueueSize = threadPoolWriteQueueSize;
    return this;
  }

   /**
   * Size for the thread pool queue. See documentation for exact details.
   * minimum: 10
   * maximum: 2000
   * @return threadPoolWriteQueueSize
  **/
  @javax.annotation.Nullable
  public Integer getThreadPoolWriteQueueSize() {
    return threadPoolWriteQueueSize;
  }

  public void setThreadPoolWriteQueueSize(Integer threadPoolWriteQueueSize) {
    this.threadPoolWriteQueueSize = threadPoolWriteQueueSize;
  }


  public JsonSchemaOpensearch scriptMaxCompilationsRate(String scriptMaxCompilationsRate) {
    this.scriptMaxCompilationsRate = scriptMaxCompilationsRate;
    return this;
  }

   /**
   * Script compilation circuit breaker limits the number of inline script compilations within a period of time. Default is use-context
   * @return scriptMaxCompilationsRate
  **/
  @javax.annotation.Nullable
  public String getScriptMaxCompilationsRate() {
    return scriptMaxCompilationsRate;
  }

  public void setScriptMaxCompilationsRate(String scriptMaxCompilationsRate) {
    this.scriptMaxCompilationsRate = scriptMaxCompilationsRate;
  }


  public JsonSchemaOpensearch searchMaxBuckets(Integer searchMaxBuckets) {
    this.searchMaxBuckets = searchMaxBuckets;
    return this;
  }

   /**
   * Maximum number of aggregation buckets allowed in a single response. OpenSearch default value is used when this is not defined.
   * minimum: 1
   * maximum: 65536
   * @return searchMaxBuckets
  **/
  @javax.annotation.Nullable
  public Integer getSearchMaxBuckets() {
    return searchMaxBuckets;
  }

  public void setSearchMaxBuckets(Integer searchMaxBuckets) {
    this.searchMaxBuckets = searchMaxBuckets;
  }


  public JsonSchemaOpensearch reindexRemoteWhitelist(List<String> reindexRemoteWhitelist) {
    this.reindexRemoteWhitelist = reindexRemoteWhitelist;
    return this;
  }

  public JsonSchemaOpensearch addReindexRemoteWhitelistItem(String reindexRemoteWhitelistItem) {
    if (this.reindexRemoteWhitelist == null) {
      this.reindexRemoteWhitelist = new ArrayList<>();
    }
    this.reindexRemoteWhitelist.add(reindexRemoteWhitelistItem);
    return this;
  }

   /**
   * Whitelisted addresses for reindexing. Changing this value will cause all OpenSearch instances to restart.
   * @return reindexRemoteWhitelist
  **/
  @javax.annotation.Nullable
  public List<String> getReindexRemoteWhitelist() {
    return reindexRemoteWhitelist;
  }

  public void setReindexRemoteWhitelist(List<String> reindexRemoteWhitelist) {
    this.reindexRemoteWhitelist = reindexRemoteWhitelist;
  }


  public JsonSchemaOpensearch overrideMainResponseVersion(Boolean overrideMainResponseVersion) {
    this.overrideMainResponseVersion = overrideMainResponseVersion;
    return this;
  }

   /**
   * Compatibility mode sets OpenSearch to report its version as 7.10 so clients continue to work. Default is false
   * @return overrideMainResponseVersion
  **/
  @javax.annotation.Nullable
  public Boolean getOverrideMainResponseVersion() {
    return overrideMainResponseVersion;
  }

  public void setOverrideMainResponseVersion(Boolean overrideMainResponseVersion) {
    this.overrideMainResponseVersion = overrideMainResponseVersion;
  }


  public JsonSchemaOpensearch httpMaxHeaderSize(Integer httpMaxHeaderSize) {
    this.httpMaxHeaderSize = httpMaxHeaderSize;
    return this;
  }

   /**
   * The max size of allowed headers, in bytes
   * minimum: 1024
   * maximum: 262144
   * @return httpMaxHeaderSize
  **/
  @javax.annotation.Nullable
  public Integer getHttpMaxHeaderSize() {
    return httpMaxHeaderSize;
  }

  public void setHttpMaxHeaderSize(Integer httpMaxHeaderSize) {
    this.httpMaxHeaderSize = httpMaxHeaderSize;
  }


  public JsonSchemaOpensearch emailSender(OpensearchEmailSenderSettings emailSender) {
    this.emailSender = emailSender;
    return this;
  }

   /**
   * Get emailSender
   * @return emailSender
  **/
  @javax.annotation.Nullable
  public OpensearchEmailSenderSettings getEmailSender() {
    return emailSender;
  }

  public void setEmailSender(OpensearchEmailSenderSettings emailSender) {
    this.emailSender = emailSender;
  }


  public JsonSchemaOpensearch indicesFielddataCacheSize(Integer indicesFielddataCacheSize) {
    this.indicesFielddataCacheSize = indicesFielddataCacheSize;
    return this;
  }

   /**
   * Relative amount. Maximum amount of heap memory used for field data cache. This is an expert setting; decreasing the value too much will increase overhead of loading field data; too much memory used for field data cache will decrease amount of heap available for other operations.
   * minimum: 3
   * maximum: 100
   * @return indicesFielddataCacheSize
  **/
  @javax.annotation.Nullable
  public Integer getIndicesFielddataCacheSize() {
    return indicesFielddataCacheSize;
  }

  public void setIndicesFielddataCacheSize(Integer indicesFielddataCacheSize) {
    this.indicesFielddataCacheSize = indicesFielddataCacheSize;
  }


  public JsonSchemaOpensearch actionDestructiveRequiresName(Boolean actionDestructiveRequiresName) {
    this.actionDestructiveRequiresName = actionDestructiveRequiresName;
    return this;
  }

   /**
   * Get actionDestructiveRequiresName
   * @return actionDestructiveRequiresName
  **/
  @javax.annotation.Nullable
  public Boolean getActionDestructiveRequiresName() {
    return actionDestructiveRequiresName;
  }

  public void setActionDestructiveRequiresName(Boolean actionDestructiveRequiresName) {
    this.actionDestructiveRequiresName = actionDestructiveRequiresName;
  }


  public JsonSchemaOpensearch indicesMemoryIndexBufferSize(Integer indicesMemoryIndexBufferSize) {
    this.indicesMemoryIndexBufferSize = indicesMemoryIndexBufferSize;
    return this;
  }

   /**
   * Percentage value. Default is 10%. Total amount of heap used for indexing buffer, before writing segments to disk. This is an expert setting. Too low value will slow down indexing; too high value will increase indexing performance but causes performance issues for query performance.
   * minimum: 3
   * maximum: 40
   * @return indicesMemoryIndexBufferSize
  **/
  @javax.annotation.Nullable
  public Integer getIndicesMemoryIndexBufferSize() {
    return indicesMemoryIndexBufferSize;
  }

  public void setIndicesMemoryIndexBufferSize(Integer indicesMemoryIndexBufferSize) {
    this.indicesMemoryIndexBufferSize = indicesMemoryIndexBufferSize;
  }


  public JsonSchemaOpensearch threadPoolForceMergeSize(Integer threadPoolForceMergeSize) {
    this.threadPoolForceMergeSize = threadPoolForceMergeSize;
    return this;
  }

   /**
   * Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
   * minimum: 1
   * maximum: 128
   * @return threadPoolForceMergeSize
  **/
  @javax.annotation.Nullable
  public Integer getThreadPoolForceMergeSize() {
    return threadPoolForceMergeSize;
  }

  public void setThreadPoolForceMergeSize(Integer threadPoolForceMergeSize) {
    this.threadPoolForceMergeSize = threadPoolForceMergeSize;
  }


  public JsonSchemaOpensearch authFailureListeners(OpensearchSecurityPluginSettings authFailureListeners) {
    this.authFailureListeners = authFailureListeners;
    return this;
  }

   /**
   * Get authFailureListeners
   * @return authFailureListeners
  **/
  @javax.annotation.Nullable
  public OpensearchSecurityPluginSettings getAuthFailureListeners() {
    return authFailureListeners;
  }

  public void setAuthFailureListeners(OpensearchSecurityPluginSettings authFailureListeners) {
    this.authFailureListeners = authFailureListeners;
  }


  public JsonSchemaOpensearch ismHistory(OpensearchISMHistorySettings ismHistory) {
    this.ismHistory = ismHistory;
    return this;
  }

   /**
   * Get ismHistory
   * @return ismHistory
  **/
  @javax.annotation.Nullable
  public OpensearchISMHistorySettings getIsmHistory() {
    return ismHistory;
  }

  public void setIsmHistory(OpensearchISMHistorySettings ismHistory) {
    this.ismHistory = ismHistory;
  }


  public JsonSchemaOpensearch clusterRoutingAllocationNodeConcurrentRecoveries(Integer clusterRoutingAllocationNodeConcurrentRecoveries) {
    this.clusterRoutingAllocationNodeConcurrentRecoveries = clusterRoutingAllocationNodeConcurrentRecoveries;
    return this;
  }

   /**
   * How many concurrent incoming/outgoing shard recoveries (normally replicas) are allowed to happen on a node. Defaults to 2.
   * minimum: 2
   * maximum: 16
   * @return clusterRoutingAllocationNodeConcurrentRecoveries
  **/
  @javax.annotation.Nullable
  public Integer getClusterRoutingAllocationNodeConcurrentRecoveries() {
    return clusterRoutingAllocationNodeConcurrentRecoveries;
  }

  public void setClusterRoutingAllocationNodeConcurrentRecoveries(Integer clusterRoutingAllocationNodeConcurrentRecoveries) {
    this.clusterRoutingAllocationNodeConcurrentRecoveries = clusterRoutingAllocationNodeConcurrentRecoveries;
  }


  public JsonSchemaOpensearch threadPoolAnalyzeQueueSize(Integer threadPoolAnalyzeQueueSize) {
    this.threadPoolAnalyzeQueueSize = threadPoolAnalyzeQueueSize;
    return this;
  }

   /**
   * Size for the thread pool queue. See documentation for exact details.
   * minimum: 10
   * maximum: 2000
   * @return threadPoolAnalyzeQueueSize
  **/
  @javax.annotation.Nullable
  public Integer getThreadPoolAnalyzeQueueSize() {
    return threadPoolAnalyzeQueueSize;
  }

  public void setThreadPoolAnalyzeQueueSize(Integer threadPoolAnalyzeQueueSize) {
    this.threadPoolAnalyzeQueueSize = threadPoolAnalyzeQueueSize;
  }


  public JsonSchemaOpensearch actionAutoCreateIndexEnabled(Boolean actionAutoCreateIndexEnabled) {
    this.actionAutoCreateIndexEnabled = actionAutoCreateIndexEnabled;
    return this;
  }

   /**
   * Explicitly allow or block automatic creation of indices. Defaults to true
   * @return actionAutoCreateIndexEnabled
  **/
  @javax.annotation.Nullable
  public Boolean getActionAutoCreateIndexEnabled() {
    return actionAutoCreateIndexEnabled;
  }

  public void setActionAutoCreateIndexEnabled(Boolean actionAutoCreateIndexEnabled) {
    this.actionAutoCreateIndexEnabled = actionAutoCreateIndexEnabled;
  }


  public JsonSchemaOpensearch httpMaxContentLength(Integer httpMaxContentLength) {
    this.httpMaxContentLength = httpMaxContentLength;
    return this;
  }

   /**
   * Maximum content length for HTTP requests to the OpenSearch HTTP API, in bytes.
   * minimum: 1
   * maximum: 2147483647
   * @return httpMaxContentLength
  **/
  @javax.annotation.Nullable
  public Integer getHttpMaxContentLength() {
    return httpMaxContentLength;
  }

  public void setHttpMaxContentLength(Integer httpMaxContentLength) {
    this.httpMaxContentLength = httpMaxContentLength;
  }


  public JsonSchemaOpensearch threadPoolWriteSize(Integer threadPoolWriteSize) {
    this.threadPoolWriteSize = threadPoolWriteSize;
    return this;
  }

   /**
   * Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
   * minimum: 1
   * maximum: 128
   * @return threadPoolWriteSize
  **/
  @javax.annotation.Nullable
  public Integer getThreadPoolWriteSize() {
    return threadPoolWriteSize;
  }

  public void setThreadPoolWriteSize(Integer threadPoolWriteSize) {
    this.threadPoolWriteSize = threadPoolWriteSize;
  }


  public JsonSchemaOpensearch threadPoolSearchQueueSize(Integer threadPoolSearchQueueSize) {
    this.threadPoolSearchQueueSize = threadPoolSearchQueueSize;
    return this;
  }

   /**
   * Size for the thread pool queue. See documentation for exact details.
   * minimum: 10
   * maximum: 2000
   * @return threadPoolSearchQueueSize
  **/
  @javax.annotation.Nullable
  public Integer getThreadPoolSearchQueueSize() {
    return threadPoolSearchQueueSize;
  }

  public void setThreadPoolSearchQueueSize(Integer threadPoolSearchQueueSize) {
    this.threadPoolSearchQueueSize = threadPoolSearchQueueSize;
  }


  public JsonSchemaOpensearch indicesQueryBoolMaxClauseCount(Integer indicesQueryBoolMaxClauseCount) {
    this.indicesQueryBoolMaxClauseCount = indicesQueryBoolMaxClauseCount;
    return this;
  }

   /**
   * Maximum number of clauses Lucene BooleanQuery can have. The default value (1024) is relatively high, and increasing it may cause performance issues. Investigate other approaches first before increasing this value.
   * minimum: 64
   * maximum: 4096
   * @return indicesQueryBoolMaxClauseCount
  **/
  @javax.annotation.Nullable
  public Integer getIndicesQueryBoolMaxClauseCount() {
    return indicesQueryBoolMaxClauseCount;
  }

  public void setIndicesQueryBoolMaxClauseCount(Integer indicesQueryBoolMaxClauseCount) {
    this.indicesQueryBoolMaxClauseCount = indicesQueryBoolMaxClauseCount;
  }


  public JsonSchemaOpensearch threadPoolSearchThrottledQueueSize(Integer threadPoolSearchThrottledQueueSize) {
    this.threadPoolSearchThrottledQueueSize = threadPoolSearchThrottledQueueSize;
    return this;
  }

   /**
   * Size for the thread pool queue. See documentation for exact details.
   * minimum: 10
   * maximum: 2000
   * @return threadPoolSearchThrottledQueueSize
  **/
  @javax.annotation.Nullable
  public Integer getThreadPoolSearchThrottledQueueSize() {
    return threadPoolSearchThrottledQueueSize;
  }

  public void setThreadPoolSearchThrottledQueueSize(Integer threadPoolSearchThrottledQueueSize) {
    this.threadPoolSearchThrottledQueueSize = threadPoolSearchThrottledQueueSize;
  }


  public JsonSchemaOpensearch clusterMaxShardsPerNode(Integer clusterMaxShardsPerNode) {
    this.clusterMaxShardsPerNode = clusterMaxShardsPerNode;
    return this;
  }

   /**
   * Controls the number of shards allowed in the cluster per data node
   * minimum: 100
   * maximum: 10000
   * @return clusterMaxShardsPerNode
  **/
  @javax.annotation.Nullable
  public Integer getClusterMaxShardsPerNode() {
    return clusterMaxShardsPerNode;
  }

  public void setClusterMaxShardsPerNode(Integer clusterMaxShardsPerNode) {
    this.clusterMaxShardsPerNode = clusterMaxShardsPerNode;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JsonSchemaOpensearch jsonSchemaOpensearch = (JsonSchemaOpensearch) o;
    return Objects.equals(this.threadPoolSearchThrottledSize, jsonSchemaOpensearch.threadPoolSearchThrottledSize) &&
        Objects.equals(this.threadPoolAnalyzeSize, jsonSchemaOpensearch.threadPoolAnalyzeSize) &&
        Objects.equals(this.threadPoolGetSize, jsonSchemaOpensearch.threadPoolGetSize) &&
        Objects.equals(this.threadPoolGetQueueSize, jsonSchemaOpensearch.threadPoolGetQueueSize) &&
        Objects.equals(this.indicesRecoveryMaxConcurrentFileChunks, jsonSchemaOpensearch.indicesRecoveryMaxConcurrentFileChunks) &&
        Objects.equals(this.indicesQueriesCacheSize, jsonSchemaOpensearch.indicesQueriesCacheSize) &&
        Objects.equals(this.threadPoolSearchSize, jsonSchemaOpensearch.threadPoolSearchSize) &&
        Objects.equals(this.indicesRecoveryMaxBytesPerSec, jsonSchemaOpensearch.indicesRecoveryMaxBytesPerSec) &&
        Objects.equals(this.httpMaxInitialLineLength, jsonSchemaOpensearch.httpMaxInitialLineLength) &&
        Objects.equals(this.threadPoolWriteQueueSize, jsonSchemaOpensearch.threadPoolWriteQueueSize) &&
        Objects.equals(this.scriptMaxCompilationsRate, jsonSchemaOpensearch.scriptMaxCompilationsRate) &&
        Objects.equals(this.searchMaxBuckets, jsonSchemaOpensearch.searchMaxBuckets) &&
        Objects.equals(this.reindexRemoteWhitelist, jsonSchemaOpensearch.reindexRemoteWhitelist) &&
        Objects.equals(this.overrideMainResponseVersion, jsonSchemaOpensearch.overrideMainResponseVersion) &&
        Objects.equals(this.httpMaxHeaderSize, jsonSchemaOpensearch.httpMaxHeaderSize) &&
        Objects.equals(this.emailSender, jsonSchemaOpensearch.emailSender) &&
        Objects.equals(this.indicesFielddataCacheSize, jsonSchemaOpensearch.indicesFielddataCacheSize) &&
        Objects.equals(this.actionDestructiveRequiresName, jsonSchemaOpensearch.actionDestructiveRequiresName) &&
        Objects.equals(this.indicesMemoryIndexBufferSize, jsonSchemaOpensearch.indicesMemoryIndexBufferSize) &&
        Objects.equals(this.threadPoolForceMergeSize, jsonSchemaOpensearch.threadPoolForceMergeSize) &&
        Objects.equals(this.authFailureListeners, jsonSchemaOpensearch.authFailureListeners) &&
        Objects.equals(this.ismHistory, jsonSchemaOpensearch.ismHistory) &&
        Objects.equals(this.clusterRoutingAllocationNodeConcurrentRecoveries, jsonSchemaOpensearch.clusterRoutingAllocationNodeConcurrentRecoveries) &&
        Objects.equals(this.threadPoolAnalyzeQueueSize, jsonSchemaOpensearch.threadPoolAnalyzeQueueSize) &&
        Objects.equals(this.actionAutoCreateIndexEnabled, jsonSchemaOpensearch.actionAutoCreateIndexEnabled) &&
        Objects.equals(this.httpMaxContentLength, jsonSchemaOpensearch.httpMaxContentLength) &&
        Objects.equals(this.threadPoolWriteSize, jsonSchemaOpensearch.threadPoolWriteSize) &&
        Objects.equals(this.threadPoolSearchQueueSize, jsonSchemaOpensearch.threadPoolSearchQueueSize) &&
        Objects.equals(this.indicesQueryBoolMaxClauseCount, jsonSchemaOpensearch.indicesQueryBoolMaxClauseCount) &&
        Objects.equals(this.threadPoolSearchThrottledQueueSize, jsonSchemaOpensearch.threadPoolSearchThrottledQueueSize) &&
        Objects.equals(this.clusterMaxShardsPerNode, jsonSchemaOpensearch.clusterMaxShardsPerNode);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(threadPoolSearchThrottledSize, threadPoolAnalyzeSize, threadPoolGetSize, threadPoolGetQueueSize, indicesRecoveryMaxConcurrentFileChunks, indicesQueriesCacheSize, threadPoolSearchSize, indicesRecoveryMaxBytesPerSec, httpMaxInitialLineLength, threadPoolWriteQueueSize, scriptMaxCompilationsRate, searchMaxBuckets, reindexRemoteWhitelist, overrideMainResponseVersion, httpMaxHeaderSize, emailSender, indicesFielddataCacheSize, actionDestructiveRequiresName, indicesMemoryIndexBufferSize, threadPoolForceMergeSize, authFailureListeners, ismHistory, clusterRoutingAllocationNodeConcurrentRecoveries, threadPoolAnalyzeQueueSize, actionAutoCreateIndexEnabled, httpMaxContentLength, threadPoolWriteSize, threadPoolSearchQueueSize, indicesQueryBoolMaxClauseCount, threadPoolSearchThrottledQueueSize, clusterMaxShardsPerNode);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JsonSchemaOpensearch {\n");
    sb.append("    threadPoolSearchThrottledSize: ").append(toIndentedString(threadPoolSearchThrottledSize)).append("\n");
    sb.append("    threadPoolAnalyzeSize: ").append(toIndentedString(threadPoolAnalyzeSize)).append("\n");
    sb.append("    threadPoolGetSize: ").append(toIndentedString(threadPoolGetSize)).append("\n");
    sb.append("    threadPoolGetQueueSize: ").append(toIndentedString(threadPoolGetQueueSize)).append("\n");
    sb.append("    indicesRecoveryMaxConcurrentFileChunks: ").append(toIndentedString(indicesRecoveryMaxConcurrentFileChunks)).append("\n");
    sb.append("    indicesQueriesCacheSize: ").append(toIndentedString(indicesQueriesCacheSize)).append("\n");
    sb.append("    threadPoolSearchSize: ").append(toIndentedString(threadPoolSearchSize)).append("\n");
    sb.append("    indicesRecoveryMaxBytesPerSec: ").append(toIndentedString(indicesRecoveryMaxBytesPerSec)).append("\n");
    sb.append("    httpMaxInitialLineLength: ").append(toIndentedString(httpMaxInitialLineLength)).append("\n");
    sb.append("    threadPoolWriteQueueSize: ").append(toIndentedString(threadPoolWriteQueueSize)).append("\n");
    sb.append("    scriptMaxCompilationsRate: ").append(toIndentedString(scriptMaxCompilationsRate)).append("\n");
    sb.append("    searchMaxBuckets: ").append(toIndentedString(searchMaxBuckets)).append("\n");
    sb.append("    reindexRemoteWhitelist: ").append(toIndentedString(reindexRemoteWhitelist)).append("\n");
    sb.append("    overrideMainResponseVersion: ").append(toIndentedString(overrideMainResponseVersion)).append("\n");
    sb.append("    httpMaxHeaderSize: ").append(toIndentedString(httpMaxHeaderSize)).append("\n");
    sb.append("    emailSender: ").append(toIndentedString(emailSender)).append("\n");
    sb.append("    indicesFielddataCacheSize: ").append(toIndentedString(indicesFielddataCacheSize)).append("\n");
    sb.append("    actionDestructiveRequiresName: ").append(toIndentedString(actionDestructiveRequiresName)).append("\n");
    sb.append("    indicesMemoryIndexBufferSize: ").append(toIndentedString(indicesMemoryIndexBufferSize)).append("\n");
    sb.append("    threadPoolForceMergeSize: ").append(toIndentedString(threadPoolForceMergeSize)).append("\n");
    sb.append("    authFailureListeners: ").append(toIndentedString(authFailureListeners)).append("\n");
    sb.append("    ismHistory: ").append(toIndentedString(ismHistory)).append("\n");
    sb.append("    clusterRoutingAllocationNodeConcurrentRecoveries: ").append(toIndentedString(clusterRoutingAllocationNodeConcurrentRecoveries)).append("\n");
    sb.append("    threadPoolAnalyzeQueueSize: ").append(toIndentedString(threadPoolAnalyzeQueueSize)).append("\n");
    sb.append("    actionAutoCreateIndexEnabled: ").append(toIndentedString(actionAutoCreateIndexEnabled)).append("\n");
    sb.append("    httpMaxContentLength: ").append(toIndentedString(httpMaxContentLength)).append("\n");
    sb.append("    threadPoolWriteSize: ").append(toIndentedString(threadPoolWriteSize)).append("\n");
    sb.append("    threadPoolSearchQueueSize: ").append(toIndentedString(threadPoolSearchQueueSize)).append("\n");
    sb.append("    indicesQueryBoolMaxClauseCount: ").append(toIndentedString(indicesQueryBoolMaxClauseCount)).append("\n");
    sb.append("    threadPoolSearchThrottledQueueSize: ").append(toIndentedString(threadPoolSearchThrottledQueueSize)).append("\n");
    sb.append("    clusterMaxShardsPerNode: ").append(toIndentedString(clusterMaxShardsPerNode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("thread_pool_search_throttled_size");
    openapiFields.add("thread_pool_analyze_size");
    openapiFields.add("thread_pool_get_size");
    openapiFields.add("thread_pool_get_queue_size");
    openapiFields.add("indices_recovery_max_concurrent_file_chunks");
    openapiFields.add("indices_queries_cache_size");
    openapiFields.add("thread_pool_search_size");
    openapiFields.add("indices_recovery_max_bytes_per_sec");
    openapiFields.add("http_max_initial_line_length");
    openapiFields.add("thread_pool_write_queue_size");
    openapiFields.add("script_max_compilations_rate");
    openapiFields.add("search_max_buckets");
    openapiFields.add("reindex_remote_whitelist");
    openapiFields.add("override_main_response_version");
    openapiFields.add("http_max_header_size");
    openapiFields.add("email-sender");
    openapiFields.add("indices_fielddata_cache_size");
    openapiFields.add("action_destructive_requires_name");
    openapiFields.add("indices_memory_index_buffer_size");
    openapiFields.add("thread_pool_force_merge_size");
    openapiFields.add("auth_failure_listeners");
    openapiFields.add("ism-history");
    openapiFields.add("cluster_routing_allocation_node_concurrent_recoveries");
    openapiFields.add("thread_pool_analyze_queue_size");
    openapiFields.add("action_auto_create_index_enabled");
    openapiFields.add("http_max_content_length");
    openapiFields.add("thread_pool_write_size");
    openapiFields.add("thread_pool_search_queue_size");
    openapiFields.add("indices_query_bool_max_clause_count");
    openapiFields.add("thread_pool_search_throttled_queue_size");
    openapiFields.add("cluster_max_shards_per_node");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to JsonSchemaOpensearch
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!JsonSchemaOpensearch.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in JsonSchemaOpensearch is not found in the empty JSON string", JsonSchemaOpensearch.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!JsonSchemaOpensearch.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `JsonSchemaOpensearch` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("script_max_compilations_rate") != null && !jsonObj.get("script_max_compilations_rate").isJsonNull()) && !jsonObj.get("script_max_compilations_rate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `script_max_compilations_rate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("script_max_compilations_rate").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("reindex_remote_whitelist") != null && !jsonObj.get("reindex_remote_whitelist").isJsonNull() && !jsonObj.get("reindex_remote_whitelist").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `reindex_remote_whitelist` to be an array in the JSON string but got `%s`", jsonObj.get("reindex_remote_whitelist").toString()));
      }
      // validate the optional field `email-sender`
      if (jsonObj.get("email-sender") != null && !jsonObj.get("email-sender").isJsonNull()) {
        OpensearchEmailSenderSettings.validateJsonElement(jsonObj.get("email-sender"));
      }
      // validate the optional field `auth_failure_listeners`
      if (jsonObj.get("auth_failure_listeners") != null && !jsonObj.get("auth_failure_listeners").isJsonNull()) {
        OpensearchSecurityPluginSettings.validateJsonElement(jsonObj.get("auth_failure_listeners"));
      }
      // validate the optional field `ism-history`
      if (jsonObj.get("ism-history") != null && !jsonObj.get("ism-history").isJsonNull()) {
        OpensearchISMHistorySettings.validateJsonElement(jsonObj.get("ism-history"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!JsonSchemaOpensearch.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'JsonSchemaOpensearch' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<JsonSchemaOpensearch> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(JsonSchemaOpensearch.class));

       return (TypeAdapter<T>) new TypeAdapter<JsonSchemaOpensearch>() {
           @Override
           public void write(JsonWriter out, JsonSchemaOpensearch value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public JsonSchemaOpensearch read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of JsonSchemaOpensearch given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of JsonSchemaOpensearch
  * @throws IOException if the JSON string is invalid with respect to JsonSchemaOpensearch
  */
  public static JsonSchemaOpensearch fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, JsonSchemaOpensearch.class);
  }

 /**
  * Convert an instance of JsonSchemaOpensearch to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

