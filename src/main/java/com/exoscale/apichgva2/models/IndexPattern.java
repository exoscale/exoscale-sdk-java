/*
 * ExoscalePublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.exoscale.apichgva2.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for IndexPattern type.
 */
public class IndexPattern {
    private Long maxIndexCount;
    private SortingAlgorithmEnum sortingAlgorithm;
    private String pattern;

    /**
     * Default constructor.
     */
    public IndexPattern() {
    }

    /**
     * Initialization constructor.
     * @param  maxIndexCount  Long value for maxIndexCount.
     * @param  sortingAlgorithm  SortingAlgorithmEnum value for sortingAlgorithm.
     * @param  pattern  String value for pattern.
     */
    public IndexPattern(
            Long maxIndexCount,
            SortingAlgorithmEnum sortingAlgorithm,
            String pattern) {
        this.maxIndexCount = maxIndexCount;
        this.sortingAlgorithm = sortingAlgorithm;
        this.pattern = pattern;
    }

    /**
     * Getter for MaxIndexCount.
     * Maximum number of indexes to keep
     * @return Returns the Long
     */
    @JsonGetter("max-index-count")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Long getMaxIndexCount() {
        return maxIndexCount;
    }

    /**
     * Setter for MaxIndexCount.
     * Maximum number of indexes to keep
     * @param maxIndexCount Value for Long
     */
    @JsonSetter("max-index-count")
    public void setMaxIndexCount(Long maxIndexCount) {
        this.maxIndexCount = maxIndexCount;
    }

    /**
     * Getter for SortingAlgorithm.
     * Deletion sorting algorithm
     * @return Returns the SortingAlgorithmEnum
     */
    @JsonGetter("sorting-algorithm")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public SortingAlgorithmEnum getSortingAlgorithm() {
        return sortingAlgorithm;
    }

    /**
     * Setter for SortingAlgorithm.
     * Deletion sorting algorithm
     * @param sortingAlgorithm Value for SortingAlgorithmEnum
     */
    @JsonSetter("sorting-algorithm")
    public void setSortingAlgorithm(SortingAlgorithmEnum sortingAlgorithm) {
        this.sortingAlgorithm = sortingAlgorithm;
    }

    /**
     * Getter for Pattern.
     * fnmatch pattern
     * @return Returns the String
     */
    @JsonGetter("pattern")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPattern() {
        return pattern;
    }

    /**
     * Setter for Pattern.
     * fnmatch pattern
     * @param pattern Value for String
     */
    @JsonSetter("pattern")
    public void setPattern(String pattern) {
        this.pattern = pattern;
    }

    /**
     * Converts this IndexPattern into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "IndexPattern [" + "maxIndexCount=" + maxIndexCount + ", sortingAlgorithm="
                + sortingAlgorithm + ", pattern=" + pattern + "]";
    }

    /**
     * Builds a new {@link IndexPattern.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link IndexPattern.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .maxIndexCount(getMaxIndexCount())
                .sortingAlgorithm(getSortingAlgorithm())
                .pattern(getPattern());
        return builder;
    }

    /**
     * Class to build instances of {@link IndexPattern}.
     */
    public static class Builder {
        private Long maxIndexCount;
        private SortingAlgorithmEnum sortingAlgorithm;
        private String pattern;



        /**
         * Setter for maxIndexCount.
         * @param  maxIndexCount  Long value for maxIndexCount.
         * @return Builder
         */
        public Builder maxIndexCount(Long maxIndexCount) {
            this.maxIndexCount = maxIndexCount;
            return this;
        }

        /**
         * Setter for sortingAlgorithm.
         * @param  sortingAlgorithm  SortingAlgorithmEnum value for sortingAlgorithm.
         * @return Builder
         */
        public Builder sortingAlgorithm(SortingAlgorithmEnum sortingAlgorithm) {
            this.sortingAlgorithm = sortingAlgorithm;
            return this;
        }

        /**
         * Setter for pattern.
         * @param  pattern  String value for pattern.
         * @return Builder
         */
        public Builder pattern(String pattern) {
            this.pattern = pattern;
            return this;
        }

        /**
         * Builds a new {@link IndexPattern} object using the set fields.
         * @return {@link IndexPattern}
         */
        public IndexPattern build() {
            return new IndexPattern(maxIndexCount, sortingAlgorithm, pattern);
        }
    }
}
