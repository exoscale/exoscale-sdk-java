/*
 * ExoscalePublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.exoscale.apichgva2.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.Map;
import java.util.UUID;

/**
 * This is a model class for ElasticIp type.
 */
public class ElasticIp {
    private UUID id;
    private String ip;
    private AddressfamilyEnum addressfamily;
    private String cidr;
    private String description;
    private ElasticIpHealthcheck healthcheck;
    private Map<String, String> labels;

    /**
     * Default constructor.
     */
    public ElasticIp() {
    }

    /**
     * Initialization constructor.
     * @param  id  UUID value for id.
     * @param  ip  String value for ip.
     * @param  addressfamily  AddressfamilyEnum value for addressfamily.
     * @param  cidr  String value for cidr.
     * @param  description  String value for description.
     * @param  healthcheck  ElasticIpHealthcheck value for healthcheck.
     * @param  labels  Map of String, value for labels.
     */
    public ElasticIp(
            UUID id,
            String ip,
            AddressfamilyEnum addressfamily,
            String cidr,
            String description,
            ElasticIpHealthcheck healthcheck,
            Map<String, String> labels) {
        this.id = id;
        this.ip = ip;
        this.addressfamily = addressfamily;
        this.cidr = cidr;
        this.description = description;
        this.healthcheck = healthcheck;
        this.labels = labels;
    }

    /**
     * Getter for Id.
     * Elastic IP ID
     * @return Returns the UUID
     */
    @JsonGetter("id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public UUID getId() {
        return id;
    }

    /**
     * Setter for Id.
     * Elastic IP ID
     * @param id Value for UUID
     */
    @JsonSetter("id")
    public void setId(UUID id) {
        this.id = id;
    }

    /**
     * Getter for Ip.
     * Elastic IP address
     * @return Returns the String
     */
    @JsonGetter("ip")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getIp() {
        return ip;
    }

    /**
     * Setter for Ip.
     * Elastic IP address
     * @param ip Value for String
     */
    @JsonSetter("ip")
    public void setIp(String ip) {
        this.ip = ip;
    }

    /**
     * Getter for Addressfamily.
     * Elastic IP address family
     * @return Returns the AddressfamilyEnum
     */
    @JsonGetter("addressfamily")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public AddressfamilyEnum getAddressfamily() {
        return addressfamily;
    }

    /**
     * Setter for Addressfamily.
     * Elastic IP address family
     * @param addressfamily Value for AddressfamilyEnum
     */
    @JsonSetter("addressfamily")
    public void setAddressfamily(AddressfamilyEnum addressfamily) {
        this.addressfamily = addressfamily;
    }

    /**
     * Getter for Cidr.
     * Elastic IP cidr
     * @return Returns the String
     */
    @JsonGetter("cidr")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCidr() {
        return cidr;
    }

    /**
     * Setter for Cidr.
     * Elastic IP cidr
     * @param cidr Value for String
     */
    @JsonSetter("cidr")
    public void setCidr(String cidr) {
        this.cidr = cidr;
    }

    /**
     * Getter for Description.
     * Elastic IP description
     * @return Returns the String
     */
    @JsonGetter("description")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDescription() {
        return description;
    }

    /**
     * Setter for Description.
     * Elastic IP description
     * @param description Value for String
     */
    @JsonSetter("description")
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Getter for Healthcheck.
     * Elastic IP address healthcheck
     * @return Returns the ElasticIpHealthcheck
     */
    @JsonGetter("healthcheck")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public ElasticIpHealthcheck getHealthcheck() {
        return healthcheck;
    }

    /**
     * Setter for Healthcheck.
     * Elastic IP address healthcheck
     * @param healthcheck Value for ElasticIpHealthcheck
     */
    @JsonSetter("healthcheck")
    public void setHealthcheck(ElasticIpHealthcheck healthcheck) {
        this.healthcheck = healthcheck;
    }

    /**
     * Getter for Labels.
     * @return Returns the Map of String, String
     */
    @JsonGetter("labels")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Map<String, String> getLabels() {
        return labels;
    }

    /**
     * Setter for Labels.
     * @param labels Value for Map of String, String
     */
    @JsonSetter("labels")
    public void setLabels(Map<String, String> labels) {
        this.labels = labels;
    }

    /**
     * Converts this ElasticIp into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ElasticIp [" + "id=" + id + ", ip=" + ip + ", addressfamily=" + addressfamily
                + ", cidr=" + cidr + ", description=" + description + ", healthcheck=" + healthcheck
                + ", labels=" + labels + "]";
    }

    /**
     * Builds a new {@link ElasticIp.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ElasticIp.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .id(getId())
                .ip(getIp())
                .addressfamily(getAddressfamily())
                .cidr(getCidr())
                .description(getDescription())
                .healthcheck(getHealthcheck())
                .labels(getLabels());
        return builder;
    }

    /**
     * Class to build instances of {@link ElasticIp}.
     */
    public static class Builder {
        private UUID id;
        private String ip;
        private AddressfamilyEnum addressfamily;
        private String cidr;
        private String description;
        private ElasticIpHealthcheck healthcheck;
        private Map<String, String> labels;



        /**
         * Setter for id.
         * @param  id  UUID value for id.
         * @return Builder
         */
        public Builder id(UUID id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for ip.
         * @param  ip  String value for ip.
         * @return Builder
         */
        public Builder ip(String ip) {
            this.ip = ip;
            return this;
        }

        /**
         * Setter for addressfamily.
         * @param  addressfamily  AddressfamilyEnum value for addressfamily.
         * @return Builder
         */
        public Builder addressfamily(AddressfamilyEnum addressfamily) {
            this.addressfamily = addressfamily;
            return this;
        }

        /**
         * Setter for cidr.
         * @param  cidr  String value for cidr.
         * @return Builder
         */
        public Builder cidr(String cidr) {
            this.cidr = cidr;
            return this;
        }

        /**
         * Setter for description.
         * @param  description  String value for description.
         * @return Builder
         */
        public Builder description(String description) {
            this.description = description;
            return this;
        }

        /**
         * Setter for healthcheck.
         * @param  healthcheck  ElasticIpHealthcheck value for healthcheck.
         * @return Builder
         */
        public Builder healthcheck(ElasticIpHealthcheck healthcheck) {
            this.healthcheck = healthcheck;
            return this;
        }

        /**
         * Setter for labels.
         * @param  labels  Map of String, value for labels.
         * @return Builder
         */
        public Builder labels(Map<String, String> labels) {
            this.labels = labels;
            return this;
        }

        /**
         * Builds a new {@link ElasticIp} object using the set fields.
         * @return {@link ElasticIp}
         */
        public ElasticIp build() {
            return new ElasticIp(id, ip, addressfamily, cidr, description, healthcheck, labels);
        }
    }
}
