/*
 * ExoscalePublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.exoscale.apichgva2.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;
import java.util.Map;
import java.util.UUID;

/**
 * This is a model class for InstancePool type.
 */
public class InstancePool {
    private List<AntiAffinityGroup> antiAffinityGroups;
    private String description;
    private PublicIpAssignmentEnum publicIpAssignment;
    private Map<String, String> labels;
    private List<SecurityGroup> securityGroups;
    private List<ElasticIp> elasticIps;
    private String name;
    private InstanceType instanceType;
    private Long minAvailable;
    private List<PrivateNetwork> privateNetworks;
    private Template template;
    private State4Enum state;
    private Long size;
    private SshKey sshKey;
    private String instancePrefix;
    private String userData;
    private Manager manager;
    private List<Instance> instances;
    private DeployTarget deployTarget;
    private Boolean ipv6Enabled;
    private UUID id;
    private Long diskSize;
    private List<SshKey> sshKeys;

    /**
     * Default constructor.
     */
    public InstancePool() {
    }

    /**
     * Initialization constructor.
     * @param  antiAffinityGroups  List of AntiAffinityGroup value for antiAffinityGroups.
     * @param  description  String value for description.
     * @param  publicIpAssignment  PublicIpAssignmentEnum value for publicIpAssignment.
     * @param  labels  Map of String, value for labels.
     * @param  securityGroups  List of SecurityGroup value for securityGroups.
     * @param  elasticIps  List of ElasticIp value for elasticIps.
     * @param  name  String value for name.
     * @param  instanceType  InstanceType value for instanceType.
     * @param  minAvailable  Long value for minAvailable.
     * @param  privateNetworks  List of PrivateNetwork value for privateNetworks.
     * @param  template  Template value for template.
     * @param  state  State4Enum value for state.
     * @param  size  Long value for size.
     * @param  sshKey  SshKey value for sshKey.
     * @param  instancePrefix  String value for instancePrefix.
     * @param  userData  String value for userData.
     * @param  manager  Manager value for manager.
     * @param  instances  List of Instance value for instances.
     * @param  deployTarget  DeployTarget value for deployTarget.
     * @param  ipv6Enabled  Boolean value for ipv6Enabled.
     * @param  id  UUID value for id.
     * @param  diskSize  Long value for diskSize.
     * @param  sshKeys  List of SshKey value for sshKeys.
     */
    public InstancePool(
            List<AntiAffinityGroup> antiAffinityGroups,
            String description,
            PublicIpAssignmentEnum publicIpAssignment,
            Map<String, String> labels,
            List<SecurityGroup> securityGroups,
            List<ElasticIp> elasticIps,
            String name,
            InstanceType instanceType,
            Long minAvailable,
            List<PrivateNetwork> privateNetworks,
            Template template,
            State4Enum state,
            Long size,
            SshKey sshKey,
            String instancePrefix,
            String userData,
            Manager manager,
            List<Instance> instances,
            DeployTarget deployTarget,
            Boolean ipv6Enabled,
            UUID id,
            Long diskSize,
            List<SshKey> sshKeys) {
        this.antiAffinityGroups = antiAffinityGroups;
        this.description = description;
        this.publicIpAssignment = publicIpAssignment;
        this.labels = labels;
        this.securityGroups = securityGroups;
        this.elasticIps = elasticIps;
        this.name = name;
        this.instanceType = instanceType;
        this.minAvailable = minAvailable;
        this.privateNetworks = privateNetworks;
        this.template = template;
        this.state = state;
        this.size = size;
        this.sshKey = sshKey;
        this.instancePrefix = instancePrefix;
        this.userData = userData;
        this.manager = manager;
        this.instances = instances;
        this.deployTarget = deployTarget;
        this.ipv6Enabled = ipv6Enabled;
        this.id = id;
        this.diskSize = diskSize;
        this.sshKeys = sshKeys;
    }

    /**
     * Getter for AntiAffinityGroups.
     * Instance Pool Anti-affinity Groups
     * @return Returns the List of AntiAffinityGroup
     */
    @JsonGetter("anti-affinity-groups")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<AntiAffinityGroup> getAntiAffinityGroups() {
        return antiAffinityGroups;
    }

    /**
     * Setter for AntiAffinityGroups.
     * Instance Pool Anti-affinity Groups
     * @param antiAffinityGroups Value for List of AntiAffinityGroup
     */
    @JsonSetter("anti-affinity-groups")
    public void setAntiAffinityGroups(List<AntiAffinityGroup> antiAffinityGroups) {
        this.antiAffinityGroups = antiAffinityGroups;
    }

    /**
     * Getter for Description.
     * Instance Pool description
     * @return Returns the String
     */
    @JsonGetter("description")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDescription() {
        return description;
    }

    /**
     * Setter for Description.
     * Instance Pool description
     * @param description Value for String
     */
    @JsonSetter("description")
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Getter for PublicIpAssignment.
     * @return Returns the PublicIpAssignmentEnum
     */
    @JsonGetter("public-ip-assignment")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public PublicIpAssignmentEnum getPublicIpAssignment() {
        return publicIpAssignment;
    }

    /**
     * Setter for PublicIpAssignment.
     * @param publicIpAssignment Value for PublicIpAssignmentEnum
     */
    @JsonSetter("public-ip-assignment")
    public void setPublicIpAssignment(PublicIpAssignmentEnum publicIpAssignment) {
        this.publicIpAssignment = publicIpAssignment;
    }

    /**
     * Getter for Labels.
     * @return Returns the Map of String, String
     */
    @JsonGetter("labels")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Map<String, String> getLabels() {
        return labels;
    }

    /**
     * Setter for Labels.
     * @param labels Value for Map of String, String
     */
    @JsonSetter("labels")
    public void setLabels(Map<String, String> labels) {
        this.labels = labels;
    }

    /**
     * Getter for SecurityGroups.
     * Instance Pool Security Groups
     * @return Returns the List of SecurityGroup
     */
    @JsonGetter("security-groups")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<SecurityGroup> getSecurityGroups() {
        return securityGroups;
    }

    /**
     * Setter for SecurityGroups.
     * Instance Pool Security Groups
     * @param securityGroups Value for List of SecurityGroup
     */
    @JsonSetter("security-groups")
    public void setSecurityGroups(List<SecurityGroup> securityGroups) {
        this.securityGroups = securityGroups;
    }

    /**
     * Getter for ElasticIps.
     * Instances Elastic IPs
     * @return Returns the List of ElasticIp
     */
    @JsonGetter("elastic-ips")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<ElasticIp> getElasticIps() {
        return elasticIps;
    }

    /**
     * Setter for ElasticIps.
     * Instances Elastic IPs
     * @param elasticIps Value for List of ElasticIp
     */
    @JsonSetter("elastic-ips")
    public void setElasticIps(List<ElasticIp> elasticIps) {
        this.elasticIps = elasticIps;
    }

    /**
     * Getter for Name.
     * Instance Pool name
     * @return Returns the String
     */
    @JsonGetter("name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * Instance Pool name
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for InstanceType.
     * Compute instance type
     * @return Returns the InstanceType
     */
    @JsonGetter("instance-type")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public InstanceType getInstanceType() {
        return instanceType;
    }

    /**
     * Setter for InstanceType.
     * Compute instance type
     * @param instanceType Value for InstanceType
     */
    @JsonSetter("instance-type")
    public void setInstanceType(InstanceType instanceType) {
        this.instanceType = instanceType;
    }

    /**
     * Getter for MinAvailable.
     * Minimum number of running instances
     * @return Returns the Long
     */
    @JsonGetter("min-available")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Long getMinAvailable() {
        return minAvailable;
    }

    /**
     * Setter for MinAvailable.
     * Minimum number of running instances
     * @param minAvailable Value for Long
     */
    @JsonSetter("min-available")
    public void setMinAvailable(Long minAvailable) {
        this.minAvailable = minAvailable;
    }

    /**
     * Getter for PrivateNetworks.
     * Instance Pool Private Networks
     * @return Returns the List of PrivateNetwork
     */
    @JsonGetter("private-networks")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<PrivateNetwork> getPrivateNetworks() {
        return privateNetworks;
    }

    /**
     * Setter for PrivateNetworks.
     * Instance Pool Private Networks
     * @param privateNetworks Value for List of PrivateNetwork
     */
    @JsonSetter("private-networks")
    public void setPrivateNetworks(List<PrivateNetwork> privateNetworks) {
        this.privateNetworks = privateNetworks;
    }

    /**
     * Getter for Template.
     * Instance template
     * @return Returns the Template
     */
    @JsonGetter("template")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Template getTemplate() {
        return template;
    }

    /**
     * Setter for Template.
     * Instance template
     * @param template Value for Template
     */
    @JsonSetter("template")
    public void setTemplate(Template template) {
        this.template = template;
    }

    /**
     * Getter for State.
     * Instance Pool state
     * @return Returns the State4Enum
     */
    @JsonGetter("state")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public State4Enum getState() {
        return state;
    }

    /**
     * Setter for State.
     * Instance Pool state
     * @param state Value for State4Enum
     */
    @JsonSetter("state")
    public void setState(State4Enum state) {
        this.state = state;
    }

    /**
     * Getter for Size.
     * Number of instances
     * @return Returns the Long
     */
    @JsonGetter("size")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Long getSize() {
        return size;
    }

    /**
     * Setter for Size.
     * Number of instances
     * @param size Value for Long
     */
    @JsonSetter("size")
    public void setSize(Long size) {
        this.size = size;
    }

    /**
     * Getter for SshKey.
     * SSH key
     * @return Returns the SshKey
     */
    @JsonGetter("ssh-key")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public SshKey getSshKey() {
        return sshKey;
    }

    /**
     * Setter for SshKey.
     * SSH key
     * @param sshKey Value for SshKey
     */
    @JsonSetter("ssh-key")
    public void setSshKey(SshKey sshKey) {
        this.sshKey = sshKey;
    }

    /**
     * Getter for InstancePrefix.
     * The instances created by the Instance Pool will be prefixed with this value (default: pool)
     * @return Returns the String
     */
    @JsonGetter("instance-prefix")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getInstancePrefix() {
        return instancePrefix;
    }

    /**
     * Setter for InstancePrefix.
     * The instances created by the Instance Pool will be prefixed with this value (default: pool)
     * @param instancePrefix Value for String
     */
    @JsonSetter("instance-prefix")
    public void setInstancePrefix(String instancePrefix) {
        this.instancePrefix = instancePrefix;
    }

    /**
     * Getter for UserData.
     * Instances Cloud-init user-data
     * @return Returns the String
     */
    @JsonGetter("user-data")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getUserData() {
        return userData;
    }

    /**
     * Setter for UserData.
     * Instances Cloud-init user-data
     * @param userData Value for String
     */
    @JsonSetter("user-data")
    public void setUserData(String userData) {
        this.userData = userData;
    }

    /**
     * Getter for Manager.
     * Resource manager
     * @return Returns the Manager
     */
    @JsonGetter("manager")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Manager getManager() {
        return manager;
    }

    /**
     * Setter for Manager.
     * Resource manager
     * @param manager Value for Manager
     */
    @JsonSetter("manager")
    public void setManager(Manager manager) {
        this.manager = manager;
    }

    /**
     * Getter for Instances.
     * Instances
     * @return Returns the List of Instance
     */
    @JsonGetter("instances")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<Instance> getInstances() {
        return instances;
    }

    /**
     * Setter for Instances.
     * Instances
     * @param instances Value for List of Instance
     */
    @JsonSetter("instances")
    public void setInstances(List<Instance> instances) {
        this.instances = instances;
    }

    /**
     * Getter for DeployTarget.
     * Deploy target
     * @return Returns the DeployTarget
     */
    @JsonGetter("deploy-target")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public DeployTarget getDeployTarget() {
        return deployTarget;
    }

    /**
     * Setter for DeployTarget.
     * Deploy target
     * @param deployTarget Value for DeployTarget
     */
    @JsonSetter("deploy-target")
    public void setDeployTarget(DeployTarget deployTarget) {
        this.deployTarget = deployTarget;
    }

    /**
     * Getter for Ipv6Enabled.
     * Enable IPv6 for instances
     * @return Returns the Boolean
     */
    @JsonGetter("ipv6-enabled")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getIpv6Enabled() {
        return ipv6Enabled;
    }

    /**
     * Setter for Ipv6Enabled.
     * Enable IPv6 for instances
     * @param ipv6Enabled Value for Boolean
     */
    @JsonSetter("ipv6-enabled")
    public void setIpv6Enabled(Boolean ipv6Enabled) {
        this.ipv6Enabled = ipv6Enabled;
    }

    /**
     * Getter for Id.
     * Instance Pool ID
     * @return Returns the UUID
     */
    @JsonGetter("id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public UUID getId() {
        return id;
    }

    /**
     * Setter for Id.
     * Instance Pool ID
     * @param id Value for UUID
     */
    @JsonSetter("id")
    public void setId(UUID id) {
        this.id = id;
    }

    /**
     * Getter for DiskSize.
     * Instances disk size in GB
     * @return Returns the Long
     */
    @JsonGetter("disk-size")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Long getDiskSize() {
        return diskSize;
    }

    /**
     * Setter for DiskSize.
     * Instances disk size in GB
     * @param diskSize Value for Long
     */
    @JsonSetter("disk-size")
    public void setDiskSize(Long diskSize) {
        this.diskSize = diskSize;
    }

    /**
     * Getter for SshKeys.
     * Instances SSH keys
     * @return Returns the List of SshKey
     */
    @JsonGetter("ssh-keys")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<SshKey> getSshKeys() {
        return sshKeys;
    }

    /**
     * Setter for SshKeys.
     * Instances SSH keys
     * @param sshKeys Value for List of SshKey
     */
    @JsonSetter("ssh-keys")
    public void setSshKeys(List<SshKey> sshKeys) {
        this.sshKeys = sshKeys;
    }

    /**
     * Converts this InstancePool into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "InstancePool [" + "antiAffinityGroups=" + antiAffinityGroups + ", description="
                + description + ", publicIpAssignment=" + publicIpAssignment + ", labels=" + labels
                + ", securityGroups=" + securityGroups + ", elasticIps=" + elasticIps + ", name="
                + name + ", instanceType=" + instanceType + ", minAvailable=" + minAvailable
                + ", privateNetworks=" + privateNetworks + ", template=" + template + ", state="
                + state + ", size=" + size + ", sshKey=" + sshKey + ", instancePrefix="
                + instancePrefix + ", userData=" + userData + ", manager=" + manager
                + ", instances=" + instances + ", deployTarget=" + deployTarget + ", ipv6Enabled="
                + ipv6Enabled + ", id=" + id + ", diskSize=" + diskSize + ", sshKeys=" + sshKeys
                + "]";
    }

    /**
     * Builds a new {@link InstancePool.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link InstancePool.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .antiAffinityGroups(getAntiAffinityGroups())
                .description(getDescription())
                .publicIpAssignment(getPublicIpAssignment())
                .labels(getLabels())
                .securityGroups(getSecurityGroups())
                .elasticIps(getElasticIps())
                .name(getName())
                .instanceType(getInstanceType())
                .minAvailable(getMinAvailable())
                .privateNetworks(getPrivateNetworks())
                .template(getTemplate())
                .state(getState())
                .size(getSize())
                .sshKey(getSshKey())
                .instancePrefix(getInstancePrefix())
                .userData(getUserData())
                .manager(getManager())
                .instances(getInstances())
                .deployTarget(getDeployTarget())
                .ipv6Enabled(getIpv6Enabled())
                .id(getId())
                .diskSize(getDiskSize())
                .sshKeys(getSshKeys());
        return builder;
    }

    /**
     * Class to build instances of {@link InstancePool}.
     */
    public static class Builder {
        private List<AntiAffinityGroup> antiAffinityGroups;
        private String description;
        private PublicIpAssignmentEnum publicIpAssignment;
        private Map<String, String> labels;
        private List<SecurityGroup> securityGroups;
        private List<ElasticIp> elasticIps;
        private String name;
        private InstanceType instanceType;
        private Long minAvailable;
        private List<PrivateNetwork> privateNetworks;
        private Template template;
        private State4Enum state;
        private Long size;
        private SshKey sshKey;
        private String instancePrefix;
        private String userData;
        private Manager manager;
        private List<Instance> instances;
        private DeployTarget deployTarget;
        private Boolean ipv6Enabled;
        private UUID id;
        private Long diskSize;
        private List<SshKey> sshKeys;



        /**
         * Setter for antiAffinityGroups.
         * @param  antiAffinityGroups  List of AntiAffinityGroup value for antiAffinityGroups.
         * @return Builder
         */
        public Builder antiAffinityGroups(List<AntiAffinityGroup> antiAffinityGroups) {
            this.antiAffinityGroups = antiAffinityGroups;
            return this;
        }

        /**
         * Setter for description.
         * @param  description  String value for description.
         * @return Builder
         */
        public Builder description(String description) {
            this.description = description;
            return this;
        }

        /**
         * Setter for publicIpAssignment.
         * @param  publicIpAssignment  PublicIpAssignmentEnum value for publicIpAssignment.
         * @return Builder
         */
        public Builder publicIpAssignment(PublicIpAssignmentEnum publicIpAssignment) {
            this.publicIpAssignment = publicIpAssignment;
            return this;
        }

        /**
         * Setter for labels.
         * @param  labels  Map of String, value for labels.
         * @return Builder
         */
        public Builder labels(Map<String, String> labels) {
            this.labels = labels;
            return this;
        }

        /**
         * Setter for securityGroups.
         * @param  securityGroups  List of SecurityGroup value for securityGroups.
         * @return Builder
         */
        public Builder securityGroups(List<SecurityGroup> securityGroups) {
            this.securityGroups = securityGroups;
            return this;
        }

        /**
         * Setter for elasticIps.
         * @param  elasticIps  List of ElasticIp value for elasticIps.
         * @return Builder
         */
        public Builder elasticIps(List<ElasticIp> elasticIps) {
            this.elasticIps = elasticIps;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for instanceType.
         * @param  instanceType  InstanceType value for instanceType.
         * @return Builder
         */
        public Builder instanceType(InstanceType instanceType) {
            this.instanceType = instanceType;
            return this;
        }

        /**
         * Setter for minAvailable.
         * @param  minAvailable  Long value for minAvailable.
         * @return Builder
         */
        public Builder minAvailable(Long minAvailable) {
            this.minAvailable = minAvailable;
            return this;
        }

        /**
         * Setter for privateNetworks.
         * @param  privateNetworks  List of PrivateNetwork value for privateNetworks.
         * @return Builder
         */
        public Builder privateNetworks(List<PrivateNetwork> privateNetworks) {
            this.privateNetworks = privateNetworks;
            return this;
        }

        /**
         * Setter for template.
         * @param  template  Template value for template.
         * @return Builder
         */
        public Builder template(Template template) {
            this.template = template;
            return this;
        }

        /**
         * Setter for state.
         * @param  state  State4Enum value for state.
         * @return Builder
         */
        public Builder state(State4Enum state) {
            this.state = state;
            return this;
        }

        /**
         * Setter for size.
         * @param  size  Long value for size.
         * @return Builder
         */
        public Builder size(Long size) {
            this.size = size;
            return this;
        }

        /**
         * Setter for sshKey.
         * @param  sshKey  SshKey value for sshKey.
         * @return Builder
         */
        public Builder sshKey(SshKey sshKey) {
            this.sshKey = sshKey;
            return this;
        }

        /**
         * Setter for instancePrefix.
         * @param  instancePrefix  String value for instancePrefix.
         * @return Builder
         */
        public Builder instancePrefix(String instancePrefix) {
            this.instancePrefix = instancePrefix;
            return this;
        }

        /**
         * Setter for userData.
         * @param  userData  String value for userData.
         * @return Builder
         */
        public Builder userData(String userData) {
            this.userData = userData;
            return this;
        }

        /**
         * Setter for manager.
         * @param  manager  Manager value for manager.
         * @return Builder
         */
        public Builder manager(Manager manager) {
            this.manager = manager;
            return this;
        }

        /**
         * Setter for instances.
         * @param  instances  List of Instance value for instances.
         * @return Builder
         */
        public Builder instances(List<Instance> instances) {
            this.instances = instances;
            return this;
        }

        /**
         * Setter for deployTarget.
         * @param  deployTarget  DeployTarget value for deployTarget.
         * @return Builder
         */
        public Builder deployTarget(DeployTarget deployTarget) {
            this.deployTarget = deployTarget;
            return this;
        }

        /**
         * Setter for ipv6Enabled.
         * @param  ipv6Enabled  Boolean value for ipv6Enabled.
         * @return Builder
         */
        public Builder ipv6Enabled(Boolean ipv6Enabled) {
            this.ipv6Enabled = ipv6Enabled;
            return this;
        }

        /**
         * Setter for id.
         * @param  id  UUID value for id.
         * @return Builder
         */
        public Builder id(UUID id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for diskSize.
         * @param  diskSize  Long value for diskSize.
         * @return Builder
         */
        public Builder diskSize(Long diskSize) {
            this.diskSize = diskSize;
            return this;
        }

        /**
         * Setter for sshKeys.
         * @param  sshKeys  List of SshKey value for sshKeys.
         * @return Builder
         */
        public Builder sshKeys(List<SshKey> sshKeys) {
            this.sshKeys = sshKeys;
            return this;
        }

        /**
         * Builds a new {@link InstancePool} object using the set fields.
         * @return {@link InstancePool}
         */
        public InstancePool build() {
            return new InstancePool(antiAffinityGroups, description, publicIpAssignment, labels,
                    securityGroups, elasticIps, name, instanceType, minAvailable, privateNetworks,
                    template, state, size, sshKey, instancePrefix, userData, manager, instances,
                    deployTarget, ipv6Enabled, id, diskSize, sshKeys);
        }
    }
}
