/*
 * Exoscale Public API
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * OpenAPI spec version: 2.0.0
 * Contact: api@exoscale.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.client.model.LoadBalancerServiceHealthcheck;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * ServiceServiceidBody
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-03-08T17:23:40.261901+01:00[Europe/Vienna]")

public class ServiceServiceidBody {
  @JsonProperty("name")
  private String name = null;

  @JsonProperty("description")
  private String description = null;

  /**
   * Network traffic protocol
   */
  public enum ProtocolEnum {
    TCP("tcp"),
    UDP("udp");

    private String value;

    ProtocolEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static ProtocolEnum fromValue(String input) {
      for (ProtocolEnum b : ProtocolEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("protocol")
  private ProtocolEnum protocol = null;

  /**
   * Load balancing strategy
   */
  public enum StrategyEnum {
    ROUND_ROBIN("round-robin"),
    SOURCE_HASH("source-hash");

    private String value;

    StrategyEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static StrategyEnum fromValue(String input) {
      for (StrategyEnum b : StrategyEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("strategy")
  private StrategyEnum strategy = null;

  @JsonProperty("port")
  private Long port = null;

  @JsonProperty("target-port")
  private Long targetPort = null;

  @JsonProperty("healthcheck")
  private LoadBalancerServiceHealthcheck healthcheck = null;

  public ServiceServiceidBody name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Load Balancer Service name
   * @return name
  **/
  @Schema(description = "Load Balancer Service name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ServiceServiceidBody description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Load Balancer Service description
   * @return description
  **/
  @Schema(description = "Load Balancer Service description")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ServiceServiceidBody protocol(ProtocolEnum protocol) {
    this.protocol = protocol;
    return this;
  }

   /**
   * Network traffic protocol
   * @return protocol
  **/
  @Schema(description = "Network traffic protocol")
  public ProtocolEnum getProtocol() {
    return protocol;
  }

  public void setProtocol(ProtocolEnum protocol) {
    this.protocol = protocol;
  }

  public ServiceServiceidBody strategy(StrategyEnum strategy) {
    this.strategy = strategy;
    return this;
  }

   /**
   * Load balancing strategy
   * @return strategy
  **/
  @Schema(description = "Load balancing strategy")
  public StrategyEnum getStrategy() {
    return strategy;
  }

  public void setStrategy(StrategyEnum strategy) {
    this.strategy = strategy;
  }

  public ServiceServiceidBody port(Long port) {
    this.port = port;
    return this;
  }

   /**
   * Port exposed on the Load Balancer&#x27;s public IP
   * minimum: 1
   * maximum: 65535
   * @return port
  **/
  @Schema(description = "Port exposed on the Load Balancer's public IP")
  public Long getPort() {
    return port;
  }

  public void setPort(Long port) {
    this.port = port;
  }

  public ServiceServiceidBody targetPort(Long targetPort) {
    this.targetPort = targetPort;
    return this;
  }

   /**
   * Port on which the network traffic will be forwarded to on the receiving instance
   * minimum: 1
   * maximum: 65535
   * @return targetPort
  **/
  @Schema(description = "Port on which the network traffic will be forwarded to on the receiving instance")
  public Long getTargetPort() {
    return targetPort;
  }

  public void setTargetPort(Long targetPort) {
    this.targetPort = targetPort;
  }

  public ServiceServiceidBody healthcheck(LoadBalancerServiceHealthcheck healthcheck) {
    this.healthcheck = healthcheck;
    return this;
  }

   /**
   * Get healthcheck
   * @return healthcheck
  **/
  @Schema(description = "")
  public LoadBalancerServiceHealthcheck getHealthcheck() {
    return healthcheck;
  }

  public void setHealthcheck(LoadBalancerServiceHealthcheck healthcheck) {
    this.healthcheck = healthcheck;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServiceServiceidBody serviceServiceidBody = (ServiceServiceidBody) o;
    return Objects.equals(this.name, serviceServiceidBody.name) &&
        Objects.equals(this.description, serviceServiceidBody.description) &&
        Objects.equals(this.protocol, serviceServiceidBody.protocol) &&
        Objects.equals(this.strategy, serviceServiceidBody.strategy) &&
        Objects.equals(this.port, serviceServiceidBody.port) &&
        Objects.equals(this.targetPort, serviceServiceidBody.targetPort) &&
        Objects.equals(this.healthcheck, serviceServiceidBody.healthcheck);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, description, protocol, strategy, port, targetPort, healthcheck);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServiceServiceidBody {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    protocol: ").append(toIndentedString(protocol)).append("\n");
    sb.append("    strategy: ").append(toIndentedString(strategy)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    targetPort: ").append(toIndentedString(targetPort)).append("\n");
    sb.append("    healthcheck: ").append(toIndentedString(healthcheck)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
