/*
 * Exoscale Public API
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@exoscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.exoscale.sdk.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Configuration options for Thanos Query.
 */
@JsonPropertyOrder({
  ThanosQueryUserConfiguration.JSON_PROPERTY_QUERY_DEFAULT_EVALUATION_INTERVAL,
  ThanosQueryUserConfiguration.JSON_PROPERTY_QUERY_LOOKBACK_DELTA,
  ThanosQueryUserConfiguration.JSON_PROPERTY_QUERY_METADATA_DEFAULT_TIME_RANGE,
  ThanosQueryUserConfiguration.JSON_PROPERTY_QUERY_TIMEOUT,
  ThanosQueryUserConfiguration.JSON_PROPERTY_STORE_LIMITS_REQUEST_SAMPLES,
  ThanosQueryUserConfiguration.JSON_PROPERTY_STORE_LIMITS_REQUEST_SERIES
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.4.0")
public class ThanosQueryUserConfiguration {
  public static final String JSON_PROPERTY_QUERY_DEFAULT_EVALUATION_INTERVAL = "query.default-evaluation-interval";
  private String queryDefaultEvaluationInterval = "1m";

  public static final String JSON_PROPERTY_QUERY_LOOKBACK_DELTA = "query.lookback-delta";
  private String queryLookbackDelta = "5m";

  public static final String JSON_PROPERTY_QUERY_METADATA_DEFAULT_TIME_RANGE = "query.metadata.default-time-range";
  private String queryMetadataDefaultTimeRange = "0s";

  public static final String JSON_PROPERTY_QUERY_TIMEOUT = "query.timeout";
  private String queryTimeout = "2m";

  public static final String JSON_PROPERTY_STORE_LIMITS_REQUEST_SAMPLES = "store.limits.request-samples";
  private Integer storeLimitsRequestSamples = 0;

  public static final String JSON_PROPERTY_STORE_LIMITS_REQUEST_SERIES = "store.limits.request-series";
  private Integer storeLimitsRequestSeries = 0;

  public ThanosQueryUserConfiguration() { 
  }

  public ThanosQueryUserConfiguration queryDefaultEvaluationInterval(String queryDefaultEvaluationInterval) {
    this.queryDefaultEvaluationInterval = queryDefaultEvaluationInterval;
    return this;
  }

   /**
   * Set the default evaluation interval for subqueries.
   * @return queryDefaultEvaluationInterval
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_QUERY_DEFAULT_EVALUATION_INTERVAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getQueryDefaultEvaluationInterval() {
    return queryDefaultEvaluationInterval;
  }


  @JsonProperty(JSON_PROPERTY_QUERY_DEFAULT_EVALUATION_INTERVAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setQueryDefaultEvaluationInterval(String queryDefaultEvaluationInterval) {
    this.queryDefaultEvaluationInterval = queryDefaultEvaluationInterval;
  }


  public ThanosQueryUserConfiguration queryLookbackDelta(String queryLookbackDelta) {
    this.queryLookbackDelta = queryLookbackDelta;
    return this;
  }

   /**
   * The maximum lookback duration for retrieving metrics during expression evaluations in PromQL. PromQL always evaluates the query for a certain timestamp, and it looks back for the given amount of time to get the latest sample. If it exceeds the maximum lookback delta, it assumes the series is stale and returns none (a gap). The lookback delta should be set to at least 2 times the slowest scrape interval. If unset, it will use the promql default of 5m.
   * @return queryLookbackDelta
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_QUERY_LOOKBACK_DELTA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getQueryLookbackDelta() {
    return queryLookbackDelta;
  }


  @JsonProperty(JSON_PROPERTY_QUERY_LOOKBACK_DELTA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setQueryLookbackDelta(String queryLookbackDelta) {
    this.queryLookbackDelta = queryLookbackDelta;
  }


  public ThanosQueryUserConfiguration queryMetadataDefaultTimeRange(String queryMetadataDefaultTimeRange) {
    this.queryMetadataDefaultTimeRange = queryMetadataDefaultTimeRange;
    return this;
  }

   /**
   * The default metadata time range duration for retrieving labels through Labels and Series API when the range parameters are not specified. The zero value means the range covers the time since the beginning.
   * @return queryMetadataDefaultTimeRange
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_QUERY_METADATA_DEFAULT_TIME_RANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getQueryMetadataDefaultTimeRange() {
    return queryMetadataDefaultTimeRange;
  }


  @JsonProperty(JSON_PROPERTY_QUERY_METADATA_DEFAULT_TIME_RANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setQueryMetadataDefaultTimeRange(String queryMetadataDefaultTimeRange) {
    this.queryMetadataDefaultTimeRange = queryMetadataDefaultTimeRange;
  }


  public ThanosQueryUserConfiguration queryTimeout(String queryTimeout) {
    this.queryTimeout = queryTimeout;
    return this;
  }

   /**
   * Maximum time to process a query by the query node.
   * @return queryTimeout
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_QUERY_TIMEOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getQueryTimeout() {
    return queryTimeout;
  }


  @JsonProperty(JSON_PROPERTY_QUERY_TIMEOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setQueryTimeout(String queryTimeout) {
    this.queryTimeout = queryTimeout;
  }


  public ThanosQueryUserConfiguration storeLimitsRequestSamples(Integer storeLimitsRequestSamples) {
    this.storeLimitsRequestSamples = storeLimitsRequestSamples;
    return this;
  }

   /**
   * The maximum samples allowed for a single Series request. The Series call fails if this limit is exceeded. Set to 0 for no limit. NOTE: For efficiency, the limit is internally implemented as &#39;chunks limit&#39; considering each chunk contains a maximum of 120 samples. The default value is 100 * store.limits.request-series.
   * minimum: 0
   * maximum: 100000000
   * @return storeLimitsRequestSamples
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STORE_LIMITS_REQUEST_SAMPLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getStoreLimitsRequestSamples() {
    return storeLimitsRequestSamples;
  }


  @JsonProperty(JSON_PROPERTY_STORE_LIMITS_REQUEST_SAMPLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStoreLimitsRequestSamples(Integer storeLimitsRequestSamples) {
    this.storeLimitsRequestSamples = storeLimitsRequestSamples;
  }


  public ThanosQueryUserConfiguration storeLimitsRequestSeries(Integer storeLimitsRequestSeries) {
    this.storeLimitsRequestSeries = storeLimitsRequestSeries;
    return this;
  }

   /**
   * The maximum series allowed for a single Series request. The Series call fails if this limit is exceeded. Set to 0 for no limit. The default value is 1000 * cpu_count.
   * minimum: 0
   * maximum: 100000000
   * @return storeLimitsRequestSeries
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STORE_LIMITS_REQUEST_SERIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getStoreLimitsRequestSeries() {
    return storeLimitsRequestSeries;
  }


  @JsonProperty(JSON_PROPERTY_STORE_LIMITS_REQUEST_SERIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStoreLimitsRequestSeries(Integer storeLimitsRequestSeries) {
    this.storeLimitsRequestSeries = storeLimitsRequestSeries;
  }


  /**
   * Return true if this Thanos_Query_User_Configuration object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ThanosQueryUserConfiguration thanosQueryUserConfiguration = (ThanosQueryUserConfiguration) o;
    return Objects.equals(this.queryDefaultEvaluationInterval, thanosQueryUserConfiguration.queryDefaultEvaluationInterval) &&
        Objects.equals(this.queryLookbackDelta, thanosQueryUserConfiguration.queryLookbackDelta) &&
        Objects.equals(this.queryMetadataDefaultTimeRange, thanosQueryUserConfiguration.queryMetadataDefaultTimeRange) &&
        Objects.equals(this.queryTimeout, thanosQueryUserConfiguration.queryTimeout) &&
        Objects.equals(this.storeLimitsRequestSamples, thanosQueryUserConfiguration.storeLimitsRequestSamples) &&
        Objects.equals(this.storeLimitsRequestSeries, thanosQueryUserConfiguration.storeLimitsRequestSeries);
  }

  @Override
  public int hashCode() {
    return Objects.hash(queryDefaultEvaluationInterval, queryLookbackDelta, queryMetadataDefaultTimeRange, queryTimeout, storeLimitsRequestSamples, storeLimitsRequestSeries);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ThanosQueryUserConfiguration {\n");
    sb.append("    queryDefaultEvaluationInterval: ").append(toIndentedString(queryDefaultEvaluationInterval)).append("\n");
    sb.append("    queryLookbackDelta: ").append(toIndentedString(queryLookbackDelta)).append("\n");
    sb.append("    queryMetadataDefaultTimeRange: ").append(toIndentedString(queryMetadataDefaultTimeRange)).append("\n");
    sb.append("    queryTimeout: ").append(toIndentedString(queryTimeout)).append("\n");
    sb.append("    storeLimitsRequestSamples: ").append(toIndentedString(storeLimitsRequestSamples)).append("\n");
    sb.append("    storeLimitsRequestSeries: ").append(toIndentedString(storeLimitsRequestSeries)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `query.default-evaluation-interval` to the URL query string
    if (getQueryDefaultEvaluationInterval() != null) {
      joiner.add(String.format("%squery.default-evaluation-interval%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getQueryDefaultEvaluationInterval()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `query.lookback-delta` to the URL query string
    if (getQueryLookbackDelta() != null) {
      joiner.add(String.format("%squery.lookback-delta%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getQueryLookbackDelta()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `query.metadata.default-time-range` to the URL query string
    if (getQueryMetadataDefaultTimeRange() != null) {
      joiner.add(String.format("%squery.metadata.default-time-range%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getQueryMetadataDefaultTimeRange()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `query.timeout` to the URL query string
    if (getQueryTimeout() != null) {
      joiner.add(String.format("%squery.timeout%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getQueryTimeout()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `store.limits.request-samples` to the URL query string
    if (getStoreLimitsRequestSamples() != null) {
      joiner.add(String.format("%sstore.limits.request-samples%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getStoreLimitsRequestSamples()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `store.limits.request-series` to the URL query string
    if (getStoreLimitsRequestSeries() != null) {
      joiner.add(String.format("%sstore.limits.request-series%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getStoreLimitsRequestSeries()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

