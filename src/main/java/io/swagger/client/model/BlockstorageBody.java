/*
 * Exoscale Public API
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * OpenAPI spec version: 2.0.0
 * Contact: api@exoscale.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.client.model.BlockStorageSnapshotTarget;
import io.swagger.client.model.Labels;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * BlockstorageBody
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-03-08T17:23:40.261901+01:00[Europe/Vienna]")

public class BlockstorageBody {
  @JsonProperty("name")
  private String name = null;

  @JsonProperty("size")
  private Long size = null;

  @JsonProperty("labels")
  private Labels labels = null;

  @JsonProperty("block-storage-snapshot")
  private BlockStorageSnapshotTarget blockStorageSnapshot = null;

  public BlockstorageBody name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Volume name
   * @return name
  **/
  @Schema(description = "Volume name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public BlockstorageBody size(Long size) {
    this.size = size;
    return this;
  }

   /**
   * Volume size in GB.                             When a snapshot ID is supplied, this defaults to the size of the source volume, but can be set to a larger value.
   * minimum: 10
   * maximum: 10240
   * @return size
  **/
  @Schema(description = "Volume size in GB.                             When a snapshot ID is supplied, this defaults to the size of the source volume, but can be set to a larger value.")
  public Long getSize() {
    return size;
  }

  public void setSize(Long size) {
    this.size = size;
  }

  public BlockstorageBody labels(Labels labels) {
    this.labels = labels;
    return this;
  }

   /**
   * Get labels
   * @return labels
  **/
  @Schema(description = "")
  public Labels getLabels() {
    return labels;
  }

  public void setLabels(Labels labels) {
    this.labels = labels;
  }

  public BlockstorageBody blockStorageSnapshot(BlockStorageSnapshotTarget blockStorageSnapshot) {
    this.blockStorageSnapshot = blockStorageSnapshot;
    return this;
  }

   /**
   * Get blockStorageSnapshot
   * @return blockStorageSnapshot
  **/
  @Schema(description = "")
  public BlockStorageSnapshotTarget getBlockStorageSnapshot() {
    return blockStorageSnapshot;
  }

  public void setBlockStorageSnapshot(BlockStorageSnapshotTarget blockStorageSnapshot) {
    this.blockStorageSnapshot = blockStorageSnapshot;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BlockstorageBody blockstorageBody = (BlockstorageBody) o;
    return Objects.equals(this.name, blockstorageBody.name) &&
        Objects.equals(this.size, blockstorageBody.size) &&
        Objects.equals(this.labels, blockstorageBody.labels) &&
        Objects.equals(this.blockStorageSnapshot, blockstorageBody.blockStorageSnapshot);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, size, labels, blockStorageSnapshot);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BlockstorageBody {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    blockStorageSnapshot: ").append(toIndentedString(blockStorageSnapshot)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
