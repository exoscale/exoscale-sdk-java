/*
 * Exoscale Public API
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@exoscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.exoscale.sdk.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * SksClusterDeprecatedResource
 */
@JsonPropertyOrder({
  SksClusterDeprecatedResource.JSON_PROPERTY_GROUP,
  SksClusterDeprecatedResource.JSON_PROPERTY_VERSION,
  SksClusterDeprecatedResource.JSON_PROPERTY_RESOURCE,
  SksClusterDeprecatedResource.JSON_PROPERTY_SUBRESOURCE,
  SksClusterDeprecatedResource.JSON_PROPERTY_REMOVED_RELEASE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.4.0")
public class SksClusterDeprecatedResource {
  public static final String JSON_PROPERTY_GROUP = "group";
  private String group;

  public static final String JSON_PROPERTY_VERSION = "version";
  private String version;

  public static final String JSON_PROPERTY_RESOURCE = "resource";
  private String resource;

  public static final String JSON_PROPERTY_SUBRESOURCE = "subresource";
  private String subresource;

  public static final String JSON_PROPERTY_REMOVED_RELEASE = "removed-release";
  private String removedRelease;

  public SksClusterDeprecatedResource() { 
  }

  public SksClusterDeprecatedResource group(String group) {
    this.group = group;
    return this;
  }

   /**
   * Get group
   * @return group
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getGroup() {
    return group;
  }


  @JsonProperty(JSON_PROPERTY_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGroup(String group) {
    this.group = group;
  }


  public SksClusterDeprecatedResource version(String version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVersion() {
    return version;
  }


  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVersion(String version) {
    this.version = version;
  }


  public SksClusterDeprecatedResource resource(String resource) {
    this.resource = resource;
    return this;
  }

   /**
   * Get resource
   * @return resource
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RESOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getResource() {
    return resource;
  }


  @JsonProperty(JSON_PROPERTY_RESOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResource(String resource) {
    this.resource = resource;
  }


  public SksClusterDeprecatedResource subresource(String subresource) {
    this.subresource = subresource;
    return this;
  }

   /**
   * Get subresource
   * @return subresource
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUBRESOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSubresource() {
    return subresource;
  }


  @JsonProperty(JSON_PROPERTY_SUBRESOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubresource(String subresource) {
    this.subresource = subresource;
  }


  public SksClusterDeprecatedResource removedRelease(String removedRelease) {
    this.removedRelease = removedRelease;
    return this;
  }

   /**
   * Get removedRelease
   * @return removedRelease
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REMOVED_RELEASE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRemovedRelease() {
    return removedRelease;
  }


  @JsonProperty(JSON_PROPERTY_REMOVED_RELEASE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRemovedRelease(String removedRelease) {
    this.removedRelease = removedRelease;
  }


  /**
   * Return true if this sks-cluster-deprecated-resource object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SksClusterDeprecatedResource sksClusterDeprecatedResource = (SksClusterDeprecatedResource) o;
    return Objects.equals(this.group, sksClusterDeprecatedResource.group) &&
        Objects.equals(this.version, sksClusterDeprecatedResource.version) &&
        Objects.equals(this.resource, sksClusterDeprecatedResource.resource) &&
        Objects.equals(this.subresource, sksClusterDeprecatedResource.subresource) &&
        Objects.equals(this.removedRelease, sksClusterDeprecatedResource.removedRelease);
  }

  @Override
  public int hashCode() {
    return Objects.hash(group, version, resource, subresource, removedRelease);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SksClusterDeprecatedResource {\n");
    sb.append("    group: ").append(toIndentedString(group)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    resource: ").append(toIndentedString(resource)).append("\n");
    sb.append("    subresource: ").append(toIndentedString(subresource)).append("\n");
    sb.append("    removedRelease: ").append(toIndentedString(removedRelease)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `group` to the URL query string
    if (getGroup() != null) {
      joiner.add(String.format("%sgroup%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getGroup()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `version` to the URL query string
    if (getVersion() != null) {
      joiner.add(String.format("%sversion%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getVersion()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `resource` to the URL query string
    if (getResource() != null) {
      joiner.add(String.format("%sresource%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getResource()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `subresource` to the URL query string
    if (getSubresource() != null) {
      joiner.add(String.format("%ssubresource%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getSubresource()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `removed-release` to the URL query string
    if (getRemovedRelease() != null) {
      joiner.add(String.format("%sremoved-release%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getRemovedRelease()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

