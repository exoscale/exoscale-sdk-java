/*
 * Exoscale Public API
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@exoscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.exoscale.sdk.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.exoscale.sdk.model.EnumExternalEndpointTypes;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Integrations with other services
 */
@JsonPropertyOrder({
  DbaasExternalIntegration.JSON_PROPERTY_DESCRIPTION,
  DbaasExternalIntegration.JSON_PROPERTY_DEST_ENDPOINT_NAME,
  DbaasExternalIntegration.JSON_PROPERTY_DEST_ENDPOINT_ID,
  DbaasExternalIntegration.JSON_PROPERTY_ID,
  DbaasExternalIntegration.JSON_PROPERTY_STATUS,
  DbaasExternalIntegration.JSON_PROPERTY_SOURCE_SERVICE_NAME,
  DbaasExternalIntegration.JSON_PROPERTY_SOURCE_SERVICE_TYPE,
  DbaasExternalIntegration.JSON_PROPERTY_TYPE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-08-30T13:37:22.669691+02:00[Europe/Vienna]", comments = "Generator version: 7.4.0")
public class DbaasExternalIntegration {
  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_DEST_ENDPOINT_NAME = "dest-endpoint-name";
  private String destEndpointName;

  public static final String JSON_PROPERTY_DEST_ENDPOINT_ID = "dest-endpoint-id";
  private String destEndpointId;

  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  public static final String JSON_PROPERTY_STATUS = "status";
  private String status;

  public static final String JSON_PROPERTY_SOURCE_SERVICE_NAME = "source-service-name";
  private String sourceServiceName;

  public static final String JSON_PROPERTY_SOURCE_SERVICE_TYPE = "source-service-type";
  private String sourceServiceType;

  public static final String JSON_PROPERTY_TYPE = "type";
  private EnumExternalEndpointTypes type;

  public DbaasExternalIntegration() { 
  }

  public DbaasExternalIntegration description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Description of the integration
   * @return description
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDescription(String description) {
    this.description = description;
  }


  public DbaasExternalIntegration destEndpointName(String destEndpointName) {
    this.destEndpointName = destEndpointName;
    return this;
  }

   /**
   * External destination endpoint name
   * @return destEndpointName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEST_ENDPOINT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDestEndpointName() {
    return destEndpointName;
  }


  @JsonProperty(JSON_PROPERTY_DEST_ENDPOINT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDestEndpointName(String destEndpointName) {
    this.destEndpointName = destEndpointName;
  }


  public DbaasExternalIntegration destEndpointId(String destEndpointId) {
    this.destEndpointId = destEndpointId;
    return this;
  }

   /**
   * External destination endpoint id
   * @return destEndpointId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEST_ENDPOINT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDestEndpointId() {
    return destEndpointId;
  }


  @JsonProperty(JSON_PROPERTY_DEST_ENDPOINT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDestEndpointId(String destEndpointId) {
    this.destEndpointId = destEndpointId;
  }


  public DbaasExternalIntegration id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Endpoint integration UUID
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(UUID id) {
    this.id = id;
  }


  public DbaasExternalIntegration status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Integration status
   * @return status
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(String status) {
    this.status = status;
  }


  public DbaasExternalIntegration sourceServiceName(String sourceServiceName) {
    this.sourceServiceName = sourceServiceName;
    return this;
  }

   /**
   * DBaaS source service name
   * @return sourceServiceName
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SOURCE_SERVICE_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSourceServiceName() {
    return sourceServiceName;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE_SERVICE_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSourceServiceName(String sourceServiceName) {
    this.sourceServiceName = sourceServiceName;
  }


  public DbaasExternalIntegration sourceServiceType(String sourceServiceType) {
    this.sourceServiceType = sourceServiceType;
    return this;
  }

   /**
   * Get sourceServiceType
   * @return sourceServiceType
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SOURCE_SERVICE_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSourceServiceType() {
    return sourceServiceType;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE_SERVICE_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSourceServiceType(String sourceServiceType) {
    this.sourceServiceType = sourceServiceType;
  }


  public DbaasExternalIntegration type(EnumExternalEndpointTypes type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public EnumExternalEndpointTypes getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(EnumExternalEndpointTypes type) {
    this.type = type;
  }


  /**
   * Return true if this dbaas-external-integration object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DbaasExternalIntegration dbaasExternalIntegration = (DbaasExternalIntegration) o;
    return Objects.equals(this.description, dbaasExternalIntegration.description) &&
        Objects.equals(this.destEndpointName, dbaasExternalIntegration.destEndpointName) &&
        Objects.equals(this.destEndpointId, dbaasExternalIntegration.destEndpointId) &&
        Objects.equals(this.id, dbaasExternalIntegration.id) &&
        Objects.equals(this.status, dbaasExternalIntegration.status) &&
        Objects.equals(this.sourceServiceName, dbaasExternalIntegration.sourceServiceName) &&
        Objects.equals(this.sourceServiceType, dbaasExternalIntegration.sourceServiceType) &&
        Objects.equals(this.type, dbaasExternalIntegration.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, destEndpointName, destEndpointId, id, status, sourceServiceName, sourceServiceType, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DbaasExternalIntegration {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    destEndpointName: ").append(toIndentedString(destEndpointName)).append("\n");
    sb.append("    destEndpointId: ").append(toIndentedString(destEndpointId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    sourceServiceName: ").append(toIndentedString(sourceServiceName)).append("\n");
    sb.append("    sourceServiceType: ").append(toIndentedString(sourceServiceType)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `description` to the URL query string
    if (getDescription() != null) {
      joiner.add(String.format("%sdescription%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getDescription()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `dest-endpoint-name` to the URL query string
    if (getDestEndpointName() != null) {
      joiner.add(String.format("%sdest-endpoint-name%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getDestEndpointName()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `dest-endpoint-id` to the URL query string
    if (getDestEndpointId() != null) {
      joiner.add(String.format("%sdest-endpoint-id%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getDestEndpointId()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `id` to the URL query string
    if (getId() != null) {
      joiner.add(String.format("%sid%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getId()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `status` to the URL query string
    if (getStatus() != null) {
      joiner.add(String.format("%sstatus%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getStatus()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `source-service-name` to the URL query string
    if (getSourceServiceName() != null) {
      joiner.add(String.format("%ssource-service-name%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getSourceServiceName()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `source-service-type` to the URL query string
    if (getSourceServiceType() != null) {
      joiner.add(String.format("%ssource-service-type%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getSourceServiceType()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `type` to the URL query string
    if (getType() != null) {
      joiner.add(String.format("%stype%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getType()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

