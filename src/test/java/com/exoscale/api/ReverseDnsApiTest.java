/*
 * Exoscale Public API
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@exoscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.exoscale.api;

import com.exoscale.model.Operation;
import com.exoscale.model.ReverseDnsRecord;
import java.util.UUID;
import com.exoscale.model.UpdateReverseDnsElasticIpRequest;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

/**
 * API tests for ReverseDnsApi
 */
@Ignore
public class ReverseDnsApiTest {

    private final ReverseDnsApi api = new ReverseDnsApi();

    
    /**
     * Delete the PTR DNS record for an elastic IP
     *
     * 
     */
    @Test
    public void deleteReverseDnsElasticIpTest()  {
        UUID id = null;
        Operation response = api.deleteReverseDnsElasticIp(id).block();

        // TODO: test validations
    }
    
    /**
     * Delete the PTR DNS record for an instance
     *
     * 
     */
    @Test
    public void deleteReverseDnsInstanceTest()  {
        UUID id = null;
        Operation response = api.deleteReverseDnsInstance(id).block();

        // TODO: test validations
    }
    
    /**
     * Query the PTR DNS records for an elastic IP
     *
     * 
     */
    @Test
    public void getReverseDnsElasticIpTest()  {
        UUID id = null;
        ReverseDnsRecord response = api.getReverseDnsElasticIp(id).block();

        // TODO: test validations
    }
    
    /**
     * Query the PTR DNS records for an instance
     *
     * 
     */
    @Test
    public void getReverseDnsInstanceTest()  {
        UUID id = null;
        ReverseDnsRecord response = api.getReverseDnsInstance(id).block();

        // TODO: test validations
    }
    
    /**
     * Update/Create the PTR DNS record for an elastic IP
     *
     * 
     */
    @Test
    public void updateReverseDnsElasticIpTest()  {
        UUID id = null;
        UpdateReverseDnsElasticIpRequest updateReverseDnsElasticIpRequest = null;
        Operation response = api.updateReverseDnsElasticIp(id, updateReverseDnsElasticIpRequest).block();

        // TODO: test validations
    }
    
    /**
     * Update/Create the PTR DNS record for an instance
     *
     * 
     */
    @Test
    public void updateReverseDnsInstanceTest()  {
        UUID id = null;
        UpdateReverseDnsElasticIpRequest updateReverseDnsElasticIpRequest = null;
        Operation response = api.updateReverseDnsInstance(id, updateReverseDnsElasticIpRequest).block();

        // TODO: test validations
    }
    
}
