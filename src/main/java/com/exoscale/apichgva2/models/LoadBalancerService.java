/*
 * ExoscalePublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.exoscale.apichgva2.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;
import java.util.UUID;

/**
 * This is a model class for LoadBalancerService type.
 */
public class LoadBalancerService {
    private String description;
    private Protocol1Enum protocol;
    private String name;
    private State2Enum state;
    private Long targetPort;
    private Long port;
    private InstancePool instancePool;
    private StrategyEnum strategy;
    private LoadBalancerServiceHealthcheck healthcheck;
    private UUID id;
    private List<LoadBalancerServerStatus> healthcheckStatus;

    /**
     * Default constructor.
     */
    public LoadBalancerService() {
    }

    /**
     * Initialization constructor.
     * @param  description  String value for description.
     * @param  protocol  Protocol1Enum value for protocol.
     * @param  name  String value for name.
     * @param  state  State2Enum value for state.
     * @param  targetPort  Long value for targetPort.
     * @param  port  Long value for port.
     * @param  instancePool  InstancePool value for instancePool.
     * @param  strategy  StrategyEnum value for strategy.
     * @param  healthcheck  LoadBalancerServiceHealthcheck value for healthcheck.
     * @param  id  UUID value for id.
     * @param  healthcheckStatus  List of LoadBalancerServerStatus value for healthcheckStatus.
     */
    public LoadBalancerService(
            String description,
            Protocol1Enum protocol,
            String name,
            State2Enum state,
            Long targetPort,
            Long port,
            InstancePool instancePool,
            StrategyEnum strategy,
            LoadBalancerServiceHealthcheck healthcheck,
            UUID id,
            List<LoadBalancerServerStatus> healthcheckStatus) {
        this.description = description;
        this.protocol = protocol;
        this.name = name;
        this.state = state;
        this.targetPort = targetPort;
        this.port = port;
        this.instancePool = instancePool;
        this.strategy = strategy;
        this.healthcheck = healthcheck;
        this.id = id;
        this.healthcheckStatus = healthcheckStatus;
    }

    /**
     * Getter for Description.
     * Load Balancer Service description
     * @return Returns the String
     */
    @JsonGetter("description")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDescription() {
        return description;
    }

    /**
     * Setter for Description.
     * Load Balancer Service description
     * @param description Value for String
     */
    @JsonSetter("description")
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Getter for Protocol.
     * Network traffic protocol
     * @return Returns the Protocol1Enum
     */
    @JsonGetter("protocol")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Protocol1Enum getProtocol() {
        return protocol;
    }

    /**
     * Setter for Protocol.
     * Network traffic protocol
     * @param protocol Value for Protocol1Enum
     */
    @JsonSetter("protocol")
    public void setProtocol(Protocol1Enum protocol) {
        this.protocol = protocol;
    }

    /**
     * Getter for Name.
     * Load Balancer Service name
     * @return Returns the String
     */
    @JsonGetter("name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * Load Balancer Service name
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for State.
     * Load Balancer Service state
     * @return Returns the State2Enum
     */
    @JsonGetter("state")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public State2Enum getState() {
        return state;
    }

    /**
     * Setter for State.
     * Load Balancer Service state
     * @param state Value for State2Enum
     */
    @JsonSetter("state")
    public void setState(State2Enum state) {
        this.state = state;
    }

    /**
     * Getter for TargetPort.
     * Port on which the network traffic will be forwarded to on the receiving instance
     * @return Returns the Long
     */
    @JsonGetter("target-port")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Long getTargetPort() {
        return targetPort;
    }

    /**
     * Setter for TargetPort.
     * Port on which the network traffic will be forwarded to on the receiving instance
     * @param targetPort Value for Long
     */
    @JsonSetter("target-port")
    public void setTargetPort(Long targetPort) {
        this.targetPort = targetPort;
    }

    /**
     * Getter for Port.
     * Port exposed on the Load Balancer's public IP
     * @return Returns the Long
     */
    @JsonGetter("port")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Long getPort() {
        return port;
    }

    /**
     * Setter for Port.
     * Port exposed on the Load Balancer's public IP
     * @param port Value for Long
     */
    @JsonSetter("port")
    public void setPort(Long port) {
        this.port = port;
    }

    /**
     * Getter for InstancePool.
     * Instance Pool
     * @return Returns the InstancePool
     */
    @JsonGetter("instance-pool")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public InstancePool getInstancePool() {
        return instancePool;
    }

    /**
     * Setter for InstancePool.
     * Instance Pool
     * @param instancePool Value for InstancePool
     */
    @JsonSetter("instance-pool")
    public void setInstancePool(InstancePool instancePool) {
        this.instancePool = instancePool;
    }

    /**
     * Getter for Strategy.
     * Load balancing strategy
     * @return Returns the StrategyEnum
     */
    @JsonGetter("strategy")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public StrategyEnum getStrategy() {
        return strategy;
    }

    /**
     * Setter for Strategy.
     * Load balancing strategy
     * @param strategy Value for StrategyEnum
     */
    @JsonSetter("strategy")
    public void setStrategy(StrategyEnum strategy) {
        this.strategy = strategy;
    }

    /**
     * Getter for Healthcheck.
     * Load Balancer Service healthcheck
     * @return Returns the LoadBalancerServiceHealthcheck
     */
    @JsonGetter("healthcheck")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public LoadBalancerServiceHealthcheck getHealthcheck() {
        return healthcheck;
    }

    /**
     * Setter for Healthcheck.
     * Load Balancer Service healthcheck
     * @param healthcheck Value for LoadBalancerServiceHealthcheck
     */
    @JsonSetter("healthcheck")
    public void setHealthcheck(LoadBalancerServiceHealthcheck healthcheck) {
        this.healthcheck = healthcheck;
    }

    /**
     * Getter for Id.
     * Load Balancer Service ID
     * @return Returns the UUID
     */
    @JsonGetter("id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public UUID getId() {
        return id;
    }

    /**
     * Setter for Id.
     * Load Balancer Service ID
     * @param id Value for UUID
     */
    @JsonSetter("id")
    public void setId(UUID id) {
        this.id = id;
    }

    /**
     * Getter for HealthcheckStatus.
     * Healthcheck status per backend server
     * @return Returns the List of LoadBalancerServerStatus
     */
    @JsonGetter("healthcheck-status")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<LoadBalancerServerStatus> getHealthcheckStatus() {
        return healthcheckStatus;
    }

    /**
     * Setter for HealthcheckStatus.
     * Healthcheck status per backend server
     * @param healthcheckStatus Value for List of LoadBalancerServerStatus
     */
    @JsonSetter("healthcheck-status")
    public void setHealthcheckStatus(List<LoadBalancerServerStatus> healthcheckStatus) {
        this.healthcheckStatus = healthcheckStatus;
    }

    /**
     * Converts this LoadBalancerService into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "LoadBalancerService [" + "description=" + description + ", protocol=" + protocol
                + ", name=" + name + ", state=" + state + ", targetPort=" + targetPort + ", port="
                + port + ", instancePool=" + instancePool + ", strategy=" + strategy
                + ", healthcheck=" + healthcheck + ", id=" + id + ", healthcheckStatus="
                + healthcheckStatus + "]";
    }

    /**
     * Builds a new {@link LoadBalancerService.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link LoadBalancerService.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .description(getDescription())
                .protocol(getProtocol())
                .name(getName())
                .state(getState())
                .targetPort(getTargetPort())
                .port(getPort())
                .instancePool(getInstancePool())
                .strategy(getStrategy())
                .healthcheck(getHealthcheck())
                .id(getId())
                .healthcheckStatus(getHealthcheckStatus());
        return builder;
    }

    /**
     * Class to build instances of {@link LoadBalancerService}.
     */
    public static class Builder {
        private String description;
        private Protocol1Enum protocol;
        private String name;
        private State2Enum state;
        private Long targetPort;
        private Long port;
        private InstancePool instancePool;
        private StrategyEnum strategy;
        private LoadBalancerServiceHealthcheck healthcheck;
        private UUID id;
        private List<LoadBalancerServerStatus> healthcheckStatus;



        /**
         * Setter for description.
         * @param  description  String value for description.
         * @return Builder
         */
        public Builder description(String description) {
            this.description = description;
            return this;
        }

        /**
         * Setter for protocol.
         * @param  protocol  Protocol1Enum value for protocol.
         * @return Builder
         */
        public Builder protocol(Protocol1Enum protocol) {
            this.protocol = protocol;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for state.
         * @param  state  State2Enum value for state.
         * @return Builder
         */
        public Builder state(State2Enum state) {
            this.state = state;
            return this;
        }

        /**
         * Setter for targetPort.
         * @param  targetPort  Long value for targetPort.
         * @return Builder
         */
        public Builder targetPort(Long targetPort) {
            this.targetPort = targetPort;
            return this;
        }

        /**
         * Setter for port.
         * @param  port  Long value for port.
         * @return Builder
         */
        public Builder port(Long port) {
            this.port = port;
            return this;
        }

        /**
         * Setter for instancePool.
         * @param  instancePool  InstancePool value for instancePool.
         * @return Builder
         */
        public Builder instancePool(InstancePool instancePool) {
            this.instancePool = instancePool;
            return this;
        }

        /**
         * Setter for strategy.
         * @param  strategy  StrategyEnum value for strategy.
         * @return Builder
         */
        public Builder strategy(StrategyEnum strategy) {
            this.strategy = strategy;
            return this;
        }

        /**
         * Setter for healthcheck.
         * @param  healthcheck  LoadBalancerServiceHealthcheck value for healthcheck.
         * @return Builder
         */
        public Builder healthcheck(LoadBalancerServiceHealthcheck healthcheck) {
            this.healthcheck = healthcheck;
            return this;
        }

        /**
         * Setter for id.
         * @param  id  UUID value for id.
         * @return Builder
         */
        public Builder id(UUID id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for healthcheckStatus.
         * @param  healthcheckStatus  List of LoadBalancerServerStatus value for healthcheckStatus.
         * @return Builder
         */
        public Builder healthcheckStatus(List<LoadBalancerServerStatus> healthcheckStatus) {
            this.healthcheckStatus = healthcheckStatus;
            return this;
        }

        /**
         * Builds a new {@link LoadBalancerService} object using the set fields.
         * @return {@link LoadBalancerService}
         */
        public LoadBalancerService build() {
            return new LoadBalancerService(description, protocol, name, state, targetPort, port,
                    instancePool, strategy, healthcheck, id, healthcheckStatus);
        }
    }
}
