/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.exoscale.api.models.operations;

import java.math.BigDecimal;
import java.math.BigInteger;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;


public class SDKMethodInterfaces {

    public interface MethodCallDeleteLoadBalancerService {
        com.exoscale.api.models.operations.DeleteLoadBalancerServiceResponse deleteLoadBalancerService(
            String id,
            String serviceId) throws Exception;
    }


    public interface MethodCallUpdateLoadBalancerService {
        com.exoscale.api.models.operations.UpdateLoadBalancerServiceResponse updateLoadBalancerService(
            String id,
            String serviceId,
            com.exoscale.api.models.operations.UpdateLoadBalancerServiceRequestBody requestBody) throws Exception;
    }


    public interface MethodCallGetLoadBalancerService {
        com.exoscale.api.models.operations.GetLoadBalancerServiceResponse getLoadBalancerService(
            String id,
            String serviceId) throws Exception;
    }


    public interface MethodCallCreateLoadBalancer {
        com.exoscale.api.models.operations.CreateLoadBalancerResponse createLoadBalancer(
            com.exoscale.api.models.operations.CreateLoadBalancerRequestBody request) throws Exception;
    }


    public interface MethodCallListLoadBalancers {
        com.exoscale.api.models.operations.ListLoadBalancersResponse listLoadBalancersDirect() throws Exception;
    }


    public interface MethodCallResetLoadBalancerField {
        com.exoscale.api.models.operations.ResetLoadBalancerFieldResponse resetLoadBalancerField(
            String id,
            com.exoscale.api.models.operations.PathParamField field) throws Exception;
    }


    public interface MethodCallResetLoadBalancerServiceField {
        com.exoscale.api.models.operations.ResetLoadBalancerServiceFieldResponse resetLoadBalancerServiceField(
            String id,
            String serviceId,
            com.exoscale.api.models.operations.ResetLoadBalancerServiceFieldPathParamField field) throws Exception;
    }


    public interface MethodCallAddServiceToLoadBalancer {
        com.exoscale.api.models.operations.AddServiceToLoadBalancerResponse addServiceToLoadBalancer(
            String id,
            com.exoscale.api.models.operations.AddServiceToLoadBalancerRequestBody requestBody) throws Exception;
    }


    public interface MethodCallUpdateLoadBalancer {
        com.exoscale.api.models.operations.UpdateLoadBalancerResponse updateLoadBalancer(
            String id,
            com.exoscale.api.models.operations.UpdateLoadBalancerRequestBody requestBody) throws Exception;
    }


    public interface MethodCallDeleteLoadBalancer {
        com.exoscale.api.models.operations.DeleteLoadBalancerResponse deleteLoadBalancer(
            String id) throws Exception;
    }


    public interface MethodCallGetLoadBalancer {
        com.exoscale.api.models.operations.GetLoadBalancerResponse getLoadBalancer(
            String id) throws Exception;
    }


    public interface MethodCallGetDbaasOpensearchAclConfig {
        com.exoscale.api.models.operations.GetDbaasOpensearchAclConfigResponse getDbaasOpensearchAclConfig(
            String name) throws Exception;
    }


    public interface MethodCallUpdateDbaasOpensearchAclConfig {
        com.exoscale.api.models.operations.UpdateDbaasOpensearchAclConfigResponse updateDbaasOpensearchAclConfig(
            String name,
            com.exoscale.api.models.components.DbaasOpensearchAclConfig dbaasOpensearchAclConfig) throws Exception;
    }


    public interface MethodCallStartDbaasGrafanaMaintenance {
        com.exoscale.api.models.operations.StartDbaasGrafanaMaintenanceResponse startDbaasGrafanaMaintenance(
            String name) throws Exception;
    }


    public interface MethodCallCreateDbaasPgUpgradeCheck {
        com.exoscale.api.models.operations.CreateDbaasPgUpgradeCheckResponse createDbaasPgUpgradeCheck(
            String service,
            com.exoscale.api.models.operations.CreateDbaasPgUpgradeCheckRequestBody requestBody) throws Exception;
    }


    public interface MethodCallResetDbaasMysqlUserPassword {
        com.exoscale.api.models.operations.ResetDbaasMysqlUserPasswordResponse resetDbaasMysqlUserPassword(
            String serviceName,
            String username,
            com.exoscale.api.models.operations.ResetDbaasMysqlUserPasswordRequestBody requestBody) throws Exception;
    }


    public interface MethodCallCreateDbaasPgConnectionPool {
        com.exoscale.api.models.operations.CreateDbaasPgConnectionPoolResponse createDbaasPgConnectionPool(
            String serviceName,
            com.exoscale.api.models.operations.CreateDbaasPgConnectionPoolRequestBody requestBody) throws Exception;
    }


    public interface MethodCallUpdateDbaasServiceMysql {
        com.exoscale.api.models.operations.UpdateDbaasServiceMysqlResponse updateDbaasServiceMysql(
            String name,
            com.exoscale.api.models.operations.UpdateDbaasServiceMysqlRequestBody requestBody) throws Exception;
    }


    public interface MethodCallGetDbaasServiceMysql {
        com.exoscale.api.models.operations.GetDbaasServiceMysqlResponse getDbaasServiceMysql(
            String name) throws Exception;
    }


    public interface MethodCallCreateDbaasServiceMysql {
        com.exoscale.api.models.operations.CreateDbaasServiceMysqlResponse createDbaasServiceMysql(
            String name,
            com.exoscale.api.models.operations.CreateDbaasServiceMysqlRequestBody requestBody) throws Exception;
    }


    public interface MethodCallDeleteDbaasServiceMysql {
        com.exoscale.api.models.operations.DeleteDbaasServiceMysqlResponse deleteDbaasServiceMysql(
            String name) throws Exception;
    }


    public interface MethodCallCreateDbaasMysqlUser {
        com.exoscale.api.models.operations.CreateDbaasMysqlUserResponse createDbaasMysqlUser(
            String serviceName,
            com.exoscale.api.models.operations.CreateDbaasMysqlUserRequestBody requestBody) throws Exception;
    }


    public interface MethodCallListDbaasServiceTypes {
        com.exoscale.api.models.operations.ListDbaasServiceTypesResponse listDbaasServiceTypesDirect() throws Exception;
    }


    public interface MethodCallListDbaasServices {
        com.exoscale.api.models.operations.ListDbaasServicesResponse listDbaasServicesDirect() throws Exception;
    }


    public interface MethodCallGetDbaasCaCertificate {
        com.exoscale.api.models.operations.GetDbaasCaCertificateResponse getDbaasCaCertificateDirect() throws Exception;
    }


    public interface MethodCallGetDbaasSettingsGrafana {
        com.exoscale.api.models.operations.GetDbaasSettingsGrafanaResponse getDbaasSettingsGrafanaDirect() throws Exception;
    }


    public interface MethodCallDeleteDbaasPgDatabase {
        com.exoscale.api.models.operations.DeleteDbaasPgDatabaseResponse deleteDbaasPgDatabase(
            String serviceName,
            String databaseName) throws Exception;
    }


    public interface MethodCallStopDbaasPgMigration {
        com.exoscale.api.models.operations.StopDbaasPgMigrationResponse stopDbaasPgMigration(
            String name) throws Exception;
    }


    public interface MethodCallGetDbaasServiceKafka {
        com.exoscale.api.models.operations.GetDbaasServiceKafkaResponse getDbaasServiceKafka(
            String name) throws Exception;
    }


    public interface MethodCallCreateDbaasServiceKafka {
        com.exoscale.api.models.operations.CreateDbaasServiceKafkaResponse createDbaasServiceKafka(
            String name,
            com.exoscale.api.models.operations.CreateDbaasServiceKafkaRequestBody requestBody) throws Exception;
    }


    public interface MethodCallUpdateDbaasServiceKafka {
        com.exoscale.api.models.operations.UpdateDbaasServiceKafkaResponse updateDbaasServiceKafka(
            String name,
            com.exoscale.api.models.operations.UpdateDbaasServiceKafkaRequestBody requestBody) throws Exception;
    }


    public interface MethodCallDeleteDbaasServiceKafka {
        com.exoscale.api.models.operations.DeleteDbaasServiceKafkaResponse deleteDbaasServiceKafka(
            String name) throws Exception;
    }


    public interface MethodCallGetDbaasSettingsRedis {
        com.exoscale.api.models.operations.GetDbaasSettingsRedisResponse getDbaasSettingsRedisDirect() throws Exception;
    }


    public interface MethodCallCreateDbaasKafkaSchemaRegistryAclConfig {
        com.exoscale.api.models.operations.CreateDbaasKafkaSchemaRegistryAclConfigResponse createDbaasKafkaSchemaRegistryAclConfig(
            String name,
            com.exoscale.api.models.components.DbaasKafkaSchemaRegistryAclEntry dbaasKafkaSchemaRegistryAclEntry) throws Exception;
    }


    public interface MethodCallCreateDbaasPostgresUser {
        com.exoscale.api.models.operations.CreateDbaasPostgresUserResponse createDbaasPostgresUser(
            String serviceName,
            com.exoscale.api.models.operations.CreateDbaasPostgresUserRequestBody requestBody) throws Exception;
    }


    public interface MethodCallDeleteDbaasOpensearchUser {
        com.exoscale.api.models.operations.DeleteDbaasOpensearchUserResponse deleteDbaasOpensearchUser(
            String serviceName,
            String username) throws Exception;
    }


    public interface MethodCallCreateDbaasKafkaUser {
        com.exoscale.api.models.operations.CreateDbaasKafkaUserResponse createDbaasKafkaUser(
            String serviceName,
            com.exoscale.api.models.operations.CreateDbaasKafkaUserRequestBody requestBody) throws Exception;
    }


    public interface MethodCallGetDbaasSettingsMysql {
        com.exoscale.api.models.operations.GetDbaasSettingsMysqlResponse getDbaasSettingsMysqlDirect() throws Exception;
    }


    public interface MethodCallCreateDbaasPgDatabase {
        com.exoscale.api.models.operations.CreateDbaasPgDatabaseResponse createDbaasPgDatabase(
            String serviceName,
            com.exoscale.api.models.operations.CreateDbaasPgDatabaseRequestBody requestBody) throws Exception;
    }


    public interface MethodCallCreateDbaasOpensearchUser {
        com.exoscale.api.models.operations.CreateDbaasOpensearchUserResponse createDbaasOpensearchUser(
            String serviceName,
            com.exoscale.api.models.operations.CreateDbaasOpensearchUserRequestBody requestBody) throws Exception;
    }


    public interface MethodCallListDbaasIntegrationTypes {
        com.exoscale.api.models.operations.ListDbaasIntegrationTypesResponse listDbaasIntegrationTypesDirect() throws Exception;
    }


    public interface MethodCallDeleteDbaasPostgresUser {
        com.exoscale.api.models.operations.DeleteDbaasPostgresUserResponse deleteDbaasPostgresUser(
            String serviceName,
            String username) throws Exception;
    }


    public interface MethodCallUpdateDbaasPostgresAllowReplication {
        com.exoscale.api.models.operations.UpdateDbaasPostgresAllowReplicationResponse updateDbaasPostgresAllowReplication(
            String serviceName,
            String username,
            com.exoscale.api.models.operations.UpdateDbaasPostgresAllowReplicationRequestBody requestBody) throws Exception;
    }


    public interface MethodCallCreateDbaasKafkaTopicAclConfig {
        com.exoscale.api.models.operations.CreateDbaasKafkaTopicAclConfigResponse createDbaasKafkaTopicAclConfig(
            String name,
            com.exoscale.api.models.components.DbaasKafkaTopicAclEntry dbaasKafkaTopicAclEntry) throws Exception;
    }


    public interface MethodCallDeleteDbaasMysqlDatabase {
        com.exoscale.api.models.operations.DeleteDbaasMysqlDatabaseResponse deleteDbaasMysqlDatabase(
            String serviceName,
            String databaseName) throws Exception;
    }


    public interface MethodCallGetDbaasServiceLogs {
        com.exoscale.api.models.operations.GetDbaasServiceLogsResponse getDbaasServiceLogs(
            String serviceName,
            com.exoscale.api.models.operations.GetDbaasServiceLogsRequestBody requestBody) throws Exception;
    }


    public interface MethodCallStartDbaasPgMaintenance {
        com.exoscale.api.models.operations.StartDbaasPgMaintenanceResponse startDbaasPgMaintenance(
            String name) throws Exception;
    }


    public interface MethodCallDeleteDbaasKafkaSchemaRegistryAclConfig {
        com.exoscale.api.models.operations.DeleteDbaasKafkaSchemaRegistryAclConfigResponse deleteDbaasKafkaSchemaRegistryAclConfig(
            String name,
            String aclId) throws Exception;
    }


    public interface MethodCallDeleteDbaasKafkaUser {
        com.exoscale.api.models.operations.DeleteDbaasKafkaUserResponse deleteDbaasKafkaUser(
            String serviceName,
            String username) throws Exception;
    }


    public interface MethodCallGetDbaasServiceType {
        com.exoscale.api.models.operations.GetDbaasServiceTypeResponse getDbaasServiceType(
            String serviceTypeName) throws Exception;
    }


    public interface MethodCallStartDbaasMysqlMaintenance {
        com.exoscale.api.models.operations.StartDbaasMysqlMaintenanceResponse startDbaasMysqlMaintenance(
            String name) throws Exception;
    }


    public interface MethodCallResetDbaasOpensearchUserPassword {
        com.exoscale.api.models.operations.ResetDbaasOpensearchUserPasswordResponse resetDbaasOpensearchUserPassword(
            String serviceName,
            String username,
            com.exoscale.api.models.operations.ResetDbaasOpensearchUserPasswordRequestBody requestBody) throws Exception;
    }


    public interface MethodCallGetDbaasServiceMetrics {
        com.exoscale.api.models.operations.GetDbaasServiceMetricsResponse getDbaasServiceMetrics(
            String serviceName,
            com.exoscale.api.models.operations.GetDbaasServiceMetricsRequestBody requestBody) throws Exception;
    }


    public interface MethodCallCreateDbaasTaskMigrationCheck {
        com.exoscale.api.models.operations.CreateDbaasTaskMigrationCheckResponse createDbaasTaskMigrationCheck(
            String service,
            com.exoscale.api.models.operations.CreateDbaasTaskMigrationCheckRequestBody requestBody) throws Exception;
    }


    public interface MethodCallDeleteDbaasIntegration {
        com.exoscale.api.models.operations.DeleteDbaasIntegrationResponse deleteDbaasIntegration(
            String id) throws Exception;
    }


    public interface MethodCallUpdateDbaasIntegration {
        com.exoscale.api.models.operations.UpdateDbaasIntegrationResponse updateDbaasIntegration(
            String id,
            com.exoscale.api.models.operations.UpdateDbaasIntegrationRequestBody requestBody) throws Exception;
    }


    public interface MethodCallGetDbaasIntegration {
        com.exoscale.api.models.operations.GetDbaasIntegrationResponse getDbaasIntegration(
            String id) throws Exception;
    }


    public interface MethodCallListDbaasIntegrationSettings {
        com.exoscale.api.models.operations.ListDbaasIntegrationSettingsResponse listDbaasIntegrationSettings(
            String integrationType,
            String sourceType,
            String destType) throws Exception;
    }


    public interface MethodCallGetDbaasSettingsPg {
        com.exoscale.api.models.operations.GetDbaasSettingsPgResponse getDbaasSettingsPgDirect() throws Exception;
    }


    public interface MethodCallStopDbaasRedisMigration {
        com.exoscale.api.models.operations.StopDbaasRedisMigrationResponse stopDbaasRedisMigration(
            String name) throws Exception;
    }


    public interface MethodCallStopDbaasMysqlMigration {
        com.exoscale.api.models.operations.StopDbaasMysqlMigrationResponse stopDbaasMysqlMigration(
            String name) throws Exception;
    }


    public interface MethodCallStartDbaasKafkaMaintenance {
        com.exoscale.api.models.operations.StartDbaasKafkaMaintenanceResponse startDbaasKafkaMaintenance(
            String name) throws Exception;
    }


    public interface MethodCallUpdateDbaasPgConnectionPool {
        com.exoscale.api.models.operations.UpdateDbaasPgConnectionPoolResponse updateDbaasPgConnectionPool(
            String serviceName,
            String connectionPoolName,
            com.exoscale.api.models.operations.UpdateDbaasPgConnectionPoolRequestBody requestBody) throws Exception;
    }


    public interface MethodCallDeleteDbaasPgConnectionPool {
        com.exoscale.api.models.operations.DeleteDbaasPgConnectionPoolResponse deleteDbaasPgConnectionPool(
            String serviceName,
            String connectionPoolName) throws Exception;
    }


    public interface MethodCallGetDbaasMigrationStatus {
        com.exoscale.api.models.operations.GetDbaasMigrationStatusResponse getDbaasMigrationStatus(
            String name) throws Exception;
    }


    public interface MethodCallDeleteDbaasMysqlUser {
        com.exoscale.api.models.operations.DeleteDbaasMysqlUserResponse deleteDbaasMysqlUser(
            String serviceName,
            String username) throws Exception;
    }


    public interface MethodCallDeleteDbaasService {
        com.exoscale.api.models.operations.DeleteDbaasServiceResponse deleteDbaasService(
            String name) throws Exception;
    }


    public interface MethodCallCreateDbaasMysqlDatabase {
        com.exoscale.api.models.operations.CreateDbaasMysqlDatabaseResponse createDbaasMysqlDatabase(
            String serviceName,
            com.exoscale.api.models.operations.CreateDbaasMysqlDatabaseRequestBody requestBody) throws Exception;
    }


    public interface MethodCallGetDbaasSettingsKafka {
        com.exoscale.api.models.operations.GetDbaasSettingsKafkaResponse getDbaasSettingsKafkaDirect() throws Exception;
    }


    public interface MethodCallGetDbaasSettingsOpensearch {
        com.exoscale.api.models.operations.GetDbaasSettingsOpensearchResponse getDbaasSettingsOpensearchDirect() throws Exception;
    }


    public interface MethodCallDeleteDbaasServiceGrafana {
        com.exoscale.api.models.operations.DeleteDbaasServiceGrafanaResponse deleteDbaasServiceGrafana(
            String name) throws Exception;
    }


    public interface MethodCallGetDbaasServiceGrafana {
        com.exoscale.api.models.operations.GetDbaasServiceGrafanaResponse getDbaasServiceGrafana(
            String name) throws Exception;
    }


    public interface MethodCallUpdateDbaasServiceGrafana {
        com.exoscale.api.models.operations.UpdateDbaasServiceGrafanaResponse updateDbaasServiceGrafana(
            String name,
            com.exoscale.api.models.operations.UpdateDbaasServiceGrafanaRequestBody requestBody) throws Exception;
    }


    public interface MethodCallCreateDbaasServiceGrafana {
        com.exoscale.api.models.operations.CreateDbaasServiceGrafanaResponse createDbaasServiceGrafana(
            String name,
            com.exoscale.api.models.operations.CreateDbaasServiceGrafanaRequestBody requestBody) throws Exception;
    }


    public interface MethodCallStartDbaasOpensearchMaintenance {
        com.exoscale.api.models.operations.StartDbaasOpensearchMaintenanceResponse startDbaasOpensearchMaintenance(
            String name) throws Exception;
    }


    public interface MethodCallGetDbaasKafkaAclConfig {
        com.exoscale.api.models.operations.GetDbaasKafkaAclConfigResponse getDbaasKafkaAclConfig(
            String name) throws Exception;
    }


    public interface MethodCallResetDbaasKafkaUserPassword {
        com.exoscale.api.models.operations.ResetDbaasKafkaUserPasswordResponse resetDbaasKafkaUserPassword(
            String serviceName,
            String username,
            com.exoscale.api.models.operations.ResetDbaasKafkaUserPasswordRequestBody requestBody) throws Exception;
    }


    public interface MethodCallCreateDbaasServiceOpensearch {
        com.exoscale.api.models.operations.CreateDbaasServiceOpensearchResponse createDbaasServiceOpensearch(
            String name,
            com.exoscale.api.models.operations.CreateDbaasServiceOpensearchRequestBody requestBody) throws Exception;
    }


    public interface MethodCallGetDbaasServiceOpensearch {
        com.exoscale.api.models.operations.GetDbaasServiceOpensearchResponse getDbaasServiceOpensearch(
            String name) throws Exception;
    }


    public interface MethodCallDeleteDbaasServiceOpensearch {
        com.exoscale.api.models.operations.DeleteDbaasServiceOpensearchResponse deleteDbaasServiceOpensearch(
            String name) throws Exception;
    }


    public interface MethodCallUpdateDbaasServiceOpensearch {
        com.exoscale.api.models.operations.UpdateDbaasServiceOpensearchResponse updateDbaasServiceOpensearch(
            String name,
            com.exoscale.api.models.operations.UpdateDbaasServiceOpensearchRequestBody requestBody) throws Exception;
    }


    public interface MethodCallDeleteDbaasServiceRedis {
        com.exoscale.api.models.operations.DeleteDbaasServiceRedisResponse deleteDbaasServiceRedis(
            String name) throws Exception;
    }


    public interface MethodCallUpdateDbaasServiceRedis {
        com.exoscale.api.models.operations.UpdateDbaasServiceRedisResponse updateDbaasServiceRedis(
            String name,
            com.exoscale.api.models.operations.UpdateDbaasServiceRedisRequestBody requestBody) throws Exception;
    }


    public interface MethodCallGetDbaasServiceRedis {
        com.exoscale.api.models.operations.GetDbaasServiceRedisResponse getDbaasServiceRedis(
            String name) throws Exception;
    }


    public interface MethodCallCreateDbaasServiceRedis {
        com.exoscale.api.models.operations.CreateDbaasServiceRedisResponse createDbaasServiceRedis(
            String name,
            com.exoscale.api.models.operations.CreateDbaasServiceRedisRequestBody requestBody) throws Exception;
    }


    public interface MethodCallUpdateDbaasServicePg {
        com.exoscale.api.models.operations.UpdateDbaasServicePgResponse updateDbaasServicePg(
            String name,
            com.exoscale.api.models.operations.UpdateDbaasServicePgRequestBody requestBody) throws Exception;
    }


    public interface MethodCallGetDbaasServicePg {
        com.exoscale.api.models.operations.GetDbaasServicePgResponse getDbaasServicePg(
            String name) throws Exception;
    }


    public interface MethodCallCreateDbaasServicePg {
        com.exoscale.api.models.operations.CreateDbaasServicePgResponse createDbaasServicePg(
            String name,
            com.exoscale.api.models.operations.CreateDbaasServicePgRequestBody requestBody) throws Exception;
    }


    public interface MethodCallDeleteDbaasServicePg {
        com.exoscale.api.models.operations.DeleteDbaasServicePgResponse deleteDbaasServicePg(
            String name) throws Exception;
    }


    public interface MethodCallCreateDbaasIntegration {
        com.exoscale.api.models.operations.CreateDbaasIntegrationResponse createDbaasIntegration(
            com.exoscale.api.models.operations.CreateDbaasIntegrationRequestBody request) throws Exception;
    }


    public interface MethodCallGetDbaasTask {
        com.exoscale.api.models.operations.GetDbaasTaskResponse getDbaasTask(
            String service,
            String id) throws Exception;
    }


    public interface MethodCallStartDbaasRedisMaintenance {
        com.exoscale.api.models.operations.StartDbaasRedisMaintenanceResponse startDbaasRedisMaintenance(
            String name) throws Exception;
    }


    public interface MethodCallDeleteDbaasKafkaTopicAclConfig {
        com.exoscale.api.models.operations.DeleteDbaasKafkaTopicAclConfigResponse deleteDbaasKafkaTopicAclConfig(
            String name,
            String aclId) throws Exception;
    }


    public interface MethodCallResetDbaasPostgresUserPassword {
        com.exoscale.api.models.operations.ResetDbaasPostgresUserPasswordResponse resetDbaasPostgresUserPassword(
            String serviceName,
            String username,
            com.exoscale.api.models.operations.ResetDbaasPostgresUserPasswordRequestBody requestBody) throws Exception;
    }


    public interface MethodCallScaleInstancePool {
        com.exoscale.api.models.operations.ScaleInstancePoolResponse scaleInstancePool(
            String id,
            com.exoscale.api.models.operations.ScaleInstancePoolRequestBody requestBody) throws Exception;
    }


    public interface MethodCallListInstancePools {
        com.exoscale.api.models.operations.ListInstancePoolsResponse listInstancePoolsDirect() throws Exception;
    }


    public interface MethodCallCreateInstancePool {
        com.exoscale.api.models.operations.CreateInstancePoolResponse createInstancePool(
            com.exoscale.api.models.operations.CreateInstancePoolRequestBody request) throws Exception;
    }


    public interface MethodCallDeleteInstancePool {
        com.exoscale.api.models.operations.DeleteInstancePoolResponse deleteInstancePool(
            String id) throws Exception;
    }


    public interface MethodCallGetInstancePool {
        com.exoscale.api.models.operations.GetInstancePoolResponse getInstancePool(
            String id) throws Exception;
    }


    public interface MethodCallUpdateInstancePool {
        com.exoscale.api.models.operations.UpdateInstancePoolResponse updateInstancePool(
            String id,
            com.exoscale.api.models.operations.UpdateInstancePoolRequestBody requestBody) throws Exception;
    }


    public interface MethodCallResetInstancePoolField {
        com.exoscale.api.models.operations.ResetInstancePoolFieldResponse resetInstancePoolField(
            String id,
            com.exoscale.api.models.operations.ResetInstancePoolFieldPathParamField field) throws Exception;
    }


    public interface MethodCallEvictInstancePoolMembers {
        com.exoscale.api.models.operations.EvictInstancePoolMembersResponse evictInstancePoolMembers(
            String id,
            com.exoscale.api.models.operations.EvictInstancePoolMembersRequestBody requestBody) throws Exception;
    }


    public interface MethodCallCreateSnapshot {
        com.exoscale.api.models.operations.CreateSnapshotResponse createSnapshot(
            String id) throws Exception;
    }


    public interface MethodCallRevealInstancePassword {
        com.exoscale.api.models.operations.RevealInstancePasswordResponse revealInstancePassword(
            String id) throws Exception;
    }


    public interface MethodCallResizeInstanceDisk {
        com.exoscale.api.models.operations.ResizeInstanceDiskResponse resizeInstanceDisk(
            String id,
            com.exoscale.api.models.operations.ResizeInstanceDiskRequestBody requestBody) throws Exception;
    }


    public interface MethodCallResetInstancePassword {
        com.exoscale.api.models.operations.ResetInstancePasswordResponse resetInstancePassword(
            String id) throws Exception;
    }


    public interface MethodCallStartInstance {
        com.exoscale.api.models.operations.StartInstanceResponse startInstance(
            String id,
            com.exoscale.api.models.operations.StartInstanceRequestBody requestBody) throws Exception;
    }


    public interface MethodCallScaleInstance {
        com.exoscale.api.models.operations.ScaleInstanceResponse scaleInstance(
            String id,
            com.exoscale.api.models.operations.ScaleInstanceRequestBody requestBody) throws Exception;
    }


    public interface MethodCallStopInstance {
        com.exoscale.api.models.operations.StopInstanceResponse stopInstance(
            String id) throws Exception;
    }


    public interface MethodCallAddInstanceProtection {
        com.exoscale.api.models.operations.AddInstanceProtectionResponse addInstanceProtection(
            String id) throws Exception;
    }


    public interface MethodCallResetInstanceField {
        com.exoscale.api.models.operations.ResetInstanceFieldResponse resetInstanceField(
            String id,
            com.exoscale.api.models.operations.ResetInstanceFieldPathParamField field) throws Exception;
    }


    public interface MethodCallRemoveInstanceProtection {
        com.exoscale.api.models.operations.RemoveInstanceProtectionResponse removeInstanceProtection(
            String id) throws Exception;
    }


    public interface MethodCallResetInstance {
        com.exoscale.api.models.operations.ResetInstanceResponse resetInstance(
            String id,
            com.exoscale.api.models.operations.ResetInstanceRequestBody requestBody) throws Exception;
    }


    public interface MethodCallDeleteInstance {
        com.exoscale.api.models.operations.DeleteInstanceResponse deleteInstance(
            String id) throws Exception;
    }


    public interface MethodCallUpdateInstance {
        com.exoscale.api.models.operations.UpdateInstanceResponse updateInstance(
            String id,
            com.exoscale.api.models.operations.UpdateInstanceRequestBody requestBody) throws Exception;
    }


    public interface MethodCallGetInstance {
        com.exoscale.api.models.operations.GetInstanceResponse getInstance(
            String id) throws Exception;
    }


    public interface MethodCallRebootInstance {
        com.exoscale.api.models.operations.RebootInstanceResponse rebootInstance(
            String id) throws Exception;
    }


    public interface MethodCallCreateInstance {
        com.exoscale.api.models.operations.CreateInstanceResponse createInstance(
            com.exoscale.api.models.operations.CreateInstanceRequestBody request) throws Exception;
    }


    public interface MethodCallListInstances {
        com.exoscale.api.models.operations.ListInstancesResponse listInstances(
            Optional<? extends String> managerId,
            Optional<? extends com.exoscale.api.models.operations.ManagerType> managerType,
            Optional<? extends String> ipAddress) throws Exception;
    }


    public interface MethodCallRevertInstanceToSnapshot {
        com.exoscale.api.models.operations.RevertInstanceToSnapshotResponse revertInstanceToSnapshot(
            String instanceId,
            com.exoscale.api.models.operations.RevertInstanceToSnapshotRequestBody requestBody) throws Exception;
    }


    public interface MethodCallExportSnapshot {
        com.exoscale.api.models.operations.ExportSnapshotResponse exportSnapshot(
            String id) throws Exception;
    }


    public interface MethodCallDeleteSnapshot {
        com.exoscale.api.models.operations.DeleteSnapshotResponse deleteSnapshot(
            String id) throws Exception;
    }


    public interface MethodCallGetSnapshot {
        com.exoscale.api.models.operations.GetSnapshotResponse getSnapshot(
            String id) throws Exception;
    }


    public interface MethodCallListSnapshots {
        com.exoscale.api.models.operations.ListSnapshotsResponse listSnapshotsDirect() throws Exception;
    }


    public interface MethodCallPromoteSnapshotToTemplate {
        com.exoscale.api.models.operations.PromoteSnapshotToTemplateResponse promoteSnapshotToTemplate(
            String id,
            com.exoscale.api.models.operations.PromoteSnapshotToTemplateRequestBody requestBody) throws Exception;
    }


    public interface MethodCallGetReverseDnsElasticIp {
        com.exoscale.api.models.operations.GetReverseDnsElasticIpResponse getReverseDnsElasticIp(
            String id) throws Exception;
    }


    public interface MethodCallUpdateReverseDnsElasticIp {
        com.exoscale.api.models.operations.UpdateReverseDnsElasticIpResponse updateReverseDnsElasticIp(
            String id,
            com.exoscale.api.models.operations.UpdateReverseDnsElasticIpRequestBody requestBody) throws Exception;
    }


    public interface MethodCallDeleteReverseDnsElasticIp {
        com.exoscale.api.models.operations.DeleteReverseDnsElasticIpResponse deleteReverseDnsElasticIp(
            String id) throws Exception;
    }


    public interface MethodCallUpdateReverseDnsInstance {
        com.exoscale.api.models.operations.UpdateReverseDnsInstanceResponse updateReverseDnsInstance(
            String id,
            com.exoscale.api.models.operations.UpdateReverseDnsInstanceRequestBody requestBody) throws Exception;
    }


    public interface MethodCallGetReverseDnsInstance {
        com.exoscale.api.models.operations.GetReverseDnsInstanceResponse getReverseDnsInstance(
            String id) throws Exception;
    }


    public interface MethodCallDeleteReverseDnsInstance {
        com.exoscale.api.models.operations.DeleteReverseDnsInstanceResponse deleteReverseDnsInstance(
            String id) throws Exception;
    }


    public interface MethodCallListAntiAffinityGroups {
        com.exoscale.api.models.operations.ListAntiAffinityGroupsResponse listAntiAffinityGroupsDirect() throws Exception;
    }


    public interface MethodCallCreateAntiAffinityGroup {
        com.exoscale.api.models.operations.CreateAntiAffinityGroupResponse createAntiAffinityGroup(
            com.exoscale.api.models.operations.CreateAntiAffinityGroupRequestBody request) throws Exception;
    }


    public interface MethodCallGetAntiAffinityGroup {
        com.exoscale.api.models.operations.GetAntiAffinityGroupResponse getAntiAffinityGroup(
            String id) throws Exception;
    }


    public interface MethodCallDeleteAntiAffinityGroup {
        com.exoscale.api.models.operations.DeleteAntiAffinityGroupResponse deleteAntiAffinityGroup(
            String id) throws Exception;
    }


    public interface MethodCallListEvents {
        com.exoscale.api.models.operations.ListEventsResponse listEvents(
            Optional<? extends OffsetDateTime> from,
            Optional<? extends OffsetDateTime> to) throws Exception;
    }


    public interface MethodCallDeleteRuleFromSecurityGroup {
        com.exoscale.api.models.operations.DeleteRuleFromSecurityGroupResponse deleteRuleFromSecurityGroup(
            String id,
            String ruleId) throws Exception;
    }


    public interface MethodCallCreateSecurityGroup {
        com.exoscale.api.models.operations.CreateSecurityGroupResponse createSecurityGroup(
            com.exoscale.api.models.operations.CreateSecurityGroupRequestBody request) throws Exception;
    }


    public interface MethodCallListSecurityGroups {
        com.exoscale.api.models.operations.ListSecurityGroupsResponse listSecurityGroups(
            Optional<? extends com.exoscale.api.models.operations.Visibility> visibility) throws Exception;
    }


    public interface MethodCallGetSecurityGroup {
        com.exoscale.api.models.operations.GetSecurityGroupResponse getSecurityGroup(
            String id) throws Exception;
    }


    public interface MethodCallDeleteSecurityGroup {
        com.exoscale.api.models.operations.DeleteSecurityGroupResponse deleteSecurityGroup(
            String id) throws Exception;
    }


    public interface MethodCallAttachInstanceToSecurityGroup {
        com.exoscale.api.models.operations.AttachInstanceToSecurityGroupResponse attachInstanceToSecurityGroup(
            String id,
            com.exoscale.api.models.operations.AttachInstanceToSecurityGroupRequestBody requestBody) throws Exception;
    }


    public interface MethodCallAddRuleToSecurityGroup {
        com.exoscale.api.models.operations.AddRuleToSecurityGroupResponse addRuleToSecurityGroup(
            String id,
            com.exoscale.api.models.operations.AddRuleToSecurityGroupRequestBody requestBody) throws Exception;
    }


    public interface MethodCallRemoveExternalSourceFromSecurityGroup {
        com.exoscale.api.models.operations.RemoveExternalSourceFromSecurityGroupResponse removeExternalSourceFromSecurityGroup(
            String id,
            com.exoscale.api.models.operations.RemoveExternalSourceFromSecurityGroupRequestBody requestBody) throws Exception;
    }


    public interface MethodCallDetachInstanceFromSecurityGroup {
        com.exoscale.api.models.operations.DetachInstanceFromSecurityGroupResponse detachInstanceFromSecurityGroup(
            String id,
            com.exoscale.api.models.operations.DetachInstanceFromSecurityGroupRequestBody requestBody) throws Exception;
    }


    public interface MethodCallAddExternalSourceToSecurityGroup {
        com.exoscale.api.models.operations.AddExternalSourceToSecurityGroupResponse addExternalSourceToSecurityGroup(
            String id,
            com.exoscale.api.models.operations.AddExternalSourceToSecurityGroupRequestBody requestBody) throws Exception;
    }


    public interface MethodCallRevokeAccessKey {
        com.exoscale.api.models.operations.RevokeAccessKeyResponse revokeAccessKey(
            String key) throws Exception;
    }


    public interface MethodCallGetAccessKey {
        com.exoscale.api.models.operations.GetAccessKeyResponse getAccessKey(
            String key) throws Exception;
    }


    public interface MethodCallListAccessKeys {
        com.exoscale.api.models.operations.ListAccessKeysResponse listAccessKeysDirect() throws Exception;
    }


    public interface MethodCallCreateAccessKey {
        com.exoscale.api.models.operations.CreateAccessKeyResponse createAccessKey(
            com.exoscale.api.models.operations.CreateAccessKeyRequestBody request) throws Exception;
    }


    public interface MethodCallCreateApiKey {
        com.exoscale.api.models.operations.CreateApiKeyResponse createApiKey(
            com.exoscale.api.models.operations.CreateApiKeyRequestBody request) throws Exception;
    }


    public interface MethodCallListApiKeys {
        com.exoscale.api.models.operations.ListApiKeysResponse listApiKeysDirect() throws Exception;
    }


    public interface MethodCallDeleteApiKey {
        com.exoscale.api.models.operations.DeleteApiKeyResponse deleteApiKey(
            String id) throws Exception;
    }


    public interface MethodCallGetApiKey {
        com.exoscale.api.models.operations.GetApiKeyResponse getApiKey(
            String id) throws Exception;
    }


    public interface MethodCallListAccessKeyKnownOperations {
        com.exoscale.api.models.operations.ListAccessKeyKnownOperationsResponse listAccessKeyKnownOperationsDirect() throws Exception;
    }


    public interface MethodCallUpdateIamRole {
        com.exoscale.api.models.operations.UpdateIamRoleResponse updateIamRole(
            String id,
            com.exoscale.api.models.operations.UpdateIamRoleRequestBody requestBody) throws Exception;
    }


    public interface MethodCallGetIamRole {
        com.exoscale.api.models.operations.GetIamRoleResponse getIamRole(
            String id) throws Exception;
    }


    public interface MethodCallDeleteIamRole {
        com.exoscale.api.models.operations.DeleteIamRoleResponse deleteIamRole(
            String id) throws Exception;
    }


    public interface MethodCallGetIamOrganizationPolicy {
        com.exoscale.api.models.operations.GetIamOrganizationPolicyResponse getIamOrganizationPolicyDirect() throws Exception;
    }


    public interface MethodCallUpdateIamOrganizationPolicy {
        com.exoscale.api.models.operations.UpdateIamOrganizationPolicyResponse updateIamOrganizationPolicy(
            com.exoscale.api.models.components.IamPolicy request) throws Exception;
    }


    public interface MethodCallListAccessKeyOperations {
        com.exoscale.api.models.operations.ListAccessKeyOperationsResponse listAccessKeyOperationsDirect() throws Exception;
    }


    public interface MethodCallUpdateIamRolePolicy {
        com.exoscale.api.models.operations.UpdateIamRolePolicyResponse updateIamRolePolicy(
            String id,
            com.exoscale.api.models.components.IamPolicy iamPolicy) throws Exception;
    }


    public interface MethodCallListIamRoles {
        com.exoscale.api.models.operations.ListIamRolesResponse listIamRolesDirect() throws Exception;
    }


    public interface MethodCallCreateIamRole {
        com.exoscale.api.models.operations.CreateIamRoleResponse createIamRole(
            com.exoscale.api.models.operations.CreateIamRoleRequestBody request) throws Exception;
    }


    public interface MethodCallAttachInstanceToPrivateNetwork {
        com.exoscale.api.models.operations.AttachInstanceToPrivateNetworkResponse attachInstanceToPrivateNetwork(
            String id,
            com.exoscale.api.models.operations.AttachInstanceToPrivateNetworkRequestBody requestBody) throws Exception;
    }


    public interface MethodCallUpdatePrivateNetworkInstanceIp {
        com.exoscale.api.models.operations.UpdatePrivateNetworkInstanceIpResponse updatePrivateNetworkInstanceIp(
            String id,
            com.exoscale.api.models.operations.UpdatePrivateNetworkInstanceIpRequestBody requestBody) throws Exception;
    }


    public interface MethodCallListPrivateNetworks {
        com.exoscale.api.models.operations.ListPrivateNetworksResponse listPrivateNetworksDirect() throws Exception;
    }


    public interface MethodCallCreatePrivateNetwork {
        com.exoscale.api.models.operations.CreatePrivateNetworkResponse createPrivateNetwork(
            com.exoscale.api.models.operations.CreatePrivateNetworkRequestBody request) throws Exception;
    }


    public interface MethodCallDetachInstanceFromPrivateNetwork {
        com.exoscale.api.models.operations.DetachInstanceFromPrivateNetworkResponse detachInstanceFromPrivateNetwork(
            String id,
            com.exoscale.api.models.operations.DetachInstanceFromPrivateNetworkRequestBody requestBody) throws Exception;
    }


    public interface MethodCallUpdatePrivateNetwork {
        com.exoscale.api.models.operations.UpdatePrivateNetworkResponse updatePrivateNetwork(
            String id,
            com.exoscale.api.models.operations.UpdatePrivateNetworkRequestBody requestBody) throws Exception;
    }


    public interface MethodCallGetPrivateNetwork {
        com.exoscale.api.models.operations.GetPrivateNetworkResponse getPrivateNetwork(
            String id) throws Exception;
    }


    public interface MethodCallDeletePrivateNetwork {
        com.exoscale.api.models.operations.DeletePrivateNetworkResponse deletePrivateNetwork(
            String id) throws Exception;
    }


    public interface MethodCallResetPrivateNetworkField {
        com.exoscale.api.models.operations.ResetPrivateNetworkFieldResponse resetPrivateNetworkField(
            String id,
            com.exoscale.api.models.operations.ResetPrivateNetworkFieldPathParamField field) throws Exception;
    }


    public interface MethodCallGetInstanceType {
        com.exoscale.api.models.operations.GetInstanceTypeResponse getInstanceType(
            String id) throws Exception;
    }


    public interface MethodCallListInstanceTypes {
        com.exoscale.api.models.operations.ListInstanceTypesResponse listInstanceTypesDirect() throws Exception;
    }


    public interface MethodCallCreateElasticIp {
        com.exoscale.api.models.operations.CreateElasticIpResponse createElasticIp(
            com.exoscale.api.models.operations.CreateElasticIpRequestBody request) throws Exception;
    }


    public interface MethodCallListElasticIps {
        com.exoscale.api.models.operations.ListElasticIpsResponse listElasticIpsDirect() throws Exception;
    }


    public interface MethodCallResetElasticIpField {
        com.exoscale.api.models.operations.ResetElasticIpFieldResponse resetElasticIpField(
            String id,
            com.exoscale.api.models.operations.Field field) throws Exception;
    }


    public interface MethodCallDetachInstanceFromElasticIp {
        com.exoscale.api.models.operations.DetachInstanceFromElasticIpResponse detachInstanceFromElasticIp(
            String id,
            com.exoscale.api.models.operations.DetachInstanceFromElasticIpRequestBody requestBody) throws Exception;
    }


    public interface MethodCallAttachInstanceToElasticIp {
        com.exoscale.api.models.operations.AttachInstanceToElasticIpResponse attachInstanceToElasticIp(
            String id,
            com.exoscale.api.models.operations.AttachInstanceToElasticIpRequestBody requestBody) throws Exception;
    }


    public interface MethodCallUpdateElasticIp {
        com.exoscale.api.models.operations.UpdateElasticIpResponse updateElasticIp(
            String id,
            com.exoscale.api.models.operations.UpdateElasticIpRequestBody requestBody) throws Exception;
    }


    public interface MethodCallGetElasticIp {
        com.exoscale.api.models.operations.GetElasticIpResponse getElasticIp(
            String id) throws Exception;
    }


    public interface MethodCallDeleteElasticIp {
        com.exoscale.api.models.operations.DeleteElasticIpResponse deleteElasticIp(
            String id) throws Exception;
    }


    public interface MethodCallListZones {
        com.exoscale.api.models.operations.ListZonesResponse listZonesDirect() throws Exception;
    }


    public interface MethodCallGenerateSksClusterKubeconfig {
        com.exoscale.api.models.operations.GenerateSksClusterKubeconfigResponse generateSksClusterKubeconfig(
            String id,
            com.exoscale.api.models.components.SksKubeconfigRequest sksKubeconfigRequest) throws Exception;
    }


    public interface MethodCallUpdateSksNodepool {
        com.exoscale.api.models.operations.UpdateSksNodepoolResponse updateSksNodepool(
            String id,
            String sksNodepoolId,
            com.exoscale.api.models.operations.UpdateSksNodepoolRequestBody requestBody) throws Exception;
    }


    public interface MethodCallGetSksNodepool {
        com.exoscale.api.models.operations.GetSksNodepoolResponse getSksNodepool(
            String id,
            String sksNodepoolId) throws Exception;
    }


    public interface MethodCallDeleteSksNodepool {
        com.exoscale.api.models.operations.DeleteSksNodepoolResponse deleteSksNodepool(
            String id,
            String sksNodepoolId) throws Exception;
    }


    public interface MethodCallGetSksClusterAuthorityCert {
        com.exoscale.api.models.operations.GetSksClusterAuthorityCertResponse getSksClusterAuthorityCert(
            String id,
            com.exoscale.api.models.operations.Authority authority) throws Exception;
    }


    public interface MethodCallListSksClusterDeprecatedResources {
        com.exoscale.api.models.operations.ListSksClusterDeprecatedResourcesResponse listSksClusterDeprecatedResources(
            String id) throws Exception;
    }


    public interface MethodCallScaleSksNodepool {
        com.exoscale.api.models.operations.ScaleSksNodepoolResponse scaleSksNodepool(
            String id,
            String sksNodepoolId,
            com.exoscale.api.models.operations.ScaleSksNodepoolRequestBody requestBody) throws Exception;
    }


    public interface MethodCallUpgradeSksClusterServiceLevel {
        com.exoscale.api.models.operations.UpgradeSksClusterServiceLevelResponse upgradeSksClusterServiceLevel(
            String id) throws Exception;
    }


    public interface MethodCallEvictSksNodepoolMembers {
        com.exoscale.api.models.operations.EvictSksNodepoolMembersResponse evictSksNodepoolMembers(
            String id,
            String sksNodepoolId,
            com.exoscale.api.models.operations.EvictSksNodepoolMembersRequestBody requestBody) throws Exception;
    }


    public interface MethodCallCreateSksCluster {
        com.exoscale.api.models.operations.CreateSksClusterResponse createSksCluster(
            com.exoscale.api.models.operations.CreateSksClusterRequestBody request) throws Exception;
    }


    public interface MethodCallListSksClusters {
        com.exoscale.api.models.operations.ListSksClustersResponse listSksClustersDirect() throws Exception;
    }


    public interface MethodCallDeleteSksCluster {
        com.exoscale.api.models.operations.DeleteSksClusterResponse deleteSksCluster(
            String id) throws Exception;
    }


    public interface MethodCallGetSksCluster {
        com.exoscale.api.models.operations.GetSksClusterResponse getSksCluster(
            String id) throws Exception;
    }


    public interface MethodCallUpdateSksCluster {
        com.exoscale.api.models.operations.UpdateSksClusterResponse updateSksCluster(
            String id,
            com.exoscale.api.models.operations.UpdateSksClusterRequestBody requestBody) throws Exception;
    }


    public interface MethodCallGetSksClusterInspection {
        com.exoscale.api.models.operations.GetSksClusterInspectionResponse getSksClusterInspection(
            String id) throws Exception;
    }


    public interface MethodCallRotateSksCcmCredentials {
        com.exoscale.api.models.operations.RotateSksCcmCredentialsResponse rotateSksCcmCredentials(
            String id) throws Exception;
    }


    public interface MethodCallResetSksClusterField {
        com.exoscale.api.models.operations.ResetSksClusterFieldResponse resetSksClusterField(
            String id,
            com.exoscale.api.models.operations.ResetSksClusterFieldPathParamField field) throws Exception;
    }


    public interface MethodCallCreateSksNodepool {
        com.exoscale.api.models.operations.CreateSksNodepoolResponse createSksNodepool(
            String id,
            com.exoscale.api.models.operations.CreateSksNodepoolRequestBody requestBody) throws Exception;
    }


    public interface MethodCallResetSksNodepoolField {
        com.exoscale.api.models.operations.ResetSksNodepoolFieldResponse resetSksNodepoolField(
            String id,
            String sksNodepoolId,
            com.exoscale.api.models.operations.ResetSksNodepoolFieldPathParamField field) throws Exception;
    }


    public interface MethodCallRotateSksOperatorsCa {
        com.exoscale.api.models.operations.RotateSksOperatorsCaResponse rotateSksOperatorsCa(
            String id) throws Exception;
    }


    public interface MethodCallListSksClusterVersions {
        com.exoscale.api.models.operations.ListSksClusterVersionsResponse listSksClusterVersions(
            Optional<? extends String> includeDeprecated) throws Exception;
    }


    public interface MethodCallUpgradeSksCluster {
        com.exoscale.api.models.operations.UpgradeSksClusterResponse upgradeSksCluster(
            String id,
            com.exoscale.api.models.operations.UpgradeSksClusterRequestBody requestBody) throws Exception;
    }


    public interface MethodCallListDnsDomainRecords {
        com.exoscale.api.models.operations.ListDnsDomainRecordsResponse listDnsDomainRecords(
            String domainId) throws Exception;
    }


    public interface MethodCallCreateDnsDomainRecord {
        com.exoscale.api.models.operations.CreateDnsDomainRecordResponse createDnsDomainRecord(
            String domainId,
            com.exoscale.api.models.operations.CreateDnsDomainRecordRequestBody requestBody) throws Exception;
    }


    public interface MethodCallListDnsDomains {
        com.exoscale.api.models.operations.ListDnsDomainsResponse listDnsDomainsDirect() throws Exception;
    }


    public interface MethodCallCreateDnsDomain {
        com.exoscale.api.models.operations.CreateDnsDomainResponse createDnsDomain(
            com.exoscale.api.models.operations.CreateDnsDomainRequestBody request) throws Exception;
    }


    public interface MethodCallGetDnsDomainRecord {
        com.exoscale.api.models.operations.GetDnsDomainRecordResponse getDnsDomainRecord(
            String domainId,
            String recordId) throws Exception;
    }


    public interface MethodCallUpdateDnsDomainRecord {
        com.exoscale.api.models.operations.UpdateDnsDomainRecordResponse updateDnsDomainRecord(
            String domainId,
            String recordId,
            com.exoscale.api.models.operations.UpdateDnsDomainRecordRequestBody requestBody) throws Exception;
    }


    public interface MethodCallDeleteDnsDomainRecord {
        com.exoscale.api.models.operations.DeleteDnsDomainRecordResponse deleteDnsDomainRecord(
            String domainId,
            String recordId) throws Exception;
    }


    public interface MethodCallGetDnsDomainZoneFile {
        com.exoscale.api.models.operations.GetDnsDomainZoneFileResponse getDnsDomainZoneFile(
            String id) throws Exception;
    }


    public interface MethodCallDeleteDnsDomain {
        com.exoscale.api.models.operations.DeleteDnsDomainResponse deleteDnsDomain(
            String id) throws Exception;
    }


    public interface MethodCallGetDnsDomain {
        com.exoscale.api.models.operations.GetDnsDomainResponse getDnsDomain(
            String id) throws Exception;
    }


    public interface MethodCallListDeployTargets {
        com.exoscale.api.models.operations.ListDeployTargetsResponse listDeployTargetsDirect() throws Exception;
    }


    public interface MethodCallGetDeployTarget {
        com.exoscale.api.models.operations.GetDeployTargetResponse getDeployTarget(
            String id) throws Exception;
    }


    public interface MethodCallAttachBlockStorageVolumeToInstance {
        com.exoscale.api.models.operations.AttachBlockStorageVolumeToInstanceResponse attachBlockStorageVolumeToInstance(
            String id,
            com.exoscale.api.models.operations.AttachBlockStorageVolumeToInstanceRequestBody requestBody) throws Exception;
    }


    public interface MethodCallDeleteBlockStorageSnapshot {
        com.exoscale.api.models.operations.DeleteBlockStorageSnapshotResponse deleteBlockStorageSnapshot(
            String id) throws Exception;
    }


    public interface MethodCallGetBlockStorageSnapshot {
        com.exoscale.api.models.operations.GetBlockStorageSnapshotResponse getBlockStorageSnapshot(
            String id) throws Exception;
    }


    public interface MethodCallGetBlockStorageVolume {
        com.exoscale.api.models.operations.GetBlockStorageVolumeResponse getBlockStorageVolume(
            String id) throws Exception;
    }


    public interface MethodCallUpdateBlockStorageVolumeLabels {
        com.exoscale.api.models.operations.UpdateBlockStorageVolumeLabelsResponse updateBlockStorageVolumeLabels(
            String id,
            com.exoscale.api.models.operations.UpdateBlockStorageVolumeLabelsRequestBody requestBody) throws Exception;
    }


    public interface MethodCallDeleteBlockStorageVolume {
        com.exoscale.api.models.operations.DeleteBlockStorageVolumeResponse deleteBlockStorageVolume(
            String id) throws Exception;
    }


    public interface MethodCallCreateBlockStorageSnapshot {
        com.exoscale.api.models.operations.CreateBlockStorageSnapshotResponse createBlockStorageSnapshot(
            String id,
            com.exoscale.api.models.operations.CreateBlockStorageSnapshotRequestBody requestBody) throws Exception;
    }


    public interface MethodCallListBlockStorageSnapshots {
        com.exoscale.api.models.operations.ListBlockStorageSnapshotsResponse listBlockStorageSnapshotsDirect() throws Exception;
    }


    public interface MethodCallResizeBlockStorageVolume {
        com.exoscale.api.models.operations.ResizeBlockStorageVolumeResponse resizeBlockStorageVolume(
            String id,
            com.exoscale.api.models.operations.ResizeBlockStorageVolumeRequestBody requestBody) throws Exception;
    }


    public interface MethodCallDetachBlockStorageVolume {
        com.exoscale.api.models.operations.DetachBlockStorageVolumeResponse detachBlockStorageVolume(
            String id) throws Exception;
    }


    public interface MethodCallListBlockStorageVolumes {
        com.exoscale.api.models.operations.ListBlockStorageVolumesResponse listBlockStorageVolumes(
            Optional<? extends String> instanceId) throws Exception;
    }


    public interface MethodCallCreateBlockStorageVolume {
        com.exoscale.api.models.operations.CreateBlockStorageVolumeResponse createBlockStorageVolume(
            com.exoscale.api.models.operations.CreateBlockStorageVolumeRequestBody request) throws Exception;
    }


    public interface MethodCallGetQuota {
        com.exoscale.api.models.operations.GetQuotaResponse getQuota(
            String entity) throws Exception;
    }


    public interface MethodCallListQuotas {
        com.exoscale.api.models.operations.ListQuotasResponse listQuotasDirect() throws Exception;
    }


    public interface MethodCallGetOperation {
        com.exoscale.api.models.operations.GetOperationResponse getOperation(
            String id) throws Exception;
    }


    public interface MethodCallDeleteTemplate {
        com.exoscale.api.models.operations.DeleteTemplateResponse deleteTemplate(
            String id) throws Exception;
    }


    public interface MethodCallCopyTemplate {
        com.exoscale.api.models.operations.CopyTemplateResponse copyTemplate(
            String id,
            com.exoscale.api.models.operations.CopyTemplateRequestBody requestBody) throws Exception;
    }


    public interface MethodCallUpdateTemplate {
        com.exoscale.api.models.operations.UpdateTemplateResponse updateTemplate(
            String id,
            com.exoscale.api.models.operations.UpdateTemplateRequestBody requestBody) throws Exception;
    }


    public interface MethodCallGetTemplate {
        com.exoscale.api.models.operations.GetTemplateResponse getTemplate(
            String id) throws Exception;
    }


    public interface MethodCallListTemplates {
        com.exoscale.api.models.operations.ListTemplatesResponse listTemplates(
            Optional<? extends com.exoscale.api.models.operations.QueryParamVisibility> visibility,
            Optional<? extends String> family) throws Exception;
    }


    public interface MethodCallRegisterTemplate {
        com.exoscale.api.models.operations.RegisterTemplateResponse registerTemplate(
            com.exoscale.api.models.operations.RegisterTemplateRequestBody request) throws Exception;
    }


    public interface MethodCallListSosBucketsUsage {
        com.exoscale.api.models.operations.ListSosBucketsUsageResponse listSosBucketsUsageDirect() throws Exception;
    }


    public interface MethodCallGetSosPresignedUrl {
        com.exoscale.api.models.operations.GetSosPresignedUrlResponse getSosPresignedUrl(
            String bucket,
            Optional<? extends String> key) throws Exception;
    }


    public interface MethodCallDeleteSshKey {
        com.exoscale.api.models.operations.DeleteSshKeyResponse deleteSshKey(
            String name) throws Exception;
    }


    public interface MethodCallGetSshKey {
        com.exoscale.api.models.operations.GetSshKeyResponse getSshKey(
            String name) throws Exception;
    }


    public interface MethodCallListSshKeys {
        com.exoscale.api.models.operations.ListSshKeysResponse listSshKeysDirect() throws Exception;
    }


    public interface MethodCallRegisterSshKey {
        com.exoscale.api.models.operations.RegisterSshKeyResponse registerSshKey(
            com.exoscale.api.models.operations.RegisterSshKeyRequestBody request) throws Exception;
    }

}
