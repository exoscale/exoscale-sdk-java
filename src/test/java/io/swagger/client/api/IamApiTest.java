/*
 * Exoscale Public API
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * OpenAPI spec version: 2.0.0
 * Contact: api@exoscale.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.AccessKey;
import io.swagger.client.model.AccesskeyBody;
import io.swagger.client.model.ApikeyBody;
import io.swagger.client.model.IamApiKey;
import io.swagger.client.model.IamApiKeyCreated;
import io.swagger.client.model.IamPolicy;
import io.swagger.client.model.IamRole;
import io.swagger.client.model.IamroleBody;
import io.swagger.client.model.IamroleIdBody;
import io.swagger.client.model.InlineResponse20015;
import io.swagger.client.model.InlineResponse20018;
import io.swagger.client.model.InlineResponse20023;
import io.swagger.client.model.InlineResponse20039;
import io.swagger.client.model.Operation;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for IamApi
 */
@Ignore
public class IamApiTest {

    private final IamApi api = new IamApi();

    /**
     * Create a legacy IAM Access Key
     *
     * This operation creates a legacy IAM Access Key, to create a key for use with IAM roles use the api-key endpoint.The corresponding secret is only available in the response returned by this operation, the caller must take care of storing it safely as there is no other way to retrieve it.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createAccessKeyTest() {
        AccesskeyBody body = null;
        AccessKey response = api.createAccessKey(body);

        // TODO: test validations
    }
    /**
     * Create a new API key
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createApiKeyTest() {
        ApikeyBody body = null;
        IamApiKeyCreated response = api.createApiKey(body);

        // TODO: test validations
    }
    /**
     * Create IAM Role
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createIamRoleTest() {
        IamroleBody body = null;
        Operation response = api.createIamRole(body);

        // TODO: test validations
    }
    /**
     * Delete an API key
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteApiKeyTest() {
        String id = null;
        Operation response = api.deleteApiKey(id);

        // TODO: test validations
    }
    /**
     * Delete IAM Role
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteIamRoleTest() {
        UUID id = null;
        Operation response = api.deleteIamRole(id);

        // TODO: test validations
    }
    /**
     * Retrieve IAM Access Key details
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAccessKeyTest() {
        String key = null;
        AccessKey response = api.getAccessKey(key);

        // TODO: test validations
    }
    /**
     * Get API key
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getApiKeyTest() {
        String id = null;
        IamApiKey response = api.getApiKey(id);

        // TODO: test validations
    }
    /**
     * Retrieve IAM Organization Policy
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getIamOrganizationPolicyTest() {
        IamPolicy response = api.getIamOrganizationPolicy();

        // TODO: test validations
    }
    /**
     * Retrieve IAM Role
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getIamRoleTest() {
        UUID id = null;
        IamRole response = api.getIamRole(id);

        // TODO: test validations
    }
    /**
     * Retrieve all known available IAM Access Key operations and associated tags
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listAccessKeyKnownOperationsTest() {
        InlineResponse20023 response = api.listAccessKeyKnownOperations();

        // TODO: test validations
    }
    /**
     * Retrieve IAM Access Key operations and associated tags for the signing key
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listAccessKeyOperationsTest() {
        InlineResponse20023 response = api.listAccessKeyOperations();

        // TODO: test validations
    }
    /**
     * List IAM Access Keys
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listAccessKeysTest() {
        InlineResponse20015 response = api.listAccessKeys();

        // TODO: test validations
    }
    /**
     * List API keys
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listApiKeysTest() {
        InlineResponse20018 response = api.listApiKeys();

        // TODO: test validations
    }
    /**
     * List IAM Roles
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listIamRolesTest() {
        InlineResponse20039 response = api.listIamRoles();

        // TODO: test validations
    }
    /**
     * Revoke an IAM Access Key
     *
     * This operation revokes the specified IAM Access Key. Access Keys created by the revoked Access Key will not be revoked.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void revokeAccessKeyTest() {
        String key = null;
        Operation response = api.revokeAccessKey(key);

        // TODO: test validations
    }
    /**
     * Update IAM Organization Policy
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateIamOrganizationPolicyTest() {
        IamPolicy body = null;
        Operation response = api.updateIamOrganizationPolicy(body);

        // TODO: test validations
    }
    /**
     * Update IAM Role
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateIamRoleTest() {
        IamroleIdBody body = null;
        UUID id = null;
        Operation response = api.updateIamRole(body, id);

        // TODO: test validations
    }
    /**
     * Update IAM Role Policy
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateIamRolePolicyTest() {
        IamPolicy body = null;
        UUID id = null;
        Operation response = api.updateIamRolePolicy(body, id);

        // TODO: test validations
    }
}
