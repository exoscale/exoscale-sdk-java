/*
 * ExoscalePublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.exoscale.apichgva2.models;

import com.exoscale.apichgva2.models.containers.WriteAheadLogWALSettingsWalSenderTimeout;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for WriteAheadLogWALSettings type.
 */
public class WriteAheadLogWALSettings {
    private Integer walWriterDelay;
    private WriteAheadLogWALSettingsWalSenderTimeout walSenderTimeout;
    private Integer maxWalSenders;
    private Integer maxSlotWalKeepSize;

    /**
     * Default constructor.
     */
    public WriteAheadLogWALSettings() {
    }

    /**
     * Initialization constructor.
     * @param  walWriterDelay  Integer value for walWriterDelay.
     * @param  walSenderTimeout  WriteAheadLogWALSettingsWalSenderTimeout value for
     *         walSenderTimeout.
     * @param  maxWalSenders  Integer value for maxWalSenders.
     * @param  maxSlotWalKeepSize  Integer value for maxSlotWalKeepSize.
     */
    public WriteAheadLogWALSettings(
            Integer walWriterDelay,
            WriteAheadLogWALSettingsWalSenderTimeout walSenderTimeout,
            Integer maxWalSenders,
            Integer maxSlotWalKeepSize) {
        this.walWriterDelay = walWriterDelay;
        this.walSenderTimeout = walSenderTimeout;
        this.maxWalSenders = maxWalSenders;
        this.maxSlotWalKeepSize = maxSlotWalKeepSize;
    }

    /**
     * Getter for WalWriterDelay.
     * WAL flush interval in milliseconds. Note that setting this value to lower than the default
     * 200ms may negatively impact performance
     * @return Returns the Integer
     */
    @JsonGetter("wal_writer_delay")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getWalWriterDelay() {
        return walWriterDelay;
    }

    /**
     * Setter for WalWriterDelay.
     * WAL flush interval in milliseconds. Note that setting this value to lower than the default
     * 200ms may negatively impact performance
     * @param walWriterDelay Value for Integer
     */
    @JsonSetter("wal_writer_delay")
    public void setWalWriterDelay(Integer walWriterDelay) {
        this.walWriterDelay = walWriterDelay;
    }

    /**
     * Getter for WalSenderTimeout.
     * Terminate replication connections that are inactive for longer than this amount of time, in
     * milliseconds. Setting this value to zero disables the timeout.
     * @return Returns the WriteAheadLogWALSettingsWalSenderTimeout
     */
    @JsonGetter("wal_sender_timeout")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public WriteAheadLogWALSettingsWalSenderTimeout getWalSenderTimeout() {
        return walSenderTimeout;
    }

    /**
     * Setter for WalSenderTimeout.
     * Terminate replication connections that are inactive for longer than this amount of time, in
     * milliseconds. Setting this value to zero disables the timeout.
     * @param walSenderTimeout Value for WriteAheadLogWALSettingsWalSenderTimeout
     */
    @JsonSetter("wal_sender_timeout")
    public void setWalSenderTimeout(WriteAheadLogWALSettingsWalSenderTimeout walSenderTimeout) {
        this.walSenderTimeout = walSenderTimeout;
    }

    /**
     * Getter for MaxWalSenders.
     * PostgreSQL maximum WAL senders
     * @return Returns the Integer
     */
    @JsonGetter("max_wal_senders")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getMaxWalSenders() {
        return maxWalSenders;
    }

    /**
     * Setter for MaxWalSenders.
     * PostgreSQL maximum WAL senders
     * @param maxWalSenders Value for Integer
     */
    @JsonSetter("max_wal_senders")
    public void setMaxWalSenders(Integer maxWalSenders) {
        this.maxWalSenders = maxWalSenders;
    }

    /**
     * Getter for MaxSlotWalKeepSize.
     * PostgreSQL maximum WAL size (MB) reserved for replication slots. Default is -1 (unlimited).
     * wal_keep_size minimum WAL size setting takes precedence over this.
     * @return Returns the Integer
     */
    @JsonGetter("max_slot_wal_keep_size")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getMaxSlotWalKeepSize() {
        return maxSlotWalKeepSize;
    }

    /**
     * Setter for MaxSlotWalKeepSize.
     * PostgreSQL maximum WAL size (MB) reserved for replication slots. Default is -1 (unlimited).
     * wal_keep_size minimum WAL size setting takes precedence over this.
     * @param maxSlotWalKeepSize Value for Integer
     */
    @JsonSetter("max_slot_wal_keep_size")
    public void setMaxSlotWalKeepSize(Integer maxSlotWalKeepSize) {
        this.maxSlotWalKeepSize = maxSlotWalKeepSize;
    }

    /**
     * Converts this WriteAheadLogWALSettings into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "WriteAheadLogWALSettings [" + "walWriterDelay=" + walWriterDelay
                + ", walSenderTimeout=" + walSenderTimeout + ", maxWalSenders=" + maxWalSenders
                + ", maxSlotWalKeepSize=" + maxSlotWalKeepSize + "]";
    }

    /**
     * Builds a new {@link WriteAheadLogWALSettings.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link WriteAheadLogWALSettings.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .walWriterDelay(getWalWriterDelay())
                .walSenderTimeout(getWalSenderTimeout())
                .maxWalSenders(getMaxWalSenders())
                .maxSlotWalKeepSize(getMaxSlotWalKeepSize());
        return builder;
    }

    /**
     * Class to build instances of {@link WriteAheadLogWALSettings}.
     */
    public static class Builder {
        private Integer walWriterDelay;
        private WriteAheadLogWALSettingsWalSenderTimeout walSenderTimeout;
        private Integer maxWalSenders;
        private Integer maxSlotWalKeepSize;



        /**
         * Setter for walWriterDelay.
         * @param  walWriterDelay  Integer value for walWriterDelay.
         * @return Builder
         */
        public Builder walWriterDelay(Integer walWriterDelay) {
            this.walWriterDelay = walWriterDelay;
            return this;
        }

        /**
         * Setter for walSenderTimeout.
         * @param  walSenderTimeout  WriteAheadLogWALSettingsWalSenderTimeout value for
         *         walSenderTimeout.
         * @return Builder
         */
        public Builder walSenderTimeout(
                WriteAheadLogWALSettingsWalSenderTimeout walSenderTimeout) {
            this.walSenderTimeout = walSenderTimeout;
            return this;
        }

        /**
         * Setter for maxWalSenders.
         * @param  maxWalSenders  Integer value for maxWalSenders.
         * @return Builder
         */
        public Builder maxWalSenders(Integer maxWalSenders) {
            this.maxWalSenders = maxWalSenders;
            return this;
        }

        /**
         * Setter for maxSlotWalKeepSize.
         * @param  maxSlotWalKeepSize  Integer value for maxSlotWalKeepSize.
         * @return Builder
         */
        public Builder maxSlotWalKeepSize(Integer maxSlotWalKeepSize) {
            this.maxSlotWalKeepSize = maxSlotWalKeepSize;
            return this;
        }

        /**
         * Builds a new {@link WriteAheadLogWALSettings} object using the set fields.
         * @return {@link WriteAheadLogWALSettings}
         */
        public WriteAheadLogWALSettings build() {
            return new WriteAheadLogWALSettings(walWriterDelay, walSenderTimeout, maxWalSenders,
                    maxSlotWalKeepSize);
        }
    }
}
