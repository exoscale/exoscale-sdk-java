/*
 * Exoscale Public API
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@exoscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AttachBlockStorageVolumeToInstanceRequest;
import org.openapitools.client.model.CreateElasticIpRequest;
import org.openapitools.client.model.ElasticIp;
import org.openapitools.client.model.ListElasticIps200Response;
import org.openapitools.client.model.Operation;
import java.util.UUID;
import org.openapitools.client.model.UpdateElasticIpRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ElasticIpApi
 */
@Disabled
public class ElasticIpApiTest {

    private final ElasticIpApi api = new ElasticIpApi();

    /**
     * Attach a Compute instance to an Elastic IP
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void attachInstanceToElasticIpTest() throws ApiException {
        UUID id = null;
        AttachBlockStorageVolumeToInstanceRequest attachBlockStorageVolumeToInstanceRequest = null;
        Operation response = api.attachInstanceToElasticIp(id, attachBlockStorageVolumeToInstanceRequest);
        // TODO: test validations
    }

    /**
     * Create an Elastic IP
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createElasticIpTest() throws ApiException {
        CreateElasticIpRequest createElasticIpRequest = null;
        Operation response = api.createElasticIp(createElasticIpRequest);
        // TODO: test validations
    }

    /**
     * Delete an Elastic IP
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteElasticIpTest() throws ApiException {
        UUID id = null;
        Operation response = api.deleteElasticIp(id);
        // TODO: test validations
    }

    /**
     * Detach a Compute instance from an Elastic IP
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void detachInstanceFromElasticIpTest() throws ApiException {
        UUID id = null;
        AttachBlockStorageVolumeToInstanceRequest attachBlockStorageVolumeToInstanceRequest = null;
        Operation response = api.detachInstanceFromElasticIp(id, attachBlockStorageVolumeToInstanceRequest);
        // TODO: test validations
    }

    /**
     * Retrieve Elastic IP details
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getElasticIpTest() throws ApiException {
        UUID id = null;
        ElasticIp response = api.getElasticIp(id);
        // TODO: test validations
    }

    /**
     * List Elastic IPs
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listElasticIpsTest() throws ApiException {
        ListElasticIps200Response response = api.listElasticIps();
        // TODO: test validations
    }

    /**
     * Reset an Elastic IP field to its default value
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void resetElasticIpFieldTest() throws ApiException {
        UUID id = null;
        String field = null;
        Operation response = api.resetElasticIpField(id, field);
        // TODO: test validations
    }

    /**
     * Update an Elastic IP
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateElasticIpTest() throws ApiException {
        UUID id = null;
        UpdateElasticIpRequest updateElasticIpRequest = null;
        Operation response = api.updateElasticIp(id, updateElasticIpRequest);
        // TODO: test validations
    }

}
