/*
 * Exoscale Public API
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * OpenAPI spec version: 2.0.0
 * Contact: api@exoscale.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
/**
 * MySQL connection information properties
 */
@Schema(description = "MySQL connection information properties")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-03-08T17:23:40.261901+01:00[Europe/Vienna]")

public class DbaasservicemysqlConnectioninfo {
  @JsonProperty("uri")
  private List<String> uri = null;

  @JsonProperty("params")
  private List<Map<String, String>> params = null;

  @JsonProperty("standby")
  private List<String> standby = null;

  public DbaasservicemysqlConnectioninfo uri(List<String> uri) {
    this.uri = uri;
    return this;
  }

  public DbaasservicemysqlConnectioninfo addUriItem(String uriItem) {
    if (this.uri == null) {
      this.uri = new ArrayList<>();
    }
    this.uri.add(uriItem);
    return this;
  }

   /**
   * Get uri
   * @return uri
  **/
  @Schema(description = "")
  public List<String> getUri() {
    return uri;
  }

  public void setUri(List<String> uri) {
    this.uri = uri;
  }

  public DbaasservicemysqlConnectioninfo params(List<Map<String, String>> params) {
    this.params = params;
    return this;
  }

  public DbaasservicemysqlConnectioninfo addParamsItem(Map<String, String> paramsItem) {
    if (this.params == null) {
      this.params = new ArrayList<>();
    }
    this.params.add(paramsItem);
    return this;
  }

   /**
   * Get params
   * @return params
  **/
  @Schema(description = "")
  public List<Map<String, String>> getParams() {
    return params;
  }

  public void setParams(List<Map<String, String>> params) {
    this.params = params;
  }

  public DbaasservicemysqlConnectioninfo standby(List<String> standby) {
    this.standby = standby;
    return this;
  }

  public DbaasservicemysqlConnectioninfo addStandbyItem(String standbyItem) {
    if (this.standby == null) {
      this.standby = new ArrayList<>();
    }
    this.standby.add(standbyItem);
    return this;
  }

   /**
   * Get standby
   * @return standby
  **/
  @Schema(description = "")
  public List<String> getStandby() {
    return standby;
  }

  public void setStandby(List<String> standby) {
    this.standby = standby;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DbaasservicemysqlConnectioninfo dbaasservicemysqlConnectioninfo = (DbaasservicemysqlConnectioninfo) o;
    return Objects.equals(this.uri, dbaasservicemysqlConnectioninfo.uri) &&
        Objects.equals(this.params, dbaasservicemysqlConnectioninfo.params) &&
        Objects.equals(this.standby, dbaasservicemysqlConnectioninfo.standby);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uri, params, standby);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DbaasservicemysqlConnectioninfo {\n");
    
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("    params: ").append(toIndentedString(params)).append("\n");
    sb.append("    standby: ").append(toIndentedString(standby)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
