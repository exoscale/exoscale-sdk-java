/*
 * Exoscale Public API
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@exoscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;

/**
 * Model tests for JsonSchemaKafkaConnect
 */
public class JsonSchemaKafkaConnectTest {
    private final JsonSchemaKafkaConnect model = new JsonSchemaKafkaConnect();

    /**
     * Model tests for JsonSchemaKafkaConnect
     */
    @Test
    public void testJsonSchemaKafkaConnect() {
        // TODO: test JsonSchemaKafkaConnect
    }

    /**
     * Test the property 'producerBufferMemory'
     */
    @Test
    public void producerBufferMemoryTest() {
        // TODO: test producerBufferMemory
    }

    /**
     * Test the property 'consumerMaxPollIntervalMs'
     */
    @Test
    public void consumerMaxPollIntervalMsTest() {
        // TODO: test consumerMaxPollIntervalMs
    }

    /**
     * Test the property 'producerCompressionType'
     */
    @Test
    public void producerCompressionTypeTest() {
        // TODO: test producerCompressionType
    }

    /**
     * Test the property 'connectorClientConfigOverridePolicy'
     */
    @Test
    public void connectorClientConfigOverridePolicyTest() {
        // TODO: test connectorClientConfigOverridePolicy
    }

    /**
     * Test the property 'offsetFlushIntervalMs'
     */
    @Test
    public void offsetFlushIntervalMsTest() {
        // TODO: test offsetFlushIntervalMs
    }

    /**
     * Test the property 'scheduledRebalanceMaxDelayMs'
     */
    @Test
    public void scheduledRebalanceMaxDelayMsTest() {
        // TODO: test scheduledRebalanceMaxDelayMs
    }

    /**
     * Test the property 'consumerFetchMaxBytes'
     */
    @Test
    public void consumerFetchMaxBytesTest() {
        // TODO: test consumerFetchMaxBytes
    }

    /**
     * Test the property 'consumerMaxPartitionFetchBytes'
     */
    @Test
    public void consumerMaxPartitionFetchBytesTest() {
        // TODO: test consumerMaxPartitionFetchBytes
    }

    /**
     * Test the property 'offsetFlushTimeoutMs'
     */
    @Test
    public void offsetFlushTimeoutMsTest() {
        // TODO: test offsetFlushTimeoutMs
    }

    /**
     * Test the property 'consumerAutoOffsetReset'
     */
    @Test
    public void consumerAutoOffsetResetTest() {
        // TODO: test consumerAutoOffsetReset
    }

    /**
     * Test the property 'producerMaxRequestSize'
     */
    @Test
    public void producerMaxRequestSizeTest() {
        // TODO: test producerMaxRequestSize
    }

    /**
     * Test the property 'producerBatchSize'
     */
    @Test
    public void producerBatchSizeTest() {
        // TODO: test producerBatchSize
    }

    /**
     * Test the property 'sessionTimeoutMs'
     */
    @Test
    public void sessionTimeoutMsTest() {
        // TODO: test sessionTimeoutMs
    }

    /**
     * Test the property 'producerLingerMs'
     */
    @Test
    public void producerLingerMsTest() {
        // TODO: test producerLingerMs
    }

    /**
     * Test the property 'consumerIsolationLevel'
     */
    @Test
    public void consumerIsolationLevelTest() {
        // TODO: test consumerIsolationLevel
    }

    /**
     * Test the property 'consumerMaxPollRecords'
     */
    @Test
    public void consumerMaxPollRecordsTest() {
        // TODO: test consumerMaxPollRecords
    }

}
