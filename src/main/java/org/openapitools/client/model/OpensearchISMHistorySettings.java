/*
 * Exoscale Public API
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@exoscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * OpensearchISMHistorySettings
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-27T17:14:44.205710495Z[Etc/UTC]", comments = "Generator version: 7.5.0-SNAPSHOT")
public class OpensearchISMHistorySettings {
  public static final String SERIALIZED_NAME_ISM_ENABLED = "ism_enabled";
  @SerializedName(SERIALIZED_NAME_ISM_ENABLED)
  private Boolean ismEnabled = true;

  public static final String SERIALIZED_NAME_ISM_HISTORY_ENABLED = "ism_history_enabled";
  @SerializedName(SERIALIZED_NAME_ISM_HISTORY_ENABLED)
  private Boolean ismHistoryEnabled = true;

  public static final String SERIALIZED_NAME_ISM_HISTORY_MAX_AGE = "ism_history_max_age";
  @SerializedName(SERIALIZED_NAME_ISM_HISTORY_MAX_AGE)
  private Integer ismHistoryMaxAge = 24;

  public static final String SERIALIZED_NAME_ISM_HISTORY_MAX_DOCS = "ism_history_max_docs";
  @SerializedName(SERIALIZED_NAME_ISM_HISTORY_MAX_DOCS)
  private Integer ismHistoryMaxDocs = 2500000;

  public static final String SERIALIZED_NAME_ISM_HISTORY_ROLLOVER_CHECK_PERIOD = "ism_history_rollover_check_period";
  @SerializedName(SERIALIZED_NAME_ISM_HISTORY_ROLLOVER_CHECK_PERIOD)
  private Integer ismHistoryRolloverCheckPeriod = 8;

  public static final String SERIALIZED_NAME_ISM_HISTORY_ROLLOVER_RETENTION_PERIOD = "ism_history_rollover_retention_period";
  @SerializedName(SERIALIZED_NAME_ISM_HISTORY_ROLLOVER_RETENTION_PERIOD)
  private Integer ismHistoryRolloverRetentionPeriod = 30;

  public OpensearchISMHistorySettings() {
  }

  public OpensearchISMHistorySettings ismEnabled(Boolean ismEnabled) {
    this.ismEnabled = ismEnabled;
    return this;
  }

   /**
   * Get ismEnabled
   * @return ismEnabled
  **/
  @javax.annotation.Nullable
  public Boolean getIsmEnabled() {
    return ismEnabled;
  }

  public void setIsmEnabled(Boolean ismEnabled) {
    this.ismEnabled = ismEnabled;
  }


  public OpensearchISMHistorySettings ismHistoryEnabled(Boolean ismHistoryEnabled) {
    this.ismHistoryEnabled = ismHistoryEnabled;
    return this;
  }

   /**
   * Get ismHistoryEnabled
   * @return ismHistoryEnabled
  **/
  @javax.annotation.Nullable
  public Boolean getIsmHistoryEnabled() {
    return ismHistoryEnabled;
  }

  public void setIsmHistoryEnabled(Boolean ismHistoryEnabled) {
    this.ismHistoryEnabled = ismHistoryEnabled;
  }


  public OpensearchISMHistorySettings ismHistoryMaxAge(Integer ismHistoryMaxAge) {
    this.ismHistoryMaxAge = ismHistoryMaxAge;
    return this;
  }

   /**
   * Get ismHistoryMaxAge
   * minimum: 1
   * maximum: 2147483647
   * @return ismHistoryMaxAge
  **/
  @javax.annotation.Nullable
  public Integer getIsmHistoryMaxAge() {
    return ismHistoryMaxAge;
  }

  public void setIsmHistoryMaxAge(Integer ismHistoryMaxAge) {
    this.ismHistoryMaxAge = ismHistoryMaxAge;
  }


  public OpensearchISMHistorySettings ismHistoryMaxDocs(Integer ismHistoryMaxDocs) {
    this.ismHistoryMaxDocs = ismHistoryMaxDocs;
    return this;
  }

   /**
   * Get ismHistoryMaxDocs
   * minimum: 1
   * maximum: 9223372036854775807
   * @return ismHistoryMaxDocs
  **/
  @javax.annotation.Nullable
  public Integer getIsmHistoryMaxDocs() {
    return ismHistoryMaxDocs;
  }

  public void setIsmHistoryMaxDocs(Integer ismHistoryMaxDocs) {
    this.ismHistoryMaxDocs = ismHistoryMaxDocs;
  }


  public OpensearchISMHistorySettings ismHistoryRolloverCheckPeriod(Integer ismHistoryRolloverCheckPeriod) {
    this.ismHistoryRolloverCheckPeriod = ismHistoryRolloverCheckPeriod;
    return this;
  }

   /**
   * Get ismHistoryRolloverCheckPeriod
   * minimum: 1
   * maximum: 2147483647
   * @return ismHistoryRolloverCheckPeriod
  **/
  @javax.annotation.Nullable
  public Integer getIsmHistoryRolloverCheckPeriod() {
    return ismHistoryRolloverCheckPeriod;
  }

  public void setIsmHistoryRolloverCheckPeriod(Integer ismHistoryRolloverCheckPeriod) {
    this.ismHistoryRolloverCheckPeriod = ismHistoryRolloverCheckPeriod;
  }


  public OpensearchISMHistorySettings ismHistoryRolloverRetentionPeriod(Integer ismHistoryRolloverRetentionPeriod) {
    this.ismHistoryRolloverRetentionPeriod = ismHistoryRolloverRetentionPeriod;
    return this;
  }

   /**
   * Get ismHistoryRolloverRetentionPeriod
   * minimum: 1
   * maximum: 2147483647
   * @return ismHistoryRolloverRetentionPeriod
  **/
  @javax.annotation.Nullable
  public Integer getIsmHistoryRolloverRetentionPeriod() {
    return ismHistoryRolloverRetentionPeriod;
  }

  public void setIsmHistoryRolloverRetentionPeriod(Integer ismHistoryRolloverRetentionPeriod) {
    this.ismHistoryRolloverRetentionPeriod = ismHistoryRolloverRetentionPeriod;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OpensearchISMHistorySettings opensearchISMHistorySettings = (OpensearchISMHistorySettings) o;
    return Objects.equals(this.ismEnabled, opensearchISMHistorySettings.ismEnabled) &&
        Objects.equals(this.ismHistoryEnabled, opensearchISMHistorySettings.ismHistoryEnabled) &&
        Objects.equals(this.ismHistoryMaxAge, opensearchISMHistorySettings.ismHistoryMaxAge) &&
        Objects.equals(this.ismHistoryMaxDocs, opensearchISMHistorySettings.ismHistoryMaxDocs) &&
        Objects.equals(this.ismHistoryRolloverCheckPeriod, opensearchISMHistorySettings.ismHistoryRolloverCheckPeriod) &&
        Objects.equals(this.ismHistoryRolloverRetentionPeriod, opensearchISMHistorySettings.ismHistoryRolloverRetentionPeriod);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(ismEnabled, ismHistoryEnabled, ismHistoryMaxAge, ismHistoryMaxDocs, ismHistoryRolloverCheckPeriod, ismHistoryRolloverRetentionPeriod);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OpensearchISMHistorySettings {\n");
    sb.append("    ismEnabled: ").append(toIndentedString(ismEnabled)).append("\n");
    sb.append("    ismHistoryEnabled: ").append(toIndentedString(ismHistoryEnabled)).append("\n");
    sb.append("    ismHistoryMaxAge: ").append(toIndentedString(ismHistoryMaxAge)).append("\n");
    sb.append("    ismHistoryMaxDocs: ").append(toIndentedString(ismHistoryMaxDocs)).append("\n");
    sb.append("    ismHistoryRolloverCheckPeriod: ").append(toIndentedString(ismHistoryRolloverCheckPeriod)).append("\n");
    sb.append("    ismHistoryRolloverRetentionPeriod: ").append(toIndentedString(ismHistoryRolloverRetentionPeriod)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ism_enabled");
    openapiFields.add("ism_history_enabled");
    openapiFields.add("ism_history_max_age");
    openapiFields.add("ism_history_max_docs");
    openapiFields.add("ism_history_rollover_check_period");
    openapiFields.add("ism_history_rollover_retention_period");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("ism_enabled");
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to OpensearchISMHistorySettings
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!OpensearchISMHistorySettings.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OpensearchISMHistorySettings is not found in the empty JSON string", OpensearchISMHistorySettings.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!OpensearchISMHistorySettings.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OpensearchISMHistorySettings` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : OpensearchISMHistorySettings.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OpensearchISMHistorySettings.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OpensearchISMHistorySettings' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OpensearchISMHistorySettings> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OpensearchISMHistorySettings.class));

       return (TypeAdapter<T>) new TypeAdapter<OpensearchISMHistorySettings>() {
           @Override
           public void write(JsonWriter out, OpensearchISMHistorySettings value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OpensearchISMHistorySettings read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of OpensearchISMHistorySettings given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of OpensearchISMHistorySettings
  * @throws IOException if the JSON string is invalid with respect to OpensearchISMHistorySettings
  */
  public static OpensearchISMHistorySettings fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OpensearchISMHistorySettings.class);
  }

 /**
  * Convert an instance of OpensearchISMHistorySettings to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

