/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.exoscale.api.models.operations;

import com.exoscale.api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Optional;


public class CreateDbaasPgConnectionPoolRequestBody {

    @JsonProperty("name")
    private String name;

    @JsonProperty("database-name")
    private String databaseName;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mode")
    private Optional<? extends com.exoscale.api.models.components.EnumPgPoolMode> mode;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("size")
    private Optional<? extends Long> size;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("username")
    private Optional<? extends String> username;

    public CreateDbaasPgConnectionPoolRequestBody(
            @JsonProperty("name") String name,
            @JsonProperty("database-name") String databaseName,
            @JsonProperty("mode") Optional<? extends com.exoscale.api.models.components.EnumPgPoolMode> mode,
            @JsonProperty("size") Optional<? extends Long> size,
            @JsonProperty("username") Optional<? extends String> username) {
        Utils.checkNotNull(name, "name");
        Utils.checkNotNull(databaseName, "databaseName");
        Utils.checkNotNull(mode, "mode");
        Utils.checkNotNull(size, "size");
        Utils.checkNotNull(username, "username");
        this.name = name;
        this.databaseName = databaseName;
        this.mode = mode;
        this.size = size;
        this.username = username;
    }

    public String name() {
        return name;
    }

    public String databaseName() {
        return databaseName;
    }

    public Optional<? extends com.exoscale.api.models.components.EnumPgPoolMode> mode() {
        return mode;
    }

    public Optional<? extends Long> size() {
        return size;
    }

    public Optional<? extends String> username() {
        return username;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public CreateDbaasPgConnectionPoolRequestBody withName(String name) {
        Utils.checkNotNull(name, "name");
        this.name = name;
        return this;
    }

    public CreateDbaasPgConnectionPoolRequestBody withDatabaseName(String databaseName) {
        Utils.checkNotNull(databaseName, "databaseName");
        this.databaseName = databaseName;
        return this;
    }

    public CreateDbaasPgConnectionPoolRequestBody withMode(com.exoscale.api.models.components.EnumPgPoolMode mode) {
        Utils.checkNotNull(mode, "mode");
        this.mode = Optional.ofNullable(mode);
        return this;
    }

    public CreateDbaasPgConnectionPoolRequestBody withMode(Optional<? extends com.exoscale.api.models.components.EnumPgPoolMode> mode) {
        Utils.checkNotNull(mode, "mode");
        this.mode = mode;
        return this;
    }

    public CreateDbaasPgConnectionPoolRequestBody withSize(long size) {
        Utils.checkNotNull(size, "size");
        this.size = Optional.ofNullable(size);
        return this;
    }

    public CreateDbaasPgConnectionPoolRequestBody withSize(Optional<? extends Long> size) {
        Utils.checkNotNull(size, "size");
        this.size = size;
        return this;
    }

    public CreateDbaasPgConnectionPoolRequestBody withUsername(String username) {
        Utils.checkNotNull(username, "username");
        this.username = Optional.ofNullable(username);
        return this;
    }

    public CreateDbaasPgConnectionPoolRequestBody withUsername(Optional<? extends String> username) {
        Utils.checkNotNull(username, "username");
        this.username = username;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CreateDbaasPgConnectionPoolRequestBody other = (CreateDbaasPgConnectionPoolRequestBody) o;
        return 
            java.util.Objects.deepEquals(this.name, other.name) &&
            java.util.Objects.deepEquals(this.databaseName, other.databaseName) &&
            java.util.Objects.deepEquals(this.mode, other.mode) &&
            java.util.Objects.deepEquals(this.size, other.size) &&
            java.util.Objects.deepEquals(this.username, other.username);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            name,
            databaseName,
            mode,
            size,
            username);
    }
    
    @Override
    public String toString() {
        return Utils.toString(CreateDbaasPgConnectionPoolRequestBody.class,
                "name", name,
                "databaseName", databaseName,
                "mode", mode,
                "size", size,
                "username", username);
    }
    
    public final static class Builder {
 
        private String name;
 
        private String databaseName;
 
        private Optional<? extends com.exoscale.api.models.components.EnumPgPoolMode> mode = Optional.empty();
 
        private Optional<? extends Long> size = Optional.empty();
 
        private Optional<? extends String> username = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder name(String name) {
            Utils.checkNotNull(name, "name");
            this.name = name;
            return this;
        }

        public Builder databaseName(String databaseName) {
            Utils.checkNotNull(databaseName, "databaseName");
            this.databaseName = databaseName;
            return this;
        }

        public Builder mode(com.exoscale.api.models.components.EnumPgPoolMode mode) {
            Utils.checkNotNull(mode, "mode");
            this.mode = Optional.ofNullable(mode);
            return this;
        }

        public Builder mode(Optional<? extends com.exoscale.api.models.components.EnumPgPoolMode> mode) {
            Utils.checkNotNull(mode, "mode");
            this.mode = mode;
            return this;
        }

        public Builder size(long size) {
            Utils.checkNotNull(size, "size");
            this.size = Optional.ofNullable(size);
            return this;
        }

        public Builder size(Optional<? extends Long> size) {
            Utils.checkNotNull(size, "size");
            this.size = size;
            return this;
        }

        public Builder username(String username) {
            Utils.checkNotNull(username, "username");
            this.username = Optional.ofNullable(username);
            return this;
        }

        public Builder username(Optional<? extends String> username) {
            Utils.checkNotNull(username, "username");
            this.username = username;
            return this;
        }
        
        public CreateDbaasPgConnectionPoolRequestBody build() {
            return new CreateDbaasPgConnectionPoolRequestBody(
                name,
                databaseName,
                mode,
                size,
                username);
        }
    }
}

