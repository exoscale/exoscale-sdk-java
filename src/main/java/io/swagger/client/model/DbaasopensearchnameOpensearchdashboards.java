/*
 * Exoscale Public API
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * OpenAPI spec version: 2.0.0
 * Contact: api@exoscale.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * OpenSearch Dashboards settings
 */
@Schema(description = "OpenSearch Dashboards settings")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-03-08T17:23:40.261901+01:00[Europe/Vienna]")

public class DbaasopensearchnameOpensearchdashboards {
  @JsonProperty("opensearch-request-timeout")
  private Long opensearchRequestTimeout = null;

  @JsonProperty("enabled")
  private Boolean enabled = null;

  @JsonProperty("max-old-space-size")
  private Long maxOldSpaceSize = null;

  public DbaasopensearchnameOpensearchdashboards opensearchRequestTimeout(Long opensearchRequestTimeout) {
    this.opensearchRequestTimeout = opensearchRequestTimeout;
    return this;
  }

   /**
   * Timeout in milliseconds for requests made by OpenSearch Dashboards towards OpenSearch (default: 30000)
   * minimum: 5000
   * maximum: 120000
   * @return opensearchRequestTimeout
  **/
  @Schema(description = "Timeout in milliseconds for requests made by OpenSearch Dashboards towards OpenSearch (default: 30000)")
  public Long getOpensearchRequestTimeout() {
    return opensearchRequestTimeout;
  }

  public void setOpensearchRequestTimeout(Long opensearchRequestTimeout) {
    this.opensearchRequestTimeout = opensearchRequestTimeout;
  }

  public DbaasopensearchnameOpensearchdashboards enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * Enable or disable OpenSearch Dashboards (default: true)
   * @return enabled
  **/
  @Schema(description = "Enable or disable OpenSearch Dashboards (default: true)")
  public Boolean isEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }

  public DbaasopensearchnameOpensearchdashboards maxOldSpaceSize(Long maxOldSpaceSize) {
    this.maxOldSpaceSize = maxOldSpaceSize;
    return this;
  }

   /**
   * Limits the maximum amount of memory (in MiB) the OpenSearch Dashboards process can use. This sets the max_old_space_size option of the nodejs running the OpenSearch Dashboards. Note: the memory reserved by OpenSearch Dashboards is not available for OpenSearch. (default: 128)
   * minimum: 64
   * maximum: 1024
   * @return maxOldSpaceSize
  **/
  @Schema(description = "Limits the maximum amount of memory (in MiB) the OpenSearch Dashboards process can use. This sets the max_old_space_size option of the nodejs running the OpenSearch Dashboards. Note: the memory reserved by OpenSearch Dashboards is not available for OpenSearch. (default: 128)")
  public Long getMaxOldSpaceSize() {
    return maxOldSpaceSize;
  }

  public void setMaxOldSpaceSize(Long maxOldSpaceSize) {
    this.maxOldSpaceSize = maxOldSpaceSize;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DbaasopensearchnameOpensearchdashboards dbaasopensearchnameOpensearchdashboards = (DbaasopensearchnameOpensearchdashboards) o;
    return Objects.equals(this.opensearchRequestTimeout, dbaasopensearchnameOpensearchdashboards.opensearchRequestTimeout) &&
        Objects.equals(this.enabled, dbaasopensearchnameOpensearchdashboards.enabled) &&
        Objects.equals(this.maxOldSpaceSize, dbaasopensearchnameOpensearchdashboards.maxOldSpaceSize);
  }

  @Override
  public int hashCode() {
    return Objects.hash(opensearchRequestTimeout, enabled, maxOldSpaceSize);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DbaasopensearchnameOpensearchdashboards {\n");
    
    sb.append("    opensearchRequestTimeout: ").append(toIndentedString(opensearchRequestTimeout)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    maxOldSpaceSize: ").append(toIndentedString(maxOldSpaceSize)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
