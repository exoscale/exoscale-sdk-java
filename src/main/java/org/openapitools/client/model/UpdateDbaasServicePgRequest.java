/*
 * Exoscale Public API
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@exoscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.EnumPgSynchronousReplication;
import org.openapitools.client.model.EnumPgVariant;
import org.openapitools.client.model.JsonSchemaPg;
import org.openapitools.client.model.JsonSchemaPgbouncer;
import org.openapitools.client.model.JsonSchemaPglookout;
import org.openapitools.client.model.JsonSchemaTimescaledb;
import org.openapitools.client.model.UpdateDbaasServiceMysqlRequestBackupSchedule;
import org.openapitools.client.model.UpdateDbaasServiceMysqlRequestMaintenance;
import org.openapitools.client.model.UpdateDbaasServiceMysqlRequestMigration;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UpdateDbaasServicePgRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-27T17:14:44.205710495Z[Etc/UTC]", comments = "Generator version: 7.5.0-SNAPSHOT")
public class UpdateDbaasServicePgRequest {
  public static final String SERIALIZED_NAME_PGBOUNCER_SETTINGS = "pgbouncer-settings";
  @SerializedName(SERIALIZED_NAME_PGBOUNCER_SETTINGS)
  private JsonSchemaPgbouncer pgbouncerSettings;

  public static final String SERIALIZED_NAME_BACKUP_SCHEDULE = "backup-schedule";
  @SerializedName(SERIALIZED_NAME_BACKUP_SCHEDULE)
  private UpdateDbaasServiceMysqlRequestBackupSchedule backupSchedule;

  public static final String SERIALIZED_NAME_VARIANT = "variant";
  @SerializedName(SERIALIZED_NAME_VARIANT)
  private EnumPgVariant variant;

  public static final String SERIALIZED_NAME_TIMESCALEDB_SETTINGS = "timescaledb-settings";
  @SerializedName(SERIALIZED_NAME_TIMESCALEDB_SETTINGS)
  private JsonSchemaTimescaledb timescaledbSettings;

  public static final String SERIALIZED_NAME_IP_FILTER = "ip-filter";
  @SerializedName(SERIALIZED_NAME_IP_FILTER)
  private List<String> ipFilter = new ArrayList<>();

  public static final String SERIALIZED_NAME_TERMINATION_PROTECTION = "termination-protection";
  @SerializedName(SERIALIZED_NAME_TERMINATION_PROTECTION)
  private Boolean terminationProtection;

  public static final String SERIALIZED_NAME_SYNCHRONOUS_REPLICATION = "synchronous-replication";
  @SerializedName(SERIALIZED_NAME_SYNCHRONOUS_REPLICATION)
  private EnumPgSynchronousReplication synchronousReplication;

  public static final String SERIALIZED_NAME_PGLOOKOUT_SETTINGS = "pglookout-settings";
  @SerializedName(SERIALIZED_NAME_PGLOOKOUT_SETTINGS)
  private JsonSchemaPglookout pglookoutSettings = {"max_failover_replication_time_lag":60};

  public static final String SERIALIZED_NAME_MAINTENANCE = "maintenance";
  @SerializedName(SERIALIZED_NAME_MAINTENANCE)
  private UpdateDbaasServiceMysqlRequestMaintenance maintenance;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private String version;

  public static final String SERIALIZED_NAME_PLAN = "plan";
  @SerializedName(SERIALIZED_NAME_PLAN)
  private String plan;

  public static final String SERIALIZED_NAME_WORK_MEM = "work-mem";
  @SerializedName(SERIALIZED_NAME_WORK_MEM)
  private Long workMem;

  public static final String SERIALIZED_NAME_SHARED_BUFFERS_PERCENTAGE = "shared-buffers-percentage";
  @SerializedName(SERIALIZED_NAME_SHARED_BUFFERS_PERCENTAGE)
  private Long sharedBuffersPercentage;

  public static final String SERIALIZED_NAME_PG_SETTINGS = "pg-settings";
  @SerializedName(SERIALIZED_NAME_PG_SETTINGS)
  private JsonSchemaPg pgSettings;

  public static final String SERIALIZED_NAME_MIGRATION = "migration";
  @SerializedName(SERIALIZED_NAME_MIGRATION)
  private UpdateDbaasServiceMysqlRequestMigration migration;

  public UpdateDbaasServicePgRequest() {
  }

  public UpdateDbaasServicePgRequest pgbouncerSettings(JsonSchemaPgbouncer pgbouncerSettings) {
    this.pgbouncerSettings = pgbouncerSettings;
    return this;
  }

   /**
   * Get pgbouncerSettings
   * @return pgbouncerSettings
  **/
  @javax.annotation.Nullable
  public JsonSchemaPgbouncer getPgbouncerSettings() {
    return pgbouncerSettings;
  }

  public void setPgbouncerSettings(JsonSchemaPgbouncer pgbouncerSettings) {
    this.pgbouncerSettings = pgbouncerSettings;
  }


  public UpdateDbaasServicePgRequest backupSchedule(UpdateDbaasServiceMysqlRequestBackupSchedule backupSchedule) {
    this.backupSchedule = backupSchedule;
    return this;
  }

   /**
   * Get backupSchedule
   * @return backupSchedule
  **/
  @javax.annotation.Nullable
  public UpdateDbaasServiceMysqlRequestBackupSchedule getBackupSchedule() {
    return backupSchedule;
  }

  public void setBackupSchedule(UpdateDbaasServiceMysqlRequestBackupSchedule backupSchedule) {
    this.backupSchedule = backupSchedule;
  }


  public UpdateDbaasServicePgRequest variant(EnumPgVariant variant) {
    this.variant = variant;
    return this;
  }

   /**
   * Get variant
   * @return variant
  **/
  @javax.annotation.Nullable
  public EnumPgVariant getVariant() {
    return variant;
  }

  public void setVariant(EnumPgVariant variant) {
    this.variant = variant;
  }


  public UpdateDbaasServicePgRequest timescaledbSettings(JsonSchemaTimescaledb timescaledbSettings) {
    this.timescaledbSettings = timescaledbSettings;
    return this;
  }

   /**
   * Get timescaledbSettings
   * @return timescaledbSettings
  **/
  @javax.annotation.Nullable
  public JsonSchemaTimescaledb getTimescaledbSettings() {
    return timescaledbSettings;
  }

  public void setTimescaledbSettings(JsonSchemaTimescaledb timescaledbSettings) {
    this.timescaledbSettings = timescaledbSettings;
  }


  public UpdateDbaasServicePgRequest ipFilter(List<String> ipFilter) {
    this.ipFilter = ipFilter;
    return this;
  }

  public UpdateDbaasServicePgRequest addIpFilterItem(String ipFilterItem) {
    if (this.ipFilter == null) {
      this.ipFilter = new ArrayList<>();
    }
    this.ipFilter.add(ipFilterItem);
    return this;
  }

   /**
   * Allow incoming connections from CIDR address block, e.g. &#39;10.20.0.0/16&#39;
   * @return ipFilter
  **/
  @javax.annotation.Nullable
  public List<String> getIpFilter() {
    return ipFilter;
  }

  public void setIpFilter(List<String> ipFilter) {
    this.ipFilter = ipFilter;
  }


  public UpdateDbaasServicePgRequest terminationProtection(Boolean terminationProtection) {
    this.terminationProtection = terminationProtection;
    return this;
  }

   /**
   * Service is protected against termination and powering off
   * @return terminationProtection
  **/
  @javax.annotation.Nullable
  public Boolean getTerminationProtection() {
    return terminationProtection;
  }

  public void setTerminationProtection(Boolean terminationProtection) {
    this.terminationProtection = terminationProtection;
  }


  public UpdateDbaasServicePgRequest synchronousReplication(EnumPgSynchronousReplication synchronousReplication) {
    this.synchronousReplication = synchronousReplication;
    return this;
  }

   /**
   * Get synchronousReplication
   * @return synchronousReplication
  **/
  @javax.annotation.Nullable
  public EnumPgSynchronousReplication getSynchronousReplication() {
    return synchronousReplication;
  }

  public void setSynchronousReplication(EnumPgSynchronousReplication synchronousReplication) {
    this.synchronousReplication = synchronousReplication;
  }


  public UpdateDbaasServicePgRequest pglookoutSettings(JsonSchemaPglookout pglookoutSettings) {
    this.pglookoutSettings = pglookoutSettings;
    return this;
  }

   /**
   * Get pglookoutSettings
   * @return pglookoutSettings
  **/
  @javax.annotation.Nullable
  public JsonSchemaPglookout getPglookoutSettings() {
    return pglookoutSettings;
  }

  public void setPglookoutSettings(JsonSchemaPglookout pglookoutSettings) {
    this.pglookoutSettings = pglookoutSettings;
  }


  public UpdateDbaasServicePgRequest maintenance(UpdateDbaasServiceMysqlRequestMaintenance maintenance) {
    this.maintenance = maintenance;
    return this;
  }

   /**
   * Get maintenance
   * @return maintenance
  **/
  @javax.annotation.Nullable
  public UpdateDbaasServiceMysqlRequestMaintenance getMaintenance() {
    return maintenance;
  }

  public void setMaintenance(UpdateDbaasServiceMysqlRequestMaintenance maintenance) {
    this.maintenance = maintenance;
  }


  public UpdateDbaasServicePgRequest version(String version) {
    this.version = version;
    return this;
  }

   /**
   * Version
   * @return version
  **/
  @javax.annotation.Nullable
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }


  public UpdateDbaasServicePgRequest plan(String plan) {
    this.plan = plan;
    return this;
  }

   /**
   * Subscription plan
   * @return plan
  **/
  @javax.annotation.Nullable
  public String getPlan() {
    return plan;
  }

  public void setPlan(String plan) {
    this.plan = plan;
  }


  public UpdateDbaasServicePgRequest workMem(Long workMem) {
    this.workMem = workMem;
    return this;
  }

   /**
   * Sets the maximum amount of memory to be used by a query operation (such as a sort or hash table) before writing to temporary disk files, in MB. Default is 1MB + 0.075% of total RAM (up to 32MB).
   * minimum: 1
   * maximum: 1024
   * @return workMem
  **/
  @javax.annotation.Nullable
  public Long getWorkMem() {
    return workMem;
  }

  public void setWorkMem(Long workMem) {
    this.workMem = workMem;
  }


  public UpdateDbaasServicePgRequest sharedBuffersPercentage(Long sharedBuffersPercentage) {
    this.sharedBuffersPercentage = sharedBuffersPercentage;
    return this;
  }

   /**
   * Percentage of total RAM that the database server uses for shared memory buffers. Valid range is 20-60 (float), which corresponds to 20% - 60%. This setting adjusts the shared_buffers configuration value.
   * minimum: 20
   * maximum: 60
   * @return sharedBuffersPercentage
  **/
  @javax.annotation.Nullable
  public Long getSharedBuffersPercentage() {
    return sharedBuffersPercentage;
  }

  public void setSharedBuffersPercentage(Long sharedBuffersPercentage) {
    this.sharedBuffersPercentage = sharedBuffersPercentage;
  }


  public UpdateDbaasServicePgRequest pgSettings(JsonSchemaPg pgSettings) {
    this.pgSettings = pgSettings;
    return this;
  }

   /**
   * Get pgSettings
   * @return pgSettings
  **/
  @javax.annotation.Nullable
  public JsonSchemaPg getPgSettings() {
    return pgSettings;
  }

  public void setPgSettings(JsonSchemaPg pgSettings) {
    this.pgSettings = pgSettings;
  }


  public UpdateDbaasServicePgRequest migration(UpdateDbaasServiceMysqlRequestMigration migration) {
    this.migration = migration;
    return this;
  }

   /**
   * Get migration
   * @return migration
  **/
  @javax.annotation.Nullable
  public UpdateDbaasServiceMysqlRequestMigration getMigration() {
    return migration;
  }

  public void setMigration(UpdateDbaasServiceMysqlRequestMigration migration) {
    this.migration = migration;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateDbaasServicePgRequest updateDbaasServicePgRequest = (UpdateDbaasServicePgRequest) o;
    return Objects.equals(this.pgbouncerSettings, updateDbaasServicePgRequest.pgbouncerSettings) &&
        Objects.equals(this.backupSchedule, updateDbaasServicePgRequest.backupSchedule) &&
        Objects.equals(this.variant, updateDbaasServicePgRequest.variant) &&
        Objects.equals(this.timescaledbSettings, updateDbaasServicePgRequest.timescaledbSettings) &&
        Objects.equals(this.ipFilter, updateDbaasServicePgRequest.ipFilter) &&
        Objects.equals(this.terminationProtection, updateDbaasServicePgRequest.terminationProtection) &&
        Objects.equals(this.synchronousReplication, updateDbaasServicePgRequest.synchronousReplication) &&
        Objects.equals(this.pglookoutSettings, updateDbaasServicePgRequest.pglookoutSettings) &&
        Objects.equals(this.maintenance, updateDbaasServicePgRequest.maintenance) &&
        Objects.equals(this.version, updateDbaasServicePgRequest.version) &&
        Objects.equals(this.plan, updateDbaasServicePgRequest.plan) &&
        Objects.equals(this.workMem, updateDbaasServicePgRequest.workMem) &&
        Objects.equals(this.sharedBuffersPercentage, updateDbaasServicePgRequest.sharedBuffersPercentage) &&
        Objects.equals(this.pgSettings, updateDbaasServicePgRequest.pgSettings) &&
        Objects.equals(this.migration, updateDbaasServicePgRequest.migration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pgbouncerSettings, backupSchedule, variant, timescaledbSettings, ipFilter, terminationProtection, synchronousReplication, pglookoutSettings, maintenance, version, plan, workMem, sharedBuffersPercentage, pgSettings, migration);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateDbaasServicePgRequest {\n");
    sb.append("    pgbouncerSettings: ").append(toIndentedString(pgbouncerSettings)).append("\n");
    sb.append("    backupSchedule: ").append(toIndentedString(backupSchedule)).append("\n");
    sb.append("    variant: ").append(toIndentedString(variant)).append("\n");
    sb.append("    timescaledbSettings: ").append(toIndentedString(timescaledbSettings)).append("\n");
    sb.append("    ipFilter: ").append(toIndentedString(ipFilter)).append("\n");
    sb.append("    terminationProtection: ").append(toIndentedString(terminationProtection)).append("\n");
    sb.append("    synchronousReplication: ").append(toIndentedString(synchronousReplication)).append("\n");
    sb.append("    pglookoutSettings: ").append(toIndentedString(pglookoutSettings)).append("\n");
    sb.append("    maintenance: ").append(toIndentedString(maintenance)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    plan: ").append(toIndentedString(plan)).append("\n");
    sb.append("    workMem: ").append(toIndentedString(workMem)).append("\n");
    sb.append("    sharedBuffersPercentage: ").append(toIndentedString(sharedBuffersPercentage)).append("\n");
    sb.append("    pgSettings: ").append(toIndentedString(pgSettings)).append("\n");
    sb.append("    migration: ").append(toIndentedString(migration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("pgbouncer-settings");
    openapiFields.add("backup-schedule");
    openapiFields.add("variant");
    openapiFields.add("timescaledb-settings");
    openapiFields.add("ip-filter");
    openapiFields.add("termination-protection");
    openapiFields.add("synchronous-replication");
    openapiFields.add("pglookout-settings");
    openapiFields.add("maintenance");
    openapiFields.add("version");
    openapiFields.add("plan");
    openapiFields.add("work-mem");
    openapiFields.add("shared-buffers-percentage");
    openapiFields.add("pg-settings");
    openapiFields.add("migration");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to UpdateDbaasServicePgRequest
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateDbaasServicePgRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateDbaasServicePgRequest is not found in the empty JSON string", UpdateDbaasServicePgRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdateDbaasServicePgRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateDbaasServicePgRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `pgbouncer-settings`
      if (jsonObj.get("pgbouncer-settings") != null && !jsonObj.get("pgbouncer-settings").isJsonNull()) {
        JsonSchemaPgbouncer.validateJsonElement(jsonObj.get("pgbouncer-settings"));
      }
      // validate the optional field `backup-schedule`
      if (jsonObj.get("backup-schedule") != null && !jsonObj.get("backup-schedule").isJsonNull()) {
        UpdateDbaasServiceMysqlRequestBackupSchedule.validateJsonElement(jsonObj.get("backup-schedule"));
      }
      // validate the optional field `variant`
      if (jsonObj.get("variant") != null && !jsonObj.get("variant").isJsonNull()) {
        EnumPgVariant.validateJsonElement(jsonObj.get("variant"));
      }
      // validate the optional field `timescaledb-settings`
      if (jsonObj.get("timescaledb-settings") != null && !jsonObj.get("timescaledb-settings").isJsonNull()) {
        JsonSchemaTimescaledb.validateJsonElement(jsonObj.get("timescaledb-settings"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("ip-filter") != null && !jsonObj.get("ip-filter").isJsonNull() && !jsonObj.get("ip-filter").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `ip-filter` to be an array in the JSON string but got `%s`", jsonObj.get("ip-filter").toString()));
      }
      // validate the optional field `synchronous-replication`
      if (jsonObj.get("synchronous-replication") != null && !jsonObj.get("synchronous-replication").isJsonNull()) {
        EnumPgSynchronousReplication.validateJsonElement(jsonObj.get("synchronous-replication"));
      }
      // validate the optional field `pglookout-settings`
      if (jsonObj.get("pglookout-settings") != null && !jsonObj.get("pglookout-settings").isJsonNull()) {
        JsonSchemaPglookout.validateJsonElement(jsonObj.get("pglookout-settings"));
      }
      // validate the optional field `maintenance`
      if (jsonObj.get("maintenance") != null && !jsonObj.get("maintenance").isJsonNull()) {
        UpdateDbaasServiceMysqlRequestMaintenance.validateJsonElement(jsonObj.get("maintenance"));
      }
      if ((jsonObj.get("version") != null && !jsonObj.get("version").isJsonNull()) && !jsonObj.get("version").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `version` to be a primitive type in the JSON string but got `%s`", jsonObj.get("version").toString()));
      }
      if ((jsonObj.get("plan") != null && !jsonObj.get("plan").isJsonNull()) && !jsonObj.get("plan").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `plan` to be a primitive type in the JSON string but got `%s`", jsonObj.get("plan").toString()));
      }
      // validate the optional field `pg-settings`
      if (jsonObj.get("pg-settings") != null && !jsonObj.get("pg-settings").isJsonNull()) {
        JsonSchemaPg.validateJsonElement(jsonObj.get("pg-settings"));
      }
      // validate the optional field `migration`
      if (jsonObj.get("migration") != null && !jsonObj.get("migration").isJsonNull()) {
        UpdateDbaasServiceMysqlRequestMigration.validateJsonElement(jsonObj.get("migration"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateDbaasServicePgRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateDbaasServicePgRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateDbaasServicePgRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateDbaasServicePgRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateDbaasServicePgRequest>() {
           @Override
           public void write(JsonWriter out, UpdateDbaasServicePgRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateDbaasServicePgRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of UpdateDbaasServicePgRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of UpdateDbaasServicePgRequest
  * @throws IOException if the JSON string is invalid with respect to UpdateDbaasServicePgRequest
  */
  public static UpdateDbaasServicePgRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateDbaasServicePgRequest.class);
  }

 /**
  * Convert an instance of UpdateDbaasServicePgRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

