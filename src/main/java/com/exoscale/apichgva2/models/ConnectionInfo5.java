/*
 * ExoscalePublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.exoscale.apichgva2.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for ConnectionInfo5 type.
 */
public class ConnectionInfo5 {
    private List<String> uri;
    private String username;
    private String password;
    private String dashboardUri;

    /**
     * Default constructor.
     */
    public ConnectionInfo5() {
    }

    /**
     * Initialization constructor.
     * @param  uri  List of String value for uri.
     * @param  username  String value for username.
     * @param  password  String value for password.
     * @param  dashboardUri  String value for dashboardUri.
     */
    public ConnectionInfo5(
            List<String> uri,
            String username,
            String password,
            String dashboardUri) {
        this.uri = uri;
        this.username = username;
        this.password = password;
        this.dashboardUri = dashboardUri;
    }

    /**
     * Getter for Uri.
     * @return Returns the List of String
     */
    @JsonGetter("uri")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<String> getUri() {
        return uri;
    }

    /**
     * Setter for Uri.
     * @param uri Value for List of String
     */
    @JsonSetter("uri")
    public void setUri(List<String> uri) {
        this.uri = uri;
    }

    /**
     * Getter for Username.
     * @return Returns the String
     */
    @JsonGetter("username")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getUsername() {
        return username;
    }

    /**
     * Setter for Username.
     * @param username Value for String
     */
    @JsonSetter("username")
    public void setUsername(String username) {
        this.username = username;
    }

    /**
     * Getter for Password.
     * @return Returns the String
     */
    @JsonGetter("password")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPassword() {
        return password;
    }

    /**
     * Setter for Password.
     * @param password Value for String
     */
    @JsonSetter("password")
    public void setPassword(String password) {
        this.password = password;
    }

    /**
     * Getter for DashboardUri.
     * @return Returns the String
     */
    @JsonGetter("dashboard-uri")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDashboardUri() {
        return dashboardUri;
    }

    /**
     * Setter for DashboardUri.
     * @param dashboardUri Value for String
     */
    @JsonSetter("dashboard-uri")
    public void setDashboardUri(String dashboardUri) {
        this.dashboardUri = dashboardUri;
    }

    /**
     * Converts this ConnectionInfo5 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ConnectionInfo5 [" + "uri=" + uri + ", username=" + username + ", password="
                + password + ", dashboardUri=" + dashboardUri + "]";
    }

    /**
     * Builds a new {@link ConnectionInfo5.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ConnectionInfo5.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .uri(getUri())
                .username(getUsername())
                .password(getPassword())
                .dashboardUri(getDashboardUri());
        return builder;
    }

    /**
     * Class to build instances of {@link ConnectionInfo5}.
     */
    public static class Builder {
        private List<String> uri;
        private String username;
        private String password;
        private String dashboardUri;



        /**
         * Setter for uri.
         * @param  uri  List of String value for uri.
         * @return Builder
         */
        public Builder uri(List<String> uri) {
            this.uri = uri;
            return this;
        }

        /**
         * Setter for username.
         * @param  username  String value for username.
         * @return Builder
         */
        public Builder username(String username) {
            this.username = username;
            return this;
        }

        /**
         * Setter for password.
         * @param  password  String value for password.
         * @return Builder
         */
        public Builder password(String password) {
            this.password = password;
            return this;
        }

        /**
         * Setter for dashboardUri.
         * @param  dashboardUri  String value for dashboardUri.
         * @return Builder
         */
        public Builder dashboardUri(String dashboardUri) {
            this.dashboardUri = dashboardUri;
            return this;
        }

        /**
         * Builds a new {@link ConnectionInfo5} object using the set fields.
         * @return {@link ConnectionInfo5}
         */
        public ConnectionInfo5 build() {
            return new ConnectionInfo5(uri, username, password, dashboardUri);
        }
    }
}
