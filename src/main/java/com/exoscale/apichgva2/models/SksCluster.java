/*
 * ExoscalePublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.exoscale.apichgva2.models;

import com.exoscale.apichgva2.DateTimeHelper;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.LocalDateTime;
import java.util.List;
import java.util.Map;
import java.util.UUID;

/**
 * This is a model class for SksCluster type.
 */
public class SksCluster {
    private String description;
    private Map<String, String> labels;
    private CniEnum cni;
    private Boolean autoUpgrade;
    private String name;
    private State6Enum state;
    private List<SksNodepool> nodepools;
    private Level1Enum level;
    private List<Addon1Enum> addons;
    private UUID id;
    private String version;
    private LocalDateTime createdAt;
    private String endpoint;

    /**
     * Default constructor.
     */
    public SksCluster() {
    }

    /**
     * Initialization constructor.
     * @param  description  String value for description.
     * @param  labels  Map of String, value for labels.
     * @param  cni  CniEnum value for cni.
     * @param  autoUpgrade  Boolean value for autoUpgrade.
     * @param  name  String value for name.
     * @param  state  State6Enum value for state.
     * @param  nodepools  List of SksNodepool value for nodepools.
     * @param  level  Level1Enum value for level.
     * @param  addons  List of Addon1Enum value for addons.
     * @param  id  UUID value for id.
     * @param  version  String value for version.
     * @param  createdAt  LocalDateTime value for createdAt.
     * @param  endpoint  String value for endpoint.
     */
    public SksCluster(
            String description,
            Map<String, String> labels,
            CniEnum cni,
            Boolean autoUpgrade,
            String name,
            State6Enum state,
            List<SksNodepool> nodepools,
            Level1Enum level,
            List<Addon1Enum> addons,
            UUID id,
            String version,
            LocalDateTime createdAt,
            String endpoint) {
        this.description = description;
        this.labels = labels;
        this.cni = cni;
        this.autoUpgrade = autoUpgrade;
        this.name = name;
        this.state = state;
        this.nodepools = nodepools;
        this.level = level;
        this.addons = addons;
        this.id = id;
        this.version = version;
        this.createdAt = createdAt;
        this.endpoint = endpoint;
    }

    /**
     * Getter for Description.
     * Cluster description
     * @return Returns the String
     */
    @JsonGetter("description")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDescription() {
        return description;
    }

    /**
     * Setter for Description.
     * Cluster description
     * @param description Value for String
     */
    @JsonSetter("description")
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Getter for Labels.
     * @return Returns the Map of String, String
     */
    @JsonGetter("labels")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Map<String, String> getLabels() {
        return labels;
    }

    /**
     * Setter for Labels.
     * @param labels Value for Map of String, String
     */
    @JsonSetter("labels")
    public void setLabels(Map<String, String> labels) {
        this.labels = labels;
    }

    /**
     * Getter for Cni.
     * Cluster CNI
     * @return Returns the CniEnum
     */
    @JsonGetter("cni")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public CniEnum getCni() {
        return cni;
    }

    /**
     * Setter for Cni.
     * Cluster CNI
     * @param cni Value for CniEnum
     */
    @JsonSetter("cni")
    public void setCni(CniEnum cni) {
        this.cni = cni;
    }

    /**
     * Getter for AutoUpgrade.
     * Enable auto upgrade of the control plane to the latest patch version available
     * @return Returns the Boolean
     */
    @JsonGetter("auto-upgrade")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getAutoUpgrade() {
        return autoUpgrade;
    }

    /**
     * Setter for AutoUpgrade.
     * Enable auto upgrade of the control plane to the latest patch version available
     * @param autoUpgrade Value for Boolean
     */
    @JsonSetter("auto-upgrade")
    public void setAutoUpgrade(Boolean autoUpgrade) {
        this.autoUpgrade = autoUpgrade;
    }

    /**
     * Getter for Name.
     * Cluster name
     * @return Returns the String
     */
    @JsonGetter("name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * Cluster name
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for State.
     * Cluster state
     * @return Returns the State6Enum
     */
    @JsonGetter("state")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public State6Enum getState() {
        return state;
    }

    /**
     * Setter for State.
     * Cluster state
     * @param state Value for State6Enum
     */
    @JsonSetter("state")
    public void setState(State6Enum state) {
        this.state = state;
    }

    /**
     * Getter for Nodepools.
     * Cluster Nodepools
     * @return Returns the List of SksNodepool
     */
    @JsonGetter("nodepools")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<SksNodepool> getNodepools() {
        return nodepools;
    }

    /**
     * Setter for Nodepools.
     * Cluster Nodepools
     * @param nodepools Value for List of SksNodepool
     */
    @JsonSetter("nodepools")
    public void setNodepools(List<SksNodepool> nodepools) {
        this.nodepools = nodepools;
    }

    /**
     * Getter for Level.
     * Cluster level
     * @return Returns the Level1Enum
     */
    @JsonGetter("level")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Level1Enum getLevel() {
        return level;
    }

    /**
     * Setter for Level.
     * Cluster level
     * @param level Value for Level1Enum
     */
    @JsonSetter("level")
    public void setLevel(Level1Enum level) {
        this.level = level;
    }

    /**
     * Getter for Addons.
     * Cluster addons
     * @return Returns the List of Addon1Enum
     */
    @JsonGetter("addons")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<Addon1Enum> getAddons() {
        return addons;
    }

    /**
     * Setter for Addons.
     * Cluster addons
     * @param addons Value for List of Addon1Enum
     */
    @JsonSetter("addons")
    public void setAddons(List<Addon1Enum> addons) {
        this.addons = addons;
    }

    /**
     * Getter for Id.
     * Cluster ID
     * @return Returns the UUID
     */
    @JsonGetter("id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public UUID getId() {
        return id;
    }

    /**
     * Setter for Id.
     * Cluster ID
     * @param id Value for UUID
     */
    @JsonSetter("id")
    public void setId(UUID id) {
        this.id = id;
    }

    /**
     * Getter for Version.
     * Control plane Kubernetes version
     * @return Returns the String
     */
    @JsonGetter("version")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getVersion() {
        return version;
    }

    /**
     * Setter for Version.
     * Control plane Kubernetes version
     * @param version Value for String
     */
    @JsonSetter("version")
    public void setVersion(String version) {
        this.version = version;
    }

    /**
     * Getter for CreatedAt.
     * Cluster creation date
     * @return Returns the LocalDateTime
     */
    @JsonGetter("created-at")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getCreatedAt() {
        return createdAt;
    }

    /**
     * Setter for CreatedAt.
     * Cluster creation date
     * @param createdAt Value for LocalDateTime
     */
    @JsonSetter("created-at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Getter for Endpoint.
     * Cluster endpoint
     * @return Returns the String
     */
    @JsonGetter("endpoint")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getEndpoint() {
        return endpoint;
    }

    /**
     * Setter for Endpoint.
     * Cluster endpoint
     * @param endpoint Value for String
     */
    @JsonSetter("endpoint")
    public void setEndpoint(String endpoint) {
        this.endpoint = endpoint;
    }

    /**
     * Converts this SksCluster into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "SksCluster [" + "description=" + description + ", labels=" + labels + ", cni=" + cni
                + ", autoUpgrade=" + autoUpgrade + ", name=" + name + ", state=" + state
                + ", nodepools=" + nodepools + ", level=" + level + ", addons=" + addons + ", id="
                + id + ", version=" + version + ", createdAt=" + createdAt + ", endpoint="
                + endpoint + "]";
    }

    /**
     * Builds a new {@link SksCluster.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link SksCluster.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .description(getDescription())
                .labels(getLabels())
                .cni(getCni())
                .autoUpgrade(getAutoUpgrade())
                .name(getName())
                .state(getState())
                .nodepools(getNodepools())
                .level(getLevel())
                .addons(getAddons())
                .id(getId())
                .version(getVersion())
                .createdAt(getCreatedAt())
                .endpoint(getEndpoint());
        return builder;
    }

    /**
     * Class to build instances of {@link SksCluster}.
     */
    public static class Builder {
        private String description;
        private Map<String, String> labels;
        private CniEnum cni;
        private Boolean autoUpgrade;
        private String name;
        private State6Enum state;
        private List<SksNodepool> nodepools;
        private Level1Enum level;
        private List<Addon1Enum> addons;
        private UUID id;
        private String version;
        private LocalDateTime createdAt;
        private String endpoint;



        /**
         * Setter for description.
         * @param  description  String value for description.
         * @return Builder
         */
        public Builder description(String description) {
            this.description = description;
            return this;
        }

        /**
         * Setter for labels.
         * @param  labels  Map of String, value for labels.
         * @return Builder
         */
        public Builder labels(Map<String, String> labels) {
            this.labels = labels;
            return this;
        }

        /**
         * Setter for cni.
         * @param  cni  CniEnum value for cni.
         * @return Builder
         */
        public Builder cni(CniEnum cni) {
            this.cni = cni;
            return this;
        }

        /**
         * Setter for autoUpgrade.
         * @param  autoUpgrade  Boolean value for autoUpgrade.
         * @return Builder
         */
        public Builder autoUpgrade(Boolean autoUpgrade) {
            this.autoUpgrade = autoUpgrade;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for state.
         * @param  state  State6Enum value for state.
         * @return Builder
         */
        public Builder state(State6Enum state) {
            this.state = state;
            return this;
        }

        /**
         * Setter for nodepools.
         * @param  nodepools  List of SksNodepool value for nodepools.
         * @return Builder
         */
        public Builder nodepools(List<SksNodepool> nodepools) {
            this.nodepools = nodepools;
            return this;
        }

        /**
         * Setter for level.
         * @param  level  Level1Enum value for level.
         * @return Builder
         */
        public Builder level(Level1Enum level) {
            this.level = level;
            return this;
        }

        /**
         * Setter for addons.
         * @param  addons  List of Addon1Enum value for addons.
         * @return Builder
         */
        public Builder addons(List<Addon1Enum> addons) {
            this.addons = addons;
            return this;
        }

        /**
         * Setter for id.
         * @param  id  UUID value for id.
         * @return Builder
         */
        public Builder id(UUID id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for version.
         * @param  version  String value for version.
         * @return Builder
         */
        public Builder version(String version) {
            this.version = version;
            return this;
        }

        /**
         * Setter for createdAt.
         * @param  createdAt  LocalDateTime value for createdAt.
         * @return Builder
         */
        public Builder createdAt(LocalDateTime createdAt) {
            this.createdAt = createdAt;
            return this;
        }

        /**
         * Setter for endpoint.
         * @param  endpoint  String value for endpoint.
         * @return Builder
         */
        public Builder endpoint(String endpoint) {
            this.endpoint = endpoint;
            return this;
        }

        /**
         * Builds a new {@link SksCluster} object using the set fields.
         * @return {@link SksCluster}
         */
        public SksCluster build() {
            return new SksCluster(description, labels, cni, autoUpgrade, name, state, nodepools,
                    level, addons, id, version, createdAt, endpoint);
        }
    }
}
