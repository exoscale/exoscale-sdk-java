name: Update bundled openapi definition & Generate SDK

on:
  push:
    branches:
      - salehelkaza/sc-104823/exoscale-sdk-for-java-last-mile
  workflow_dispatch:
 # schedule:
   # - cron: '0 7 * * *'  # At 07:00 every day
   
jobs:
  scheduled:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Fetch latest OpenAPI definition
        shell: bash
        run: |
          curl -s https://openapi-v2.exoscale.com/source.yaml -o api/openapi.yaml

      - name: Check for changes in OpenAPI definition
        id: changes
        run: |
          git diff --exit-code api/openapi.yaml || echo "CHANGED=true" >> $GITHUB_ENV

      - name: Install xmlstarlet
        if: env.CHANGED == 'true'
        run: sudo apt-get update && sudo apt-get install -y xmlstarlet

      - name: Increment artifactVersion
        if: env.CHANGED == 'true'
        id: increment_version
        run: |
          current_version=$(xmlstarlet sel -t -v "//*[local-name()='artifactVersion']" pom.xml)
          echo "Current version: $current_version"
          IFS='.-' read -r -a parts <<< "$current_version"
          new_patch=$((parts[2] + 1))
          new_version="${parts[0]}.${parts[1]}.$new_patch-${parts[3]}"
          echo "New version: $new_version"
          xmlstarlet ed --inplace --update "//*[local-name()='artifactVersion']" --value "$new_version" pom.xml
          echo "new_version=$new_version" >> $GITHUB_ENV
          echo "Updated version to $new_version"

      - name: Delete existing SDK if OpenAPI definition has changed
        if: env.CHANGED == 'true'
        run: rm -rf sdk/*

      - name: Generate code if OpenAPI definition has changed
        if: env.CHANGED == 'true'
        run: |
          mvn generate-sources process-resources
          cd sdk
          mvn install
          cd ..

      - name: Check target folder for JavaDocs
        if: env.CHANGED == 'true'
        run: ls -lR sdk/target/

      - name: Copy Javadoc JAR to a temporary location
        if: env.CHANGED == 'true'
        run: |
          mkdir -p /tmp/javadoc
          cp sdk/target/*-javadoc.jar /tmp/javadoc/

      - name: Commit and push changes if OpenAPI definition has changed
        if: env.CHANGED == 'true'
        run: |-
          git config user.name "Automated"
          git config user.email "actions@users.noreply.github.com"
          git add .
          timestamp=$(date -u)
          git commit -m "OpenAPI spec and SDK update: ${timestamp}" || exit 0
          git push

      - name: Checkout gh-pages branch
        if: env.CHANGED == 'true'
        uses: actions/checkout@v4
        with:
          ref: gh-pages-test  # Test on a temporary gh-pages branch

      - name: Move Javadoc JAR back to working directory
        if: env.CHANGED == 'true'
        run: |
          mkdir -p sdk/target/
          mv /tmp/javadoc/* sdk/target/

      - name: Extract Javadoc JAR dynamically
        if: env.CHANGED == 'true'
        run: |
          mkdir -p javadoc/current
          JAR_FILE=$(find sdk/target -name '*-javadoc.jar' | head -n 1)
          echo "Found Javadoc JAR: $JAR_FILE"
          cp "$JAR_FILE" javadoc/current/
          cd javadoc/current
          jar -xvf $(basename "$JAR_FILE")

      - name: Append new version to index.html
        if: env.CHANGED == 'true'
        run: echo "<li><a href=\"/javadoc/current/\">$new_version</a></li>" >> index.html

      - name: Commit and push JavaDocs
        if: env.CHANGED == 'true'
        run: |-
          git config user.name "Automated"
          git config user.email "actions@users.noreply.github.com"
          git add .
          git commit -m "Update JavaDocs for $new_version"
          git push
