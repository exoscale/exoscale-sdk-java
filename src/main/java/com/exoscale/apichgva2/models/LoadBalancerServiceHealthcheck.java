/*
 * ExoscalePublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.exoscale.apichgva2.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for LoadBalancerServiceHealthcheck type.
 */
public class LoadBalancerServiceHealthcheck {
    private Mode1Enum mode;
    private Long interval;
    private String uri;
    private Long port;
    private Long timeout;
    private Long retries;
    private String tlsSni;

    /**
     * Default constructor.
     */
    public LoadBalancerServiceHealthcheck() {
    }

    /**
     * Initialization constructor.
     * @param  mode  Mode1Enum value for mode.
     * @param  interval  Long value for interval.
     * @param  uri  String value for uri.
     * @param  port  Long value for port.
     * @param  timeout  Long value for timeout.
     * @param  retries  Long value for retries.
     * @param  tlsSni  String value for tlsSni.
     */
    public LoadBalancerServiceHealthcheck(
            Mode1Enum mode,
            Long interval,
            String uri,
            Long port,
            Long timeout,
            Long retries,
            String tlsSni) {
        this.mode = mode;
        this.interval = interval;
        this.uri = uri;
        this.port = port;
        this.timeout = timeout;
        this.retries = retries;
        this.tlsSni = tlsSni;
    }

    /**
     * Getter for Mode.
     * Healthcheck mode
     * @return Returns the Mode1Enum
     */
    @JsonGetter("mode")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Mode1Enum getMode() {
        return mode;
    }

    /**
     * Setter for Mode.
     * Healthcheck mode
     * @param mode Value for Mode1Enum
     */
    @JsonSetter("mode")
    public void setMode(Mode1Enum mode) {
        this.mode = mode;
    }

    /**
     * Getter for Interval.
     * Healthcheck interval (default: 10). Must be greater than or equal to Timeout
     * @return Returns the Long
     */
    @JsonGetter("interval")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Long getInterval() {
        return interval;
    }

    /**
     * Setter for Interval.
     * Healthcheck interval (default: 10). Must be greater than or equal to Timeout
     * @param interval Value for Long
     */
    @JsonSetter("interval")
    public void setInterval(Long interval) {
        this.interval = interval;
    }

    /**
     * Getter for Uri.
     * An endpoint to use for the HTTP healthcheck, e.g. '/status'
     * @return Returns the String
     */
    @JsonGetter("uri")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getUri() {
        return uri;
    }

    /**
     * Setter for Uri.
     * An endpoint to use for the HTTP healthcheck, e.g. '/status'
     * @param uri Value for String
     */
    @JsonSetter("uri")
    public void setUri(String uri) {
        this.uri = uri;
    }

    /**
     * Getter for Port.
     * Healthcheck port
     * @return Returns the Long
     */
    @JsonGetter("port")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Long getPort() {
        return port;
    }

    /**
     * Setter for Port.
     * Healthcheck port
     * @param port Value for Long
     */
    @JsonSetter("port")
    public void setPort(Long port) {
        this.port = port;
    }

    /**
     * Getter for Timeout.
     * Healthcheck timeout value (default: 2). Must be lower than or equal to Interval
     * @return Returns the Long
     */
    @JsonGetter("timeout")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Long getTimeout() {
        return timeout;
    }

    /**
     * Setter for Timeout.
     * Healthcheck timeout value (default: 2). Must be lower than or equal to Interval
     * @param timeout Value for Long
     */
    @JsonSetter("timeout")
    public void setTimeout(Long timeout) {
        this.timeout = timeout;
    }

    /**
     * Getter for Retries.
     * Number of retries before considering a Service failed
     * @return Returns the Long
     */
    @JsonGetter("retries")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Long getRetries() {
        return retries;
    }

    /**
     * Setter for Retries.
     * Number of retries before considering a Service failed
     * @param retries Value for Long
     */
    @JsonSetter("retries")
    public void setRetries(Long retries) {
        this.retries = retries;
    }

    /**
     * Getter for TlsSni.
     * SNI domain for HTTPS healthchecks
     * @return Returns the String
     */
    @JsonGetter("tls-sni")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getTlsSni() {
        return tlsSni;
    }

    /**
     * Setter for TlsSni.
     * SNI domain for HTTPS healthchecks
     * @param tlsSni Value for String
     */
    @JsonSetter("tls-sni")
    public void setTlsSni(String tlsSni) {
        this.tlsSni = tlsSni;
    }

    /**
     * Converts this LoadBalancerServiceHealthcheck into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "LoadBalancerServiceHealthcheck [" + "mode=" + mode + ", interval=" + interval
                + ", uri=" + uri + ", port=" + port + ", timeout=" + timeout + ", retries="
                + retries + ", tlsSni=" + tlsSni + "]";
    }

    /**
     * Builds a new {@link LoadBalancerServiceHealthcheck.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link LoadBalancerServiceHealthcheck.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .mode(getMode())
                .interval(getInterval())
                .uri(getUri())
                .port(getPort())
                .timeout(getTimeout())
                .retries(getRetries())
                .tlsSni(getTlsSni());
        return builder;
    }

    /**
     * Class to build instances of {@link LoadBalancerServiceHealthcheck}.
     */
    public static class Builder {
        private Mode1Enum mode;
        private Long interval;
        private String uri;
        private Long port;
        private Long timeout;
        private Long retries;
        private String tlsSni;



        /**
         * Setter for mode.
         * @param  mode  Mode1Enum value for mode.
         * @return Builder
         */
        public Builder mode(Mode1Enum mode) {
            this.mode = mode;
            return this;
        }

        /**
         * Setter for interval.
         * @param  interval  Long value for interval.
         * @return Builder
         */
        public Builder interval(Long interval) {
            this.interval = interval;
            return this;
        }

        /**
         * Setter for uri.
         * @param  uri  String value for uri.
         * @return Builder
         */
        public Builder uri(String uri) {
            this.uri = uri;
            return this;
        }

        /**
         * Setter for port.
         * @param  port  Long value for port.
         * @return Builder
         */
        public Builder port(Long port) {
            this.port = port;
            return this;
        }

        /**
         * Setter for timeout.
         * @param  timeout  Long value for timeout.
         * @return Builder
         */
        public Builder timeout(Long timeout) {
            this.timeout = timeout;
            return this;
        }

        /**
         * Setter for retries.
         * @param  retries  Long value for retries.
         * @return Builder
         */
        public Builder retries(Long retries) {
            this.retries = retries;
            return this;
        }

        /**
         * Setter for tlsSni.
         * @param  tlsSni  String value for tlsSni.
         * @return Builder
         */
        public Builder tlsSni(String tlsSni) {
            this.tlsSni = tlsSni;
            return this;
        }

        /**
         * Builds a new {@link LoadBalancerServiceHealthcheck} object using the set fields.
         * @return {@link LoadBalancerServiceHealthcheck}
         */
        public LoadBalancerServiceHealthcheck build() {
            return new LoadBalancerServiceHealthcheck(mode, interval, uri, port, timeout, retries,
                    tlsSni);
        }
    }
}
