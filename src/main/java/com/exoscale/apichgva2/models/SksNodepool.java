/*
 * ExoscalePublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.exoscale.apichgva2.models;

import com.exoscale.apichgva2.DateTimeHelper;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.LocalDateTime;
import java.util.List;
import java.util.Map;
import java.util.UUID;

/**
 * This is a model class for SksNodepool type.
 */
public class SksNodepool {
    private List<AntiAffinityGroup> antiAffinityGroups;
    private String description;
    private Map<String, String> labels;
    private Map<String, SksNodepoolTaint> taints;
    private List<SecurityGroup> securityGroups;
    private String name;
    private InstanceType instanceType;
    private List<PrivateNetwork> privateNetworks;
    private Template template;
    private State7Enum state;
    private Long size;
    private KubeletImageGc kubeletImageGc;
    private InstancePool instancePool;
    private String instancePrefix;
    private DeployTarget deployTarget;
    private List<AddonEnum> addons;
    private UUID id;
    private Long diskSize;
    private String version;
    private LocalDateTime createdAt;

    /**
     * Default constructor.
     */
    public SksNodepool() {
    }

    /**
     * Initialization constructor.
     * @param  antiAffinityGroups  List of AntiAffinityGroup value for antiAffinityGroups.
     * @param  description  String value for description.
     * @param  labels  Map of String, value for labels.
     * @param  taints  Map of String, value for taints.
     * @param  securityGroups  List of SecurityGroup value for securityGroups.
     * @param  name  String value for name.
     * @param  instanceType  InstanceType value for instanceType.
     * @param  privateNetworks  List of PrivateNetwork value for privateNetworks.
     * @param  template  Template value for template.
     * @param  state  State7Enum value for state.
     * @param  size  Long value for size.
     * @param  kubeletImageGc  KubeletImageGc value for kubeletImageGc.
     * @param  instancePool  InstancePool value for instancePool.
     * @param  instancePrefix  String value for instancePrefix.
     * @param  deployTarget  DeployTarget value for deployTarget.
     * @param  addons  List of AddonEnum value for addons.
     * @param  id  UUID value for id.
     * @param  diskSize  Long value for diskSize.
     * @param  version  String value for version.
     * @param  createdAt  LocalDateTime value for createdAt.
     */
    public SksNodepool(
            List<AntiAffinityGroup> antiAffinityGroups,
            String description,
            Map<String, String> labels,
            Map<String, SksNodepoolTaint> taints,
            List<SecurityGroup> securityGroups,
            String name,
            InstanceType instanceType,
            List<PrivateNetwork> privateNetworks,
            Template template,
            State7Enum state,
            Long size,
            KubeletImageGc kubeletImageGc,
            InstancePool instancePool,
            String instancePrefix,
            DeployTarget deployTarget,
            List<AddonEnum> addons,
            UUID id,
            Long diskSize,
            String version,
            LocalDateTime createdAt) {
        this.antiAffinityGroups = antiAffinityGroups;
        this.description = description;
        this.labels = labels;
        this.taints = taints;
        this.securityGroups = securityGroups;
        this.name = name;
        this.instanceType = instanceType;
        this.privateNetworks = privateNetworks;
        this.template = template;
        this.state = state;
        this.size = size;
        this.kubeletImageGc = kubeletImageGc;
        this.instancePool = instancePool;
        this.instancePrefix = instancePrefix;
        this.deployTarget = deployTarget;
        this.addons = addons;
        this.id = id;
        this.diskSize = diskSize;
        this.version = version;
        this.createdAt = createdAt;
    }

    /**
     * Getter for AntiAffinityGroups.
     * Nodepool Anti-affinity Groups
     * @return Returns the List of AntiAffinityGroup
     */
    @JsonGetter("anti-affinity-groups")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<AntiAffinityGroup> getAntiAffinityGroups() {
        return antiAffinityGroups;
    }

    /**
     * Setter for AntiAffinityGroups.
     * Nodepool Anti-affinity Groups
     * @param antiAffinityGroups Value for List of AntiAffinityGroup
     */
    @JsonSetter("anti-affinity-groups")
    public void setAntiAffinityGroups(List<AntiAffinityGroup> antiAffinityGroups) {
        this.antiAffinityGroups = antiAffinityGroups;
    }

    /**
     * Getter for Description.
     * Nodepool description
     * @return Returns the String
     */
    @JsonGetter("description")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDescription() {
        return description;
    }

    /**
     * Setter for Description.
     * Nodepool description
     * @param description Value for String
     */
    @JsonSetter("description")
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Getter for Labels.
     * @return Returns the Map of String, String
     */
    @JsonGetter("labels")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Map<String, String> getLabels() {
        return labels;
    }

    /**
     * Setter for Labels.
     * @param labels Value for Map of String, String
     */
    @JsonSetter("labels")
    public void setLabels(Map<String, String> labels) {
        this.labels = labels;
    }

    /**
     * Getter for Taints.
     * @return Returns the Map of String, SksNodepoolTaint
     */
    @JsonGetter("taints")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Map<String, SksNodepoolTaint> getTaints() {
        return taints;
    }

    /**
     * Setter for Taints.
     * @param taints Value for Map of String, SksNodepoolTaint
     */
    @JsonSetter("taints")
    public void setTaints(Map<String, SksNodepoolTaint> taints) {
        this.taints = taints;
    }

    /**
     * Getter for SecurityGroups.
     * Nodepool Security Groups
     * @return Returns the List of SecurityGroup
     */
    @JsonGetter("security-groups")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<SecurityGroup> getSecurityGroups() {
        return securityGroups;
    }

    /**
     * Setter for SecurityGroups.
     * Nodepool Security Groups
     * @param securityGroups Value for List of SecurityGroup
     */
    @JsonSetter("security-groups")
    public void setSecurityGroups(List<SecurityGroup> securityGroups) {
        this.securityGroups = securityGroups;
    }

    /**
     * Getter for Name.
     * Nodepool name
     * @return Returns the String
     */
    @JsonGetter("name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * Nodepool name
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for InstanceType.
     * Compute instance type
     * @return Returns the InstanceType
     */
    @JsonGetter("instance-type")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public InstanceType getInstanceType() {
        return instanceType;
    }

    /**
     * Setter for InstanceType.
     * Compute instance type
     * @param instanceType Value for InstanceType
     */
    @JsonSetter("instance-type")
    public void setInstanceType(InstanceType instanceType) {
        this.instanceType = instanceType;
    }

    /**
     * Getter for PrivateNetworks.
     * Nodepool Private Networks
     * @return Returns the List of PrivateNetwork
     */
    @JsonGetter("private-networks")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<PrivateNetwork> getPrivateNetworks() {
        return privateNetworks;
    }

    /**
     * Setter for PrivateNetworks.
     * Nodepool Private Networks
     * @param privateNetworks Value for List of PrivateNetwork
     */
    @JsonSetter("private-networks")
    public void setPrivateNetworks(List<PrivateNetwork> privateNetworks) {
        this.privateNetworks = privateNetworks;
    }

    /**
     * Getter for Template.
     * Instance template
     * @return Returns the Template
     */
    @JsonGetter("template")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Template getTemplate() {
        return template;
    }

    /**
     * Setter for Template.
     * Instance template
     * @param template Value for Template
     */
    @JsonSetter("template")
    public void setTemplate(Template template) {
        this.template = template;
    }

    /**
     * Getter for State.
     * Nodepool state
     * @return Returns the State7Enum
     */
    @JsonGetter("state")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public State7Enum getState() {
        return state;
    }

    /**
     * Setter for State.
     * Nodepool state
     * @param state Value for State7Enum
     */
    @JsonSetter("state")
    public void setState(State7Enum state) {
        this.state = state;
    }

    /**
     * Getter for Size.
     * Number of instances
     * @return Returns the Long
     */
    @JsonGetter("size")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Long getSize() {
        return size;
    }

    /**
     * Setter for Size.
     * Number of instances
     * @param size Value for Long
     */
    @JsonSetter("size")
    public void setSize(Long size) {
        this.size = size;
    }

    /**
     * Getter for KubeletImageGc.
     * Kubelet image GC options
     * @return Returns the KubeletImageGc
     */
    @JsonGetter("kubelet-image-gc")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public KubeletImageGc getKubeletImageGc() {
        return kubeletImageGc;
    }

    /**
     * Setter for KubeletImageGc.
     * Kubelet image GC options
     * @param kubeletImageGc Value for KubeletImageGc
     */
    @JsonSetter("kubelet-image-gc")
    public void setKubeletImageGc(KubeletImageGc kubeletImageGc) {
        this.kubeletImageGc = kubeletImageGc;
    }

    /**
     * Getter for InstancePool.
     * Instance Pool
     * @return Returns the InstancePool
     */
    @JsonGetter("instance-pool")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public InstancePool getInstancePool() {
        return instancePool;
    }

    /**
     * Setter for InstancePool.
     * Instance Pool
     * @param instancePool Value for InstancePool
     */
    @JsonSetter("instance-pool")
    public void setInstancePool(InstancePool instancePool) {
        this.instancePool = instancePool;
    }

    /**
     * Getter for InstancePrefix.
     * The instances created by the Nodepool will be prefixed with this value (default: pool)
     * @return Returns the String
     */
    @JsonGetter("instance-prefix")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getInstancePrefix() {
        return instancePrefix;
    }

    /**
     * Setter for InstancePrefix.
     * The instances created by the Nodepool will be prefixed with this value (default: pool)
     * @param instancePrefix Value for String
     */
    @JsonSetter("instance-prefix")
    public void setInstancePrefix(String instancePrefix) {
        this.instancePrefix = instancePrefix;
    }

    /**
     * Getter for DeployTarget.
     * Deploy target
     * @return Returns the DeployTarget
     */
    @JsonGetter("deploy-target")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public DeployTarget getDeployTarget() {
        return deployTarget;
    }

    /**
     * Setter for DeployTarget.
     * Deploy target
     * @param deployTarget Value for DeployTarget
     */
    @JsonSetter("deploy-target")
    public void setDeployTarget(DeployTarget deployTarget) {
        this.deployTarget = deployTarget;
    }

    /**
     * Getter for Addons.
     * Nodepool addons
     * @return Returns the List of AddonEnum
     */
    @JsonGetter("addons")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<AddonEnum> getAddons() {
        return addons;
    }

    /**
     * Setter for Addons.
     * Nodepool addons
     * @param addons Value for List of AddonEnum
     */
    @JsonSetter("addons")
    public void setAddons(List<AddonEnum> addons) {
        this.addons = addons;
    }

    /**
     * Getter for Id.
     * Nodepool ID
     * @return Returns the UUID
     */
    @JsonGetter("id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public UUID getId() {
        return id;
    }

    /**
     * Setter for Id.
     * Nodepool ID
     * @param id Value for UUID
     */
    @JsonSetter("id")
    public void setId(UUID id) {
        this.id = id;
    }

    /**
     * Getter for DiskSize.
     * Nodepool instances disk size in GB
     * @return Returns the Long
     */
    @JsonGetter("disk-size")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Long getDiskSize() {
        return diskSize;
    }

    /**
     * Setter for DiskSize.
     * Nodepool instances disk size in GB
     * @param diskSize Value for Long
     */
    @JsonSetter("disk-size")
    public void setDiskSize(Long diskSize) {
        this.diskSize = diskSize;
    }

    /**
     * Getter for Version.
     * Nodepool version
     * @return Returns the String
     */
    @JsonGetter("version")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getVersion() {
        return version;
    }

    /**
     * Setter for Version.
     * Nodepool version
     * @param version Value for String
     */
    @JsonSetter("version")
    public void setVersion(String version) {
        this.version = version;
    }

    /**
     * Getter for CreatedAt.
     * Nodepool creation date
     * @return Returns the LocalDateTime
     */
    @JsonGetter("created-at")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getCreatedAt() {
        return createdAt;
    }

    /**
     * Setter for CreatedAt.
     * Nodepool creation date
     * @param createdAt Value for LocalDateTime
     */
    @JsonSetter("created-at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Converts this SksNodepool into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "SksNodepool [" + "antiAffinityGroups=" + antiAffinityGroups + ", description="
                + description + ", labels=" + labels + ", taints=" + taints + ", securityGroups="
                + securityGroups + ", name=" + name + ", instanceType=" + instanceType
                + ", privateNetworks=" + privateNetworks + ", template=" + template + ", state="
                + state + ", size=" + size + ", kubeletImageGc=" + kubeletImageGc
                + ", instancePool=" + instancePool + ", instancePrefix=" + instancePrefix
                + ", deployTarget=" + deployTarget + ", addons=" + addons + ", id=" + id
                + ", diskSize=" + diskSize + ", version=" + version + ", createdAt=" + createdAt
                + "]";
    }

    /**
     * Builds a new {@link SksNodepool.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link SksNodepool.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .antiAffinityGroups(getAntiAffinityGroups())
                .description(getDescription())
                .labels(getLabels())
                .taints(getTaints())
                .securityGroups(getSecurityGroups())
                .name(getName())
                .instanceType(getInstanceType())
                .privateNetworks(getPrivateNetworks())
                .template(getTemplate())
                .state(getState())
                .size(getSize())
                .kubeletImageGc(getKubeletImageGc())
                .instancePool(getInstancePool())
                .instancePrefix(getInstancePrefix())
                .deployTarget(getDeployTarget())
                .addons(getAddons())
                .id(getId())
                .diskSize(getDiskSize())
                .version(getVersion())
                .createdAt(getCreatedAt());
        return builder;
    }

    /**
     * Class to build instances of {@link SksNodepool}.
     */
    public static class Builder {
        private List<AntiAffinityGroup> antiAffinityGroups;
        private String description;
        private Map<String, String> labels;
        private Map<String, SksNodepoolTaint> taints;
        private List<SecurityGroup> securityGroups;
        private String name;
        private InstanceType instanceType;
        private List<PrivateNetwork> privateNetworks;
        private Template template;
        private State7Enum state;
        private Long size;
        private KubeletImageGc kubeletImageGc;
        private InstancePool instancePool;
        private String instancePrefix;
        private DeployTarget deployTarget;
        private List<AddonEnum> addons;
        private UUID id;
        private Long diskSize;
        private String version;
        private LocalDateTime createdAt;



        /**
         * Setter for antiAffinityGroups.
         * @param  antiAffinityGroups  List of AntiAffinityGroup value for antiAffinityGroups.
         * @return Builder
         */
        public Builder antiAffinityGroups(List<AntiAffinityGroup> antiAffinityGroups) {
            this.antiAffinityGroups = antiAffinityGroups;
            return this;
        }

        /**
         * Setter for description.
         * @param  description  String value for description.
         * @return Builder
         */
        public Builder description(String description) {
            this.description = description;
            return this;
        }

        /**
         * Setter for labels.
         * @param  labels  Map of String, value for labels.
         * @return Builder
         */
        public Builder labels(Map<String, String> labels) {
            this.labels = labels;
            return this;
        }

        /**
         * Setter for taints.
         * @param  taints  Map of String, value for taints.
         * @return Builder
         */
        public Builder taints(Map<String, SksNodepoolTaint> taints) {
            this.taints = taints;
            return this;
        }

        /**
         * Setter for securityGroups.
         * @param  securityGroups  List of SecurityGroup value for securityGroups.
         * @return Builder
         */
        public Builder securityGroups(List<SecurityGroup> securityGroups) {
            this.securityGroups = securityGroups;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for instanceType.
         * @param  instanceType  InstanceType value for instanceType.
         * @return Builder
         */
        public Builder instanceType(InstanceType instanceType) {
            this.instanceType = instanceType;
            return this;
        }

        /**
         * Setter for privateNetworks.
         * @param  privateNetworks  List of PrivateNetwork value for privateNetworks.
         * @return Builder
         */
        public Builder privateNetworks(List<PrivateNetwork> privateNetworks) {
            this.privateNetworks = privateNetworks;
            return this;
        }

        /**
         * Setter for template.
         * @param  template  Template value for template.
         * @return Builder
         */
        public Builder template(Template template) {
            this.template = template;
            return this;
        }

        /**
         * Setter for state.
         * @param  state  State7Enum value for state.
         * @return Builder
         */
        public Builder state(State7Enum state) {
            this.state = state;
            return this;
        }

        /**
         * Setter for size.
         * @param  size  Long value for size.
         * @return Builder
         */
        public Builder size(Long size) {
            this.size = size;
            return this;
        }

        /**
         * Setter for kubeletImageGc.
         * @param  kubeletImageGc  KubeletImageGc value for kubeletImageGc.
         * @return Builder
         */
        public Builder kubeletImageGc(KubeletImageGc kubeletImageGc) {
            this.kubeletImageGc = kubeletImageGc;
            return this;
        }

        /**
         * Setter for instancePool.
         * @param  instancePool  InstancePool value for instancePool.
         * @return Builder
         */
        public Builder instancePool(InstancePool instancePool) {
            this.instancePool = instancePool;
            return this;
        }

        /**
         * Setter for instancePrefix.
         * @param  instancePrefix  String value for instancePrefix.
         * @return Builder
         */
        public Builder instancePrefix(String instancePrefix) {
            this.instancePrefix = instancePrefix;
            return this;
        }

        /**
         * Setter for deployTarget.
         * @param  deployTarget  DeployTarget value for deployTarget.
         * @return Builder
         */
        public Builder deployTarget(DeployTarget deployTarget) {
            this.deployTarget = deployTarget;
            return this;
        }

        /**
         * Setter for addons.
         * @param  addons  List of AddonEnum value for addons.
         * @return Builder
         */
        public Builder addons(List<AddonEnum> addons) {
            this.addons = addons;
            return this;
        }

        /**
         * Setter for id.
         * @param  id  UUID value for id.
         * @return Builder
         */
        public Builder id(UUID id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for diskSize.
         * @param  diskSize  Long value for diskSize.
         * @return Builder
         */
        public Builder diskSize(Long diskSize) {
            this.diskSize = diskSize;
            return this;
        }

        /**
         * Setter for version.
         * @param  version  String value for version.
         * @return Builder
         */
        public Builder version(String version) {
            this.version = version;
            return this;
        }

        /**
         * Setter for createdAt.
         * @param  createdAt  LocalDateTime value for createdAt.
         * @return Builder
         */
        public Builder createdAt(LocalDateTime createdAt) {
            this.createdAt = createdAt;
            return this;
        }

        /**
         * Builds a new {@link SksNodepool} object using the set fields.
         * @return {@link SksNodepool}
         */
        public SksNodepool build() {
            return new SksNodepool(antiAffinityGroups, description, labels, taints, securityGroups,
                    name, instanceType, privateNetworks, template, state, size, kubeletImageGc,
                    instancePool, instancePrefix, deployTarget, addons, id, diskSize, version,
                    createdAt);
        }
    }
}
