/*
 * Exoscale Public API
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * OpenAPI spec version: 2.0.0
 * Contact: api@exoscale.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.client.model.Labels;
import io.swagger.client.model.LoadBalancerService;
import io.swagger.v3.oas.annotations.media.Schema;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
/**
 * Load Balancer
 */
@Schema(description = "Load Balancer")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-03-08T17:23:40.261901+01:00[Europe/Vienna]")

public class LoadBalancer {
  @JsonProperty("id")
  private UUID id = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("name")
  private String name = null;

  /**
   * Load Balancer state
   */
  public enum StateEnum {
    CREATING("creating"),
    MIGRATED("migrated"),
    DELETING("deleting"),
    RUNNING("running"),
    MIGRATING("migrating"),
    ERROR("error");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static StateEnum fromValue(String input) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("state")
  private StateEnum state = null;

  @JsonProperty("created-at")
  private OffsetDateTime createdAt = null;

  @JsonProperty("ip")
  private String ip = null;

  @JsonProperty("services")
  private List<LoadBalancerService> services = null;

  @JsonProperty("labels")
  private Labels labels = null;

   /**
   * Load Balancer ID
   * @return id
  **/
  @Schema(description = "Load Balancer ID")
  public UUID getId() {
    return id;
  }

  public LoadBalancer description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Load Balancer description
   * @return description
  **/
  @Schema(description = "Load Balancer description")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public LoadBalancer name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Load Balancer name
   * @return name
  **/
  @Schema(description = "Load Balancer name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

   /**
   * Load Balancer state
   * @return state
  **/
  @Schema(description = "Load Balancer state")
  public StateEnum getState() {
    return state;
  }

   /**
   * Load Balancer creation date
   * @return createdAt
  **/
  @Schema(description = "Load Balancer creation date")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

   /**
   * Load Balancer public IP
   * @return ip
  **/
  @Schema(description = "Load Balancer public IP")
  public String getIp() {
    return ip;
  }

  public LoadBalancer services(List<LoadBalancerService> services) {
    this.services = services;
    return this;
  }

  public LoadBalancer addServicesItem(LoadBalancerService servicesItem) {
    if (this.services == null) {
      this.services = new ArrayList<>();
    }
    this.services.add(servicesItem);
    return this;
  }

   /**
   * Load Balancer Services
   * @return services
  **/
  @Schema(description = "Load Balancer Services")
  public List<LoadBalancerService> getServices() {
    return services;
  }

  public void setServices(List<LoadBalancerService> services) {
    this.services = services;
  }

  public LoadBalancer labels(Labels labels) {
    this.labels = labels;
    return this;
  }

   /**
   * Get labels
   * @return labels
  **/
  @Schema(description = "")
  public Labels getLabels() {
    return labels;
  }

  public void setLabels(Labels labels) {
    this.labels = labels;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LoadBalancer loadBalancer = (LoadBalancer) o;
    return Objects.equals(this.id, loadBalancer.id) &&
        Objects.equals(this.description, loadBalancer.description) &&
        Objects.equals(this.name, loadBalancer.name) &&
        Objects.equals(this.state, loadBalancer.state) &&
        Objects.equals(this.createdAt, loadBalancer.createdAt) &&
        Objects.equals(this.ip, loadBalancer.ip) &&
        Objects.equals(this.services, loadBalancer.services) &&
        Objects.equals(this.labels, loadBalancer.labels);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, description, name, state, createdAt, ip, services, labels);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LoadBalancer {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    ip: ").append(toIndentedString(ip)).append("\n");
    sb.append("    services: ").append(toIndentedString(services)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
