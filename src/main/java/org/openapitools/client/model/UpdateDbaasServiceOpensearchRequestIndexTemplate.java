/*
 * Exoscale Public API
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@exoscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Template settings for all new indexes
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-27T17:14:44.205710495Z[Etc/UTC]", comments = "Generator version: 7.5.0-SNAPSHOT")
public class UpdateDbaasServiceOpensearchRequestIndexTemplate {
  public static final String SERIALIZED_NAME_MAPPING_NESTED_OBJECTS_LIMIT = "mapping-nested-objects-limit";
  @SerializedName(SERIALIZED_NAME_MAPPING_NESTED_OBJECTS_LIMIT)
  private Long mappingNestedObjectsLimit;

  public static final String SERIALIZED_NAME_NUMBER_OF_REPLICAS = "number-of-replicas";
  @SerializedName(SERIALIZED_NAME_NUMBER_OF_REPLICAS)
  private Long numberOfReplicas;

  public static final String SERIALIZED_NAME_NUMBER_OF_SHARDS = "number-of-shards";
  @SerializedName(SERIALIZED_NAME_NUMBER_OF_SHARDS)
  private Long numberOfShards;

  public UpdateDbaasServiceOpensearchRequestIndexTemplate() {
  }

  public UpdateDbaasServiceOpensearchRequestIndexTemplate mappingNestedObjectsLimit(Long mappingNestedObjectsLimit) {
    this.mappingNestedObjectsLimit = mappingNestedObjectsLimit;
    return this;
  }

   /**
   * The maximum number of nested JSON objects that a single document can contain across all nested types. This limit helps to prevent out of memory errors when a document contains too many nested objects. Default is 10000.
   * minimum: 0
   * maximum: 100000
   * @return mappingNestedObjectsLimit
  **/
  @javax.annotation.Nullable
  public Long getMappingNestedObjectsLimit() {
    return mappingNestedObjectsLimit;
  }

  public void setMappingNestedObjectsLimit(Long mappingNestedObjectsLimit) {
    this.mappingNestedObjectsLimit = mappingNestedObjectsLimit;
  }


  public UpdateDbaasServiceOpensearchRequestIndexTemplate numberOfReplicas(Long numberOfReplicas) {
    this.numberOfReplicas = numberOfReplicas;
    return this;
  }

   /**
   * The number of replicas each primary shard has.
   * minimum: 0
   * maximum: 29
   * @return numberOfReplicas
  **/
  @javax.annotation.Nullable
  public Long getNumberOfReplicas() {
    return numberOfReplicas;
  }

  public void setNumberOfReplicas(Long numberOfReplicas) {
    this.numberOfReplicas = numberOfReplicas;
  }


  public UpdateDbaasServiceOpensearchRequestIndexTemplate numberOfShards(Long numberOfShards) {
    this.numberOfShards = numberOfShards;
    return this;
  }

   /**
   * The number of primary shards that an index should have.
   * minimum: 1
   * maximum: 1024
   * @return numberOfShards
  **/
  @javax.annotation.Nullable
  public Long getNumberOfShards() {
    return numberOfShards;
  }

  public void setNumberOfShards(Long numberOfShards) {
    this.numberOfShards = numberOfShards;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateDbaasServiceOpensearchRequestIndexTemplate updateDbaasServiceOpensearchRequestIndexTemplate = (UpdateDbaasServiceOpensearchRequestIndexTemplate) o;
    return Objects.equals(this.mappingNestedObjectsLimit, updateDbaasServiceOpensearchRequestIndexTemplate.mappingNestedObjectsLimit) &&
        Objects.equals(this.numberOfReplicas, updateDbaasServiceOpensearchRequestIndexTemplate.numberOfReplicas) &&
        Objects.equals(this.numberOfShards, updateDbaasServiceOpensearchRequestIndexTemplate.numberOfShards);
  }

  @Override
  public int hashCode() {
    return Objects.hash(mappingNestedObjectsLimit, numberOfReplicas, numberOfShards);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateDbaasServiceOpensearchRequestIndexTemplate {\n");
    sb.append("    mappingNestedObjectsLimit: ").append(toIndentedString(mappingNestedObjectsLimit)).append("\n");
    sb.append("    numberOfReplicas: ").append(toIndentedString(numberOfReplicas)).append("\n");
    sb.append("    numberOfShards: ").append(toIndentedString(numberOfShards)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("mapping-nested-objects-limit");
    openapiFields.add("number-of-replicas");
    openapiFields.add("number-of-shards");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to UpdateDbaasServiceOpensearchRequestIndexTemplate
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateDbaasServiceOpensearchRequestIndexTemplate.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateDbaasServiceOpensearchRequestIndexTemplate is not found in the empty JSON string", UpdateDbaasServiceOpensearchRequestIndexTemplate.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdateDbaasServiceOpensearchRequestIndexTemplate.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateDbaasServiceOpensearchRequestIndexTemplate` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateDbaasServiceOpensearchRequestIndexTemplate.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateDbaasServiceOpensearchRequestIndexTemplate' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateDbaasServiceOpensearchRequestIndexTemplate> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateDbaasServiceOpensearchRequestIndexTemplate.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateDbaasServiceOpensearchRequestIndexTemplate>() {
           @Override
           public void write(JsonWriter out, UpdateDbaasServiceOpensearchRequestIndexTemplate value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateDbaasServiceOpensearchRequestIndexTemplate read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of UpdateDbaasServiceOpensearchRequestIndexTemplate given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of UpdateDbaasServiceOpensearchRequestIndexTemplate
  * @throws IOException if the JSON string is invalid with respect to UpdateDbaasServiceOpensearchRequestIndexTemplate
  */
  public static UpdateDbaasServiceOpensearchRequestIndexTemplate fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateDbaasServiceOpensearchRequestIndexTemplate.class);
  }

 /**
  * Convert an instance of UpdateDbaasServiceOpensearchRequestIndexTemplate to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

