/*
 * Exoscale Public API
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@exoscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.exoscale.api;

import com.exoscale.model.AddExternalSourceToSecurityGroupRequest;
import com.exoscale.model.AddRuleToSecurityGroupRequest;
import com.exoscale.model.CreateSecurityGroupRequest;
import com.exoscale.model.DetachInstanceFromPrivateNetworkRequest;
import com.exoscale.model.ListSecurityGroups200Response;
import com.exoscale.model.Operation;
import com.exoscale.model.RemoveExternalSourceFromSecurityGroupRequest;
import com.exoscale.model.SecurityGroup;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

/**
 * API tests for SecurityGroupApi
 */
@Ignore
public class SecurityGroupApiTest {

    private final SecurityGroupApi api = new SecurityGroupApi();

    
    /**
     * Add an external source as a member of a Security Group
     *
     * 
     */
    @Test
    public void addExternalSourceToSecurityGroupTest()  {
        UUID id = null;
        AddExternalSourceToSecurityGroupRequest addExternalSourceToSecurityGroupRequest = null;
        Operation response = api.addExternalSourceToSecurityGroup(id, addExternalSourceToSecurityGroupRequest).block();

        // TODO: test validations
    }
    
    /**
     * Create a Security Group rule
     *
     * 
     */
    @Test
    public void addRuleToSecurityGroupTest()  {
        UUID id = null;
        AddRuleToSecurityGroupRequest addRuleToSecurityGroupRequest = null;
        Operation response = api.addRuleToSecurityGroup(id, addRuleToSecurityGroupRequest).block();

        // TODO: test validations
    }
    
    /**
     * Attach a Compute instance to a Security Group
     *
     * 
     */
    @Test
    public void attachInstanceToSecurityGroupTest()  {
        UUID id = null;
        DetachInstanceFromPrivateNetworkRequest detachInstanceFromPrivateNetworkRequest = null;
        Operation response = api.attachInstanceToSecurityGroup(id, detachInstanceFromPrivateNetworkRequest).block();

        // TODO: test validations
    }
    
    /**
     * Create a Security Group
     *
     * 
     */
    @Test
    public void createSecurityGroupTest()  {
        CreateSecurityGroupRequest createSecurityGroupRequest = null;
        Operation response = api.createSecurityGroup(createSecurityGroupRequest).block();

        // TODO: test validations
    }
    
    /**
     * Delete a Security Group rule
     *
     * 
     */
    @Test
    public void deleteRuleFromSecurityGroupTest()  {
        UUID id = null;
        UUID ruleId = null;
        Operation response = api.deleteRuleFromSecurityGroup(id, ruleId).block();

        // TODO: test validations
    }
    
    /**
     * Delete a Security Group
     *
     * 
     */
    @Test
    public void deleteSecurityGroupTest()  {
        UUID id = null;
        Operation response = api.deleteSecurityGroup(id).block();

        // TODO: test validations
    }
    
    /**
     * Detach a Compute instance from a Security Group
     *
     * 
     */
    @Test
    public void detachInstanceFromSecurityGroupTest()  {
        UUID id = null;
        DetachInstanceFromPrivateNetworkRequest detachInstanceFromPrivateNetworkRequest = null;
        Operation response = api.detachInstanceFromSecurityGroup(id, detachInstanceFromPrivateNetworkRequest).block();

        // TODO: test validations
    }
    
    /**
     * Retrieve Security Group details
     *
     * 
     */
    @Test
    public void getSecurityGroupTest()  {
        UUID id = null;
        SecurityGroup response = api.getSecurityGroup(id).block();

        // TODO: test validations
    }
    
    /**
     * List Security Groups.
     *
     * Lists security groups. When visibility is set to public, lists public security groups. Public security groups are objects maintained by Exoscale which contain source addresses for relevant services hosted by Exoscale. They can be used a source in ingress rules and as a destination in egress rules.
     */
    @Test
    public void listSecurityGroupsTest()  {
        String visibility = null;
        ListSecurityGroups200Response response = api.listSecurityGroups(visibility).block();

        // TODO: test validations
    }
    
    /**
     * Remove an external source from a Security Group
     *
     * 
     */
    @Test
    public void removeExternalSourceFromSecurityGroupTest()  {
        UUID id = null;
        RemoveExternalSourceFromSecurityGroupRequest removeExternalSourceFromSecurityGroupRequest = null;
        Operation response = api.removeExternalSourceFromSecurityGroup(id, removeExternalSourceFromSecurityGroupRequest).block();

        // TODO: test validations
    }
    
}
