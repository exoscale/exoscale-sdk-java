/*
 * ExoscalePublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.exoscale.apichgva2.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;
import java.util.Map;

/**
 * This is a model class for InstanceRequest1 type.
 */
public class InstanceRequest1 {
    private List<AntiAffinityGroup> antiAffinityGroups;
    private PublicIpAssignmentEnum publicIpAssignment;
    private Map<String, String> labels;
    private Boolean autoStart;
    private List<SecurityGroup> securityGroups;
    private String name;
    private InstanceType instanceType;
    private Template template;
    private SshKey sshKey;
    private String userData;
    private DeployTarget deployTarget;
    private Boolean ipv6Enabled;
    private long diskSize;
    private List<SshKey> sshKeys;

    /**
     * Default constructor.
     */
    public InstanceRequest1() {
    }

    /**
     * Initialization constructor.
     * @param  instanceType  InstanceType value for instanceType.
     * @param  template  Template value for template.
     * @param  diskSize  long value for diskSize.
     * @param  antiAffinityGroups  List of AntiAffinityGroup value for antiAffinityGroups.
     * @param  publicIpAssignment  PublicIpAssignmentEnum value for publicIpAssignment.
     * @param  labels  Map of String, value for labels.
     * @param  autoStart  Boolean value for autoStart.
     * @param  securityGroups  List of SecurityGroup value for securityGroups.
     * @param  name  String value for name.
     * @param  sshKey  SshKey value for sshKey.
     * @param  userData  String value for userData.
     * @param  deployTarget  DeployTarget value for deployTarget.
     * @param  ipv6Enabled  Boolean value for ipv6Enabled.
     * @param  sshKeys  List of SshKey value for sshKeys.
     */
    public InstanceRequest1(
            InstanceType instanceType,
            Template template,
            long diskSize,
            List<AntiAffinityGroup> antiAffinityGroups,
            PublicIpAssignmentEnum publicIpAssignment,
            Map<String, String> labels,
            Boolean autoStart,
            List<SecurityGroup> securityGroups,
            String name,
            SshKey sshKey,
            String userData,
            DeployTarget deployTarget,
            Boolean ipv6Enabled,
            List<SshKey> sshKeys) {
        this.antiAffinityGroups = antiAffinityGroups;
        this.publicIpAssignment = publicIpAssignment;
        this.labels = labels;
        this.autoStart = autoStart;
        this.securityGroups = securityGroups;
        this.name = name;
        this.instanceType = instanceType;
        this.template = template;
        this.sshKey = sshKey;
        this.userData = userData;
        this.deployTarget = deployTarget;
        this.ipv6Enabled = ipv6Enabled;
        this.diskSize = diskSize;
        this.sshKeys = sshKeys;
    }

    /**
     * Getter for AntiAffinityGroups.
     * Instance Anti-affinity Groups
     * @return Returns the List of AntiAffinityGroup
     */
    @JsonGetter("anti-affinity-groups")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<AntiAffinityGroup> getAntiAffinityGroups() {
        return antiAffinityGroups;
    }

    /**
     * Setter for AntiAffinityGroups.
     * Instance Anti-affinity Groups
     * @param antiAffinityGroups Value for List of AntiAffinityGroup
     */
    @JsonSetter("anti-affinity-groups")
    public void setAntiAffinityGroups(List<AntiAffinityGroup> antiAffinityGroups) {
        this.antiAffinityGroups = antiAffinityGroups;
    }

    /**
     * Getter for PublicIpAssignment.
     * @return Returns the PublicIpAssignmentEnum
     */
    @JsonGetter("public-ip-assignment")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public PublicIpAssignmentEnum getPublicIpAssignment() {
        return publicIpAssignment;
    }

    /**
     * Setter for PublicIpAssignment.
     * @param publicIpAssignment Value for PublicIpAssignmentEnum
     */
    @JsonSetter("public-ip-assignment")
    public void setPublicIpAssignment(PublicIpAssignmentEnum publicIpAssignment) {
        this.publicIpAssignment = publicIpAssignment;
    }

    /**
     * Getter for Labels.
     * @return Returns the Map of String, String
     */
    @JsonGetter("labels")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Map<String, String> getLabels() {
        return labels;
    }

    /**
     * Setter for Labels.
     * @param labels Value for Map of String, String
     */
    @JsonSetter("labels")
    public void setLabels(Map<String, String> labels) {
        this.labels = labels;
    }

    /**
     * Getter for AutoStart.
     * Start Instance on creation (default: true)
     * @return Returns the Boolean
     */
    @JsonGetter("auto-start")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getAutoStart() {
        return autoStart;
    }

    /**
     * Setter for AutoStart.
     * Start Instance on creation (default: true)
     * @param autoStart Value for Boolean
     */
    @JsonSetter("auto-start")
    public void setAutoStart(Boolean autoStart) {
        this.autoStart = autoStart;
    }

    /**
     * Getter for SecurityGroups.
     * Instance Security Groups
     * @return Returns the List of SecurityGroup
     */
    @JsonGetter("security-groups")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<SecurityGroup> getSecurityGroups() {
        return securityGroups;
    }

    /**
     * Setter for SecurityGroups.
     * Instance Security Groups
     * @param securityGroups Value for List of SecurityGroup
     */
    @JsonSetter("security-groups")
    public void setSecurityGroups(List<SecurityGroup> securityGroups) {
        this.securityGroups = securityGroups;
    }

    /**
     * Getter for Name.
     * Instance name
     * @return Returns the String
     */
    @JsonGetter("name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * Instance name
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for InstanceType.
     * Compute instance type
     * @return Returns the InstanceType
     */
    @JsonGetter("instance-type")
    public InstanceType getInstanceType() {
        return instanceType;
    }

    /**
     * Setter for InstanceType.
     * Compute instance type
     * @param instanceType Value for InstanceType
     */
    @JsonSetter("instance-type")
    public void setInstanceType(InstanceType instanceType) {
        this.instanceType = instanceType;
    }

    /**
     * Getter for Template.
     * Instance template
     * @return Returns the Template
     */
    @JsonGetter("template")
    public Template getTemplate() {
        return template;
    }

    /**
     * Setter for Template.
     * Instance template
     * @param template Value for Template
     */
    @JsonSetter("template")
    public void setTemplate(Template template) {
        this.template = template;
    }

    /**
     * Getter for SshKey.
     * SSH key
     * @return Returns the SshKey
     */
    @JsonGetter("ssh-key")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public SshKey getSshKey() {
        return sshKey;
    }

    /**
     * Setter for SshKey.
     * SSH key
     * @param sshKey Value for SshKey
     */
    @JsonSetter("ssh-key")
    public void setSshKey(SshKey sshKey) {
        this.sshKey = sshKey;
    }

    /**
     * Getter for UserData.
     * Instance Cloud-init user-data
     * @return Returns the String
     */
    @JsonGetter("user-data")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getUserData() {
        return userData;
    }

    /**
     * Setter for UserData.
     * Instance Cloud-init user-data
     * @param userData Value for String
     */
    @JsonSetter("user-data")
    public void setUserData(String userData) {
        this.userData = userData;
    }

    /**
     * Getter for DeployTarget.
     * Deploy target
     * @return Returns the DeployTarget
     */
    @JsonGetter("deploy-target")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public DeployTarget getDeployTarget() {
        return deployTarget;
    }

    /**
     * Setter for DeployTarget.
     * Deploy target
     * @param deployTarget Value for DeployTarget
     */
    @JsonSetter("deploy-target")
    public void setDeployTarget(DeployTarget deployTarget) {
        this.deployTarget = deployTarget;
    }

    /**
     * Getter for Ipv6Enabled.
     * Enable IPv6. DEPRECATED: use `public-ip-assignments`.
     * @return Returns the Boolean
     */
    @JsonGetter("ipv6-enabled")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getIpv6Enabled() {
        return ipv6Enabled;
    }

    /**
     * Setter for Ipv6Enabled.
     * Enable IPv6. DEPRECATED: use `public-ip-assignments`.
     * @param ipv6Enabled Value for Boolean
     */
    @JsonSetter("ipv6-enabled")
    public void setIpv6Enabled(Boolean ipv6Enabled) {
        this.ipv6Enabled = ipv6Enabled;
    }

    /**
     * Getter for DiskSize.
     * Instance disk size in GB
     * @return Returns the long
     */
    @JsonGetter("disk-size")
    public long getDiskSize() {
        return diskSize;
    }

    /**
     * Setter for DiskSize.
     * Instance disk size in GB
     * @param diskSize Value for long
     */
    @JsonSetter("disk-size")
    public void setDiskSize(long diskSize) {
        this.diskSize = diskSize;
    }

    /**
     * Getter for SshKeys.
     * Instance SSH Keys
     * @return Returns the List of SshKey
     */
    @JsonGetter("ssh-keys")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<SshKey> getSshKeys() {
        return sshKeys;
    }

    /**
     * Setter for SshKeys.
     * Instance SSH Keys
     * @param sshKeys Value for List of SshKey
     */
    @JsonSetter("ssh-keys")
    public void setSshKeys(List<SshKey> sshKeys) {
        this.sshKeys = sshKeys;
    }

    /**
     * Converts this InstanceRequest1 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "InstanceRequest1 [" + "instanceType=" + instanceType + ", template=" + template
                + ", diskSize=" + diskSize + ", antiAffinityGroups=" + antiAffinityGroups
                + ", publicIpAssignment=" + publicIpAssignment + ", labels=" + labels
                + ", autoStart=" + autoStart + ", securityGroups=" + securityGroups + ", name="
                + name + ", sshKey=" + sshKey + ", userData=" + userData + ", deployTarget="
                + deployTarget + ", ipv6Enabled=" + ipv6Enabled + ", sshKeys=" + sshKeys + "]";
    }

    /**
     * Builds a new {@link InstanceRequest1.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link InstanceRequest1.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(instanceType, template, diskSize)
                .antiAffinityGroups(getAntiAffinityGroups())
                .publicIpAssignment(getPublicIpAssignment())
                .labels(getLabels())
                .autoStart(getAutoStart())
                .securityGroups(getSecurityGroups())
                .name(getName())
                .sshKey(getSshKey())
                .userData(getUserData())
                .deployTarget(getDeployTarget())
                .ipv6Enabled(getIpv6Enabled())
                .sshKeys(getSshKeys());
        return builder;
    }

    /**
     * Class to build instances of {@link InstanceRequest1}.
     */
    public static class Builder {
        private InstanceType instanceType;
        private Template template;
        private long diskSize;
        private List<AntiAffinityGroup> antiAffinityGroups;
        private PublicIpAssignmentEnum publicIpAssignment;
        private Map<String, String> labels;
        private Boolean autoStart;
        private List<SecurityGroup> securityGroups;
        private String name;
        private SshKey sshKey;
        private String userData;
        private DeployTarget deployTarget;
        private Boolean ipv6Enabled;
        private List<SshKey> sshKeys;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  instanceType  InstanceType value for instanceType.
         * @param  template  Template value for template.
         * @param  diskSize  long value for diskSize.
         */
        public Builder(InstanceType instanceType, Template template, long diskSize) {
            this.instanceType = instanceType;
            this.template = template;
            this.diskSize = diskSize;
        }

        /**
         * Setter for instanceType.
         * @param  instanceType  InstanceType value for instanceType.
         * @return Builder
         */
        public Builder instanceType(InstanceType instanceType) {
            this.instanceType = instanceType;
            return this;
        }

        /**
         * Setter for template.
         * @param  template  Template value for template.
         * @return Builder
         */
        public Builder template(Template template) {
            this.template = template;
            return this;
        }

        /**
         * Setter for diskSize.
         * @param  diskSize  long value for diskSize.
         * @return Builder
         */
        public Builder diskSize(long diskSize) {
            this.diskSize = diskSize;
            return this;
        }

        /**
         * Setter for antiAffinityGroups.
         * @param  antiAffinityGroups  List of AntiAffinityGroup value for antiAffinityGroups.
         * @return Builder
         */
        public Builder antiAffinityGroups(List<AntiAffinityGroup> antiAffinityGroups) {
            this.antiAffinityGroups = antiAffinityGroups;
            return this;
        }

        /**
         * Setter for publicIpAssignment.
         * @param  publicIpAssignment  PublicIpAssignmentEnum value for publicIpAssignment.
         * @return Builder
         */
        public Builder publicIpAssignment(PublicIpAssignmentEnum publicIpAssignment) {
            this.publicIpAssignment = publicIpAssignment;
            return this;
        }

        /**
         * Setter for labels.
         * @param  labels  Map of String, value for labels.
         * @return Builder
         */
        public Builder labels(Map<String, String> labels) {
            this.labels = labels;
            return this;
        }

        /**
         * Setter for autoStart.
         * @param  autoStart  Boolean value for autoStart.
         * @return Builder
         */
        public Builder autoStart(Boolean autoStart) {
            this.autoStart = autoStart;
            return this;
        }

        /**
         * Setter for securityGroups.
         * @param  securityGroups  List of SecurityGroup value for securityGroups.
         * @return Builder
         */
        public Builder securityGroups(List<SecurityGroup> securityGroups) {
            this.securityGroups = securityGroups;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for sshKey.
         * @param  sshKey  SshKey value for sshKey.
         * @return Builder
         */
        public Builder sshKey(SshKey sshKey) {
            this.sshKey = sshKey;
            return this;
        }

        /**
         * Setter for userData.
         * @param  userData  String value for userData.
         * @return Builder
         */
        public Builder userData(String userData) {
            this.userData = userData;
            return this;
        }

        /**
         * Setter for deployTarget.
         * @param  deployTarget  DeployTarget value for deployTarget.
         * @return Builder
         */
        public Builder deployTarget(DeployTarget deployTarget) {
            this.deployTarget = deployTarget;
            return this;
        }

        /**
         * Setter for ipv6Enabled.
         * @param  ipv6Enabled  Boolean value for ipv6Enabled.
         * @return Builder
         */
        public Builder ipv6Enabled(Boolean ipv6Enabled) {
            this.ipv6Enabled = ipv6Enabled;
            return this;
        }

        /**
         * Setter for sshKeys.
         * @param  sshKeys  List of SshKey value for sshKeys.
         * @return Builder
         */
        public Builder sshKeys(List<SshKey> sshKeys) {
            this.sshKeys = sshKeys;
            return this;
        }

        /**
         * Builds a new {@link InstanceRequest1} object using the set fields.
         * @return {@link InstanceRequest1}
         */
        public InstanceRequest1 build() {
            return new InstanceRequest1(instanceType, template, diskSize, antiAffinityGroups,
                    publicIpAssignment, labels, autoStart, securityGroups, name, sshKey, userData,
                    deployTarget, ipv6Enabled, sshKeys);
        }
    }
}
