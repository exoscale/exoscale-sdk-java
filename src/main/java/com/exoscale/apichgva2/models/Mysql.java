/*
 * ExoscalePublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.exoscale.apichgva2.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for Mysql type.
 */
public class Mysql {
    private Object properties;
    private Boolean additionalProperties;
    private String type;
    private String title;

    /**
     * Default constructor.
     */
    public Mysql() {
    }

    /**
     * Initialization constructor.
     * @param  properties  Object value for properties.
     * @param  additionalProperties  Boolean value for additionalProperties.
     * @param  type  String value for type.
     * @param  title  String value for title.
     */
    public Mysql(
            Object properties,
            Boolean additionalProperties,
            String type,
            String title) {
        this.properties = properties;
        this.additionalProperties = additionalProperties;
        this.type = type;
        this.title = title;
    }

    /**
     * Getter for Properties.
     * @return Returns the Object
     */
    @JsonGetter("properties")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Object getProperties() {
        return properties;
    }

    /**
     * Setter for Properties.
     * @param properties Value for Object
     */
    @JsonSetter("properties")
    public void setProperties(Object properties) {
        this.properties = properties;
    }

    /**
     * Getter for AdditionalProperties.
     * @return Returns the Boolean
     */
    @JsonGetter("additionalProperties")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getAdditionalProperties() {
        return additionalProperties;
    }

    /**
     * Setter for AdditionalProperties.
     * @param additionalProperties Value for Boolean
     */
    @JsonSetter("additionalProperties")
    public void setAdditionalProperties(Boolean additionalProperties) {
        this.additionalProperties = additionalProperties;
    }

    /**
     * Getter for Type.
     * @return Returns the String
     */
    @JsonGetter("type")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getType() {
        return type;
    }

    /**
     * Setter for Type.
     * @param type Value for String
     */
    @JsonSetter("type")
    public void setType(String type) {
        this.type = type;
    }

    /**
     * Getter for Title.
     * @return Returns the String
     */
    @JsonGetter("title")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getTitle() {
        return title;
    }

    /**
     * Setter for Title.
     * @param title Value for String
     */
    @JsonSetter("title")
    public void setTitle(String title) {
        this.title = title;
    }

    /**
     * Converts this Mysql into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Mysql [" + "properties=" + properties + ", additionalProperties="
                + additionalProperties + ", type=" + type + ", title=" + title + "]";
    }

    /**
     * Builds a new {@link Mysql.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Mysql.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .properties(getProperties())
                .additionalProperties(getAdditionalProperties())
                .type(getType())
                .title(getTitle());
        return builder;
    }

    /**
     * Class to build instances of {@link Mysql}.
     */
    public static class Builder {
        private Object properties;
        private Boolean additionalProperties;
        private String type;
        private String title;



        /**
         * Setter for properties.
         * @param  properties  Object value for properties.
         * @return Builder
         */
        public Builder properties(Object properties) {
            this.properties = properties;
            return this;
        }

        /**
         * Setter for additionalProperties.
         * @param  additionalProperties  Boolean value for additionalProperties.
         * @return Builder
         */
        public Builder additionalProperties(Boolean additionalProperties) {
            this.additionalProperties = additionalProperties;
            return this;
        }

        /**
         * Setter for type.
         * @param  type  String value for type.
         * @return Builder
         */
        public Builder type(String type) {
            this.type = type;
            return this;
        }

        /**
         * Setter for title.
         * @param  title  String value for title.
         * @return Builder
         */
        public Builder title(String title) {
            this.title = title;
            return this;
        }

        /**
         * Builds a new {@link Mysql} object using the set fields.
         * @return {@link Mysql}
         */
        public Mysql build() {
            return new Mysql(properties, additionalProperties, type, title);
        }
    }
}
