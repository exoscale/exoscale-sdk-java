/*
 * Exoscale Public API
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * OpenAPI spec version: 2.0.0
 * Contact: api@exoscale.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.client.model.DbaasIntegration;
import io.swagger.client.model.DbaasNodeState;
import io.swagger.client.model.DbaasServiceBackup;
import io.swagger.client.model.DbaasServiceMaintenance;
import io.swagger.client.model.DbaasServiceNotification;
import io.swagger.client.model.DbaasservicemysqlBackupschedule;
import io.swagger.client.model.DbaasservicemysqlComponents;
import io.swagger.client.model.DbaasservicepgConnectioninfo;
import io.swagger.client.model.DbaasservicepgConnectionpools;
import io.swagger.client.model.DbaasservicepgUsers;
import io.swagger.client.model.EnumPgSynchronousReplication;
import io.swagger.client.model.EnumServiceState;
import io.swagger.client.model.JsonSchemaPg;
import io.swagger.client.model.JsonSchemaPgbouncer;
import io.swagger.client.model.JsonSchemaPglookout;
import io.swagger.client.model.JsonSchemaTimescaledb;
import io.swagger.v3.oas.annotations.media.Schema;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
/**
 * DbaasServicePg
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-03-08T17:23:40.261901+01:00[Europe/Vienna]")

public class DbaasServicePg {
  @JsonProperty("pgbouncer-settings")
  private JsonSchemaPgbouncer pgbouncerSettings = null;

  @JsonProperty("updated-at")
  private OffsetDateTime updatedAt = null;

  @JsonProperty("node-count")
  private Long nodeCount = null;

  @JsonProperty("connection-info")
  private DbaasservicepgConnectioninfo connectionInfo = null;

  @JsonProperty("backup-schedule")
  private DbaasservicemysqlBackupschedule backupSchedule = null;

  @JsonProperty("node-cpu-count")
  private Long nodeCpuCount = null;

  @JsonProperty("integrations")
  private List<DbaasIntegration> integrations = null;

  @JsonProperty("zone")
  private String zone = null;

  @JsonProperty("node-states")
  private List<DbaasNodeState> nodeStates = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("connection-pools")
  private List<DbaasservicepgConnectionpools> connectionPools = null;

  @JsonProperty("type")
  private String type = null;

  @JsonProperty("state")
  private EnumServiceState state = null;

  @JsonProperty("timescaledb-settings")
  private JsonSchemaTimescaledb timescaledbSettings = null;

  @JsonProperty("databases")
  private List<String> databases = null;

  @JsonProperty("ip-filter")
  private List<String> ipFilter = null;

  @JsonProperty("backups")
  private List<DbaasServiceBackup> backups = null;

  @JsonProperty("termination-protection")
  private Boolean terminationProtection = null;

  @JsonProperty("notifications")
  private List<DbaasServiceNotification> notifications = null;

  @JsonProperty("components")
  private List<DbaasservicemysqlComponents> components = null;

  @JsonProperty("synchronous-replication")
  private EnumPgSynchronousReplication synchronousReplication = null;

  @JsonProperty("pglookout-settings")
  private JsonSchemaPglookout pglookoutSettings = null;

  @JsonProperty("maintenance")
  private DbaasServiceMaintenance maintenance = null;

  @JsonProperty("disk-size")
  private Long diskSize = null;

  @JsonProperty("node-memory")
  private Long nodeMemory = null;

  @JsonProperty("uri")
  private String uri = null;

  @JsonProperty("uri-params")
  private Object uriParams = null;

  @JsonProperty("version")
  private String version = null;

  @JsonProperty("created-at")
  private OffsetDateTime createdAt = null;

  @JsonProperty("plan")
  private String plan = null;

  @JsonProperty("work-mem")
  private Long workMem = null;

  @JsonProperty("shared-buffers-percentage")
  private Long sharedBuffersPercentage = null;

  @JsonProperty("pg-settings")
  private JsonSchemaPg pgSettings = null;

  @JsonProperty("max-connections")
  private Long maxConnections = null;

  @JsonProperty("users")
  private List<DbaasservicepgUsers> users = null;

  public DbaasServicePg pgbouncerSettings(JsonSchemaPgbouncer pgbouncerSettings) {
    this.pgbouncerSettings = pgbouncerSettings;
    return this;
  }

   /**
   * Get pgbouncerSettings
   * @return pgbouncerSettings
  **/
  @Schema(description = "")
  public JsonSchemaPgbouncer getPgbouncerSettings() {
    return pgbouncerSettings;
  }

  public void setPgbouncerSettings(JsonSchemaPgbouncer pgbouncerSettings) {
    this.pgbouncerSettings = pgbouncerSettings;
  }

  public DbaasServicePg updatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Service last update timestamp (ISO 8601)
   * @return updatedAt
  **/
  @Schema(description = "Service last update timestamp (ISO 8601)")
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }

  public DbaasServicePg nodeCount(Long nodeCount) {
    this.nodeCount = nodeCount;
    return this;
  }

   /**
   * Number of service nodes in the active plan
   * minimum: 0
   * @return nodeCount
  **/
  @Schema(description = "Number of service nodes in the active plan")
  public Long getNodeCount() {
    return nodeCount;
  }

  public void setNodeCount(Long nodeCount) {
    this.nodeCount = nodeCount;
  }

  public DbaasServicePg connectionInfo(DbaasservicepgConnectioninfo connectionInfo) {
    this.connectionInfo = connectionInfo;
    return this;
  }

   /**
   * Get connectionInfo
   * @return connectionInfo
  **/
  @Schema(description = "")
  public DbaasservicepgConnectioninfo getConnectionInfo() {
    return connectionInfo;
  }

  public void setConnectionInfo(DbaasservicepgConnectioninfo connectionInfo) {
    this.connectionInfo = connectionInfo;
  }

  public DbaasServicePg backupSchedule(DbaasservicemysqlBackupschedule backupSchedule) {
    this.backupSchedule = backupSchedule;
    return this;
  }

   /**
   * Get backupSchedule
   * @return backupSchedule
  **/
  @Schema(description = "")
  public DbaasservicemysqlBackupschedule getBackupSchedule() {
    return backupSchedule;
  }

  public void setBackupSchedule(DbaasservicemysqlBackupschedule backupSchedule) {
    this.backupSchedule = backupSchedule;
  }

  public DbaasServicePg nodeCpuCount(Long nodeCpuCount) {
    this.nodeCpuCount = nodeCpuCount;
    return this;
  }

   /**
   * Number of CPUs for each node
   * minimum: 0
   * @return nodeCpuCount
  **/
  @Schema(description = "Number of CPUs for each node")
  public Long getNodeCpuCount() {
    return nodeCpuCount;
  }

  public void setNodeCpuCount(Long nodeCpuCount) {
    this.nodeCpuCount = nodeCpuCount;
  }

  public DbaasServicePg integrations(List<DbaasIntegration> integrations) {
    this.integrations = integrations;
    return this;
  }

  public DbaasServicePg addIntegrationsItem(DbaasIntegration integrationsItem) {
    if (this.integrations == null) {
      this.integrations = new ArrayList<>();
    }
    this.integrations.add(integrationsItem);
    return this;
  }

   /**
   * Service integrations
   * @return integrations
  **/
  @Schema(description = "Service integrations")
  public List<DbaasIntegration> getIntegrations() {
    return integrations;
  }

  public void setIntegrations(List<DbaasIntegration> integrations) {
    this.integrations = integrations;
  }

  public DbaasServicePg zone(String zone) {
    this.zone = zone;
    return this;
  }

   /**
   * The zone where the service is running
   * @return zone
  **/
  @Schema(description = "The zone where the service is running")
  public String getZone() {
    return zone;
  }

  public void setZone(String zone) {
    this.zone = zone;
  }

  public DbaasServicePg nodeStates(List<DbaasNodeState> nodeStates) {
    this.nodeStates = nodeStates;
    return this;
  }

  public DbaasServicePg addNodeStatesItem(DbaasNodeState nodeStatesItem) {
    if (this.nodeStates == null) {
      this.nodeStates = new ArrayList<>();
    }
    this.nodeStates.add(nodeStatesItem);
    return this;
  }

   /**
   * State of individual service nodes
   * @return nodeStates
  **/
  @Schema(description = "State of individual service nodes")
  public List<DbaasNodeState> getNodeStates() {
    return nodeStates;
  }

  public void setNodeStates(List<DbaasNodeState> nodeStates) {
    this.nodeStates = nodeStates;
  }

  public DbaasServicePg name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(required = true, description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public DbaasServicePg connectionPools(List<DbaasservicepgConnectionpools> connectionPools) {
    this.connectionPools = connectionPools;
    return this;
  }

  public DbaasServicePg addConnectionPoolsItem(DbaasservicepgConnectionpools connectionPoolsItem) {
    if (this.connectionPools == null) {
      this.connectionPools = new ArrayList<>();
    }
    this.connectionPools.add(connectionPoolsItem);
    return this;
  }

   /**
   * PostgreSQL PGBouncer connection pools
   * @return connectionPools
  **/
  @Schema(description = "PostgreSQL PGBouncer connection pools")
  public List<DbaasservicepgConnectionpools> getConnectionPools() {
    return connectionPools;
  }

  public void setConnectionPools(List<DbaasservicepgConnectionpools> connectionPools) {
    this.connectionPools = connectionPools;
  }

  public DbaasServicePg type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(required = true, description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public DbaasServicePg state(EnumServiceState state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @Schema(description = "")
  public EnumServiceState getState() {
    return state;
  }

  public void setState(EnumServiceState state) {
    this.state = state;
  }

  public DbaasServicePg timescaledbSettings(JsonSchemaTimescaledb timescaledbSettings) {
    this.timescaledbSettings = timescaledbSettings;
    return this;
  }

   /**
   * Get timescaledbSettings
   * @return timescaledbSettings
  **/
  @Schema(description = "")
  public JsonSchemaTimescaledb getTimescaledbSettings() {
    return timescaledbSettings;
  }

  public void setTimescaledbSettings(JsonSchemaTimescaledb timescaledbSettings) {
    this.timescaledbSettings = timescaledbSettings;
  }

  public DbaasServicePg databases(List<String> databases) {
    this.databases = databases;
    return this;
  }

  public DbaasServicePg addDatabasesItem(String databasesItem) {
    if (this.databases == null) {
      this.databases = new ArrayList<>();
    }
    this.databases.add(databasesItem);
    return this;
  }

   /**
   * List of PostgreSQL databases
   * @return databases
  **/
  @Schema(description = "List of PostgreSQL databases")
  public List<String> getDatabases() {
    return databases;
  }

  public void setDatabases(List<String> databases) {
    this.databases = databases;
  }

  public DbaasServicePg ipFilter(List<String> ipFilter) {
    this.ipFilter = ipFilter;
    return this;
  }

  public DbaasServicePg addIpFilterItem(String ipFilterItem) {
    if (this.ipFilter == null) {
      this.ipFilter = new ArrayList<>();
    }
    this.ipFilter.add(ipFilterItem);
    return this;
  }

   /**
   * Allowed CIDR address blocks for incoming connections
   * @return ipFilter
  **/
  @Schema(description = "Allowed CIDR address blocks for incoming connections")
  public List<String> getIpFilter() {
    return ipFilter;
  }

  public void setIpFilter(List<String> ipFilter) {
    this.ipFilter = ipFilter;
  }

  public DbaasServicePg backups(List<DbaasServiceBackup> backups) {
    this.backups = backups;
    return this;
  }

  public DbaasServicePg addBackupsItem(DbaasServiceBackup backupsItem) {
    if (this.backups == null) {
      this.backups = new ArrayList<>();
    }
    this.backups.add(backupsItem);
    return this;
  }

   /**
   * List of backups for the service
   * @return backups
  **/
  @Schema(description = "List of backups for the service")
  public List<DbaasServiceBackup> getBackups() {
    return backups;
  }

  public void setBackups(List<DbaasServiceBackup> backups) {
    this.backups = backups;
  }

  public DbaasServicePg terminationProtection(Boolean terminationProtection) {
    this.terminationProtection = terminationProtection;
    return this;
  }

   /**
   * Service is protected against termination and powering off
   * @return terminationProtection
  **/
  @Schema(description = "Service is protected against termination and powering off")
  public Boolean isTerminationProtection() {
    return terminationProtection;
  }

  public void setTerminationProtection(Boolean terminationProtection) {
    this.terminationProtection = terminationProtection;
  }

  public DbaasServicePg notifications(List<DbaasServiceNotification> notifications) {
    this.notifications = notifications;
    return this;
  }

  public DbaasServicePg addNotificationsItem(DbaasServiceNotification notificationsItem) {
    if (this.notifications == null) {
      this.notifications = new ArrayList<>();
    }
    this.notifications.add(notificationsItem);
    return this;
  }

   /**
   * Service notifications
   * @return notifications
  **/
  @Schema(description = "Service notifications")
  public List<DbaasServiceNotification> getNotifications() {
    return notifications;
  }

  public void setNotifications(List<DbaasServiceNotification> notifications) {
    this.notifications = notifications;
  }

  public DbaasServicePg components(List<DbaasservicemysqlComponents> components) {
    this.components = components;
    return this;
  }

  public DbaasServicePg addComponentsItem(DbaasservicemysqlComponents componentsItem) {
    if (this.components == null) {
      this.components = new ArrayList<>();
    }
    this.components.add(componentsItem);
    return this;
  }

   /**
   * Service component information objects
   * @return components
  **/
  @Schema(description = "Service component information objects")
  public List<DbaasservicemysqlComponents> getComponents() {
    return components;
  }

  public void setComponents(List<DbaasservicemysqlComponents> components) {
    this.components = components;
  }

  public DbaasServicePg synchronousReplication(EnumPgSynchronousReplication synchronousReplication) {
    this.synchronousReplication = synchronousReplication;
    return this;
  }

   /**
   * Get synchronousReplication
   * @return synchronousReplication
  **/
  @Schema(description = "")
  public EnumPgSynchronousReplication getSynchronousReplication() {
    return synchronousReplication;
  }

  public void setSynchronousReplication(EnumPgSynchronousReplication synchronousReplication) {
    this.synchronousReplication = synchronousReplication;
  }

  public DbaasServicePg pglookoutSettings(JsonSchemaPglookout pglookoutSettings) {
    this.pglookoutSettings = pglookoutSettings;
    return this;
  }

   /**
   * Get pglookoutSettings
   * @return pglookoutSettings
  **/
  @Schema(description = "")
  public JsonSchemaPglookout getPglookoutSettings() {
    return pglookoutSettings;
  }

  public void setPglookoutSettings(JsonSchemaPglookout pglookoutSettings) {
    this.pglookoutSettings = pglookoutSettings;
  }

  public DbaasServicePg maintenance(DbaasServiceMaintenance maintenance) {
    this.maintenance = maintenance;
    return this;
  }

   /**
   * Get maintenance
   * @return maintenance
  **/
  @Schema(description = "")
  public DbaasServiceMaintenance getMaintenance() {
    return maintenance;
  }

  public void setMaintenance(DbaasServiceMaintenance maintenance) {
    this.maintenance = maintenance;
  }

  public DbaasServicePg diskSize(Long diskSize) {
    this.diskSize = diskSize;
    return this;
  }

   /**
   * TODO UNIT disk space for data storage
   * minimum: 0
   * @return diskSize
  **/
  @Schema(description = "TODO UNIT disk space for data storage")
  public Long getDiskSize() {
    return diskSize;
  }

  public void setDiskSize(Long diskSize) {
    this.diskSize = diskSize;
  }

  public DbaasServicePg nodeMemory(Long nodeMemory) {
    this.nodeMemory = nodeMemory;
    return this;
  }

   /**
   * TODO UNIT of memory for each node
   * minimum: 0
   * @return nodeMemory
  **/
  @Schema(description = "TODO UNIT of memory for each node")
  public Long getNodeMemory() {
    return nodeMemory;
  }

  public void setNodeMemory(Long nodeMemory) {
    this.nodeMemory = nodeMemory;
  }

  public DbaasServicePg uri(String uri) {
    this.uri = uri;
    return this;
  }

   /**
   * URI for connecting to the service (may be absent)
   * @return uri
  **/
  @Schema(description = "URI for connecting to the service (may be absent)")
  public String getUri() {
    return uri;
  }

  public void setUri(String uri) {
    this.uri = uri;
  }

  public DbaasServicePg uriParams(Object uriParams) {
    this.uriParams = uriParams;
    return this;
  }

   /**
   * service_uri parameterized into key-value pairs
   * @return uriParams
  **/
  @Schema(description = "service_uri parameterized into key-value pairs")
  public Object getUriParams() {
    return uriParams;
  }

  public void setUriParams(Object uriParams) {
    this.uriParams = uriParams;
  }

  public DbaasServicePg version(String version) {
    this.version = version;
    return this;
  }

   /**
   * PostgreSQL version
   * @return version
  **/
  @Schema(description = "PostgreSQL version")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }

  public DbaasServicePg createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Service creation timestamp (ISO 8601)
   * @return createdAt
  **/
  @Schema(description = "Service creation timestamp (ISO 8601)")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public DbaasServicePg plan(String plan) {
    this.plan = plan;
    return this;
  }

   /**
   * Subscription plan
   * @return plan
  **/
  @Schema(required = true, description = "Subscription plan")
  public String getPlan() {
    return plan;
  }

  public void setPlan(String plan) {
    this.plan = plan;
  }

  public DbaasServicePg workMem(Long workMem) {
    this.workMem = workMem;
    return this;
  }

   /**
   * Sets the maximum amount of memory to be used by a query operation (such as a sort or hash table) before writing to temporary disk files, in MB. Default is 1MB + 0.075% of total RAM (up to 32MB).
   * minimum: 1
   * maximum: 1024
   * @return workMem
  **/
  @Schema(description = "Sets the maximum amount of memory to be used by a query operation (such as a sort or hash table) before writing to temporary disk files, in MB. Default is 1MB + 0.075% of total RAM (up to 32MB).")
  public Long getWorkMem() {
    return workMem;
  }

  public void setWorkMem(Long workMem) {
    this.workMem = workMem;
  }

  public DbaasServicePg sharedBuffersPercentage(Long sharedBuffersPercentage) {
    this.sharedBuffersPercentage = sharedBuffersPercentage;
    return this;
  }

   /**
   * Percentage of total RAM that the database server uses for shared memory buffers. Valid range is 20-60 (float), which corresponds to 20% - 60%. This setting adjusts the shared_buffers configuration value.
   * minimum: 20
   * maximum: 60
   * @return sharedBuffersPercentage
  **/
  @Schema(description = "Percentage of total RAM that the database server uses for shared memory buffers. Valid range is 20-60 (float), which corresponds to 20% - 60%. This setting adjusts the shared_buffers configuration value.")
  public Long getSharedBuffersPercentage() {
    return sharedBuffersPercentage;
  }

  public void setSharedBuffersPercentage(Long sharedBuffersPercentage) {
    this.sharedBuffersPercentage = sharedBuffersPercentage;
  }

  public DbaasServicePg pgSettings(JsonSchemaPg pgSettings) {
    this.pgSettings = pgSettings;
    return this;
  }

   /**
   * Get pgSettings
   * @return pgSettings
  **/
  @Schema(description = "")
  public JsonSchemaPg getPgSettings() {
    return pgSettings;
  }

  public void setPgSettings(JsonSchemaPg pgSettings) {
    this.pgSettings = pgSettings;
  }

  public DbaasServicePg maxConnections(Long maxConnections) {
    this.maxConnections = maxConnections;
    return this;
  }

   /**
   * Maximum number of connections allowed to an instance
   * minimum: 0
   * @return maxConnections
  **/
  @Schema(description = "Maximum number of connections allowed to an instance")
  public Long getMaxConnections() {
    return maxConnections;
  }

  public void setMaxConnections(Long maxConnections) {
    this.maxConnections = maxConnections;
  }

  public DbaasServicePg users(List<DbaasservicepgUsers> users) {
    this.users = users;
    return this;
  }

  public DbaasServicePg addUsersItem(DbaasservicepgUsers usersItem) {
    if (this.users == null) {
      this.users = new ArrayList<>();
    }
    this.users.add(usersItem);
    return this;
  }

   /**
   * List of service users
   * @return users
  **/
  @Schema(description = "List of service users")
  public List<DbaasservicepgUsers> getUsers() {
    return users;
  }

  public void setUsers(List<DbaasservicepgUsers> users) {
    this.users = users;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DbaasServicePg dbaasServicePg = (DbaasServicePg) o;
    return Objects.equals(this.pgbouncerSettings, dbaasServicePg.pgbouncerSettings) &&
        Objects.equals(this.updatedAt, dbaasServicePg.updatedAt) &&
        Objects.equals(this.nodeCount, dbaasServicePg.nodeCount) &&
        Objects.equals(this.connectionInfo, dbaasServicePg.connectionInfo) &&
        Objects.equals(this.backupSchedule, dbaasServicePg.backupSchedule) &&
        Objects.equals(this.nodeCpuCount, dbaasServicePg.nodeCpuCount) &&
        Objects.equals(this.integrations, dbaasServicePg.integrations) &&
        Objects.equals(this.zone, dbaasServicePg.zone) &&
        Objects.equals(this.nodeStates, dbaasServicePg.nodeStates) &&
        Objects.equals(this.name, dbaasServicePg.name) &&
        Objects.equals(this.connectionPools, dbaasServicePg.connectionPools) &&
        Objects.equals(this.type, dbaasServicePg.type) &&
        Objects.equals(this.state, dbaasServicePg.state) &&
        Objects.equals(this.timescaledbSettings, dbaasServicePg.timescaledbSettings) &&
        Objects.equals(this.databases, dbaasServicePg.databases) &&
        Objects.equals(this.ipFilter, dbaasServicePg.ipFilter) &&
        Objects.equals(this.backups, dbaasServicePg.backups) &&
        Objects.equals(this.terminationProtection, dbaasServicePg.terminationProtection) &&
        Objects.equals(this.notifications, dbaasServicePg.notifications) &&
        Objects.equals(this.components, dbaasServicePg.components) &&
        Objects.equals(this.synchronousReplication, dbaasServicePg.synchronousReplication) &&
        Objects.equals(this.pglookoutSettings, dbaasServicePg.pglookoutSettings) &&
        Objects.equals(this.maintenance, dbaasServicePg.maintenance) &&
        Objects.equals(this.diskSize, dbaasServicePg.diskSize) &&
        Objects.equals(this.nodeMemory, dbaasServicePg.nodeMemory) &&
        Objects.equals(this.uri, dbaasServicePg.uri) &&
        Objects.equals(this.uriParams, dbaasServicePg.uriParams) &&
        Objects.equals(this.version, dbaasServicePg.version) &&
        Objects.equals(this.createdAt, dbaasServicePg.createdAt) &&
        Objects.equals(this.plan, dbaasServicePg.plan) &&
        Objects.equals(this.workMem, dbaasServicePg.workMem) &&
        Objects.equals(this.sharedBuffersPercentage, dbaasServicePg.sharedBuffersPercentage) &&
        Objects.equals(this.pgSettings, dbaasServicePg.pgSettings) &&
        Objects.equals(this.maxConnections, dbaasServicePg.maxConnections) &&
        Objects.equals(this.users, dbaasServicePg.users);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pgbouncerSettings, updatedAt, nodeCount, connectionInfo, backupSchedule, nodeCpuCount, integrations, zone, nodeStates, name, connectionPools, type, state, timescaledbSettings, databases, ipFilter, backups, terminationProtection, notifications, components, synchronousReplication, pglookoutSettings, maintenance, diskSize, nodeMemory, uri, uriParams, version, createdAt, plan, workMem, sharedBuffersPercentage, pgSettings, maxConnections, users);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DbaasServicePg {\n");
    
    sb.append("    pgbouncerSettings: ").append(toIndentedString(pgbouncerSettings)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    nodeCount: ").append(toIndentedString(nodeCount)).append("\n");
    sb.append("    connectionInfo: ").append(toIndentedString(connectionInfo)).append("\n");
    sb.append("    backupSchedule: ").append(toIndentedString(backupSchedule)).append("\n");
    sb.append("    nodeCpuCount: ").append(toIndentedString(nodeCpuCount)).append("\n");
    sb.append("    integrations: ").append(toIndentedString(integrations)).append("\n");
    sb.append("    zone: ").append(toIndentedString(zone)).append("\n");
    sb.append("    nodeStates: ").append(toIndentedString(nodeStates)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    connectionPools: ").append(toIndentedString(connectionPools)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    timescaledbSettings: ").append(toIndentedString(timescaledbSettings)).append("\n");
    sb.append("    databases: ").append(toIndentedString(databases)).append("\n");
    sb.append("    ipFilter: ").append(toIndentedString(ipFilter)).append("\n");
    sb.append("    backups: ").append(toIndentedString(backups)).append("\n");
    sb.append("    terminationProtection: ").append(toIndentedString(terminationProtection)).append("\n");
    sb.append("    notifications: ").append(toIndentedString(notifications)).append("\n");
    sb.append("    components: ").append(toIndentedString(components)).append("\n");
    sb.append("    synchronousReplication: ").append(toIndentedString(synchronousReplication)).append("\n");
    sb.append("    pglookoutSettings: ").append(toIndentedString(pglookoutSettings)).append("\n");
    sb.append("    maintenance: ").append(toIndentedString(maintenance)).append("\n");
    sb.append("    diskSize: ").append(toIndentedString(diskSize)).append("\n");
    sb.append("    nodeMemory: ").append(toIndentedString(nodeMemory)).append("\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("    uriParams: ").append(toIndentedString(uriParams)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    plan: ").append(toIndentedString(plan)).append("\n");
    sb.append("    workMem: ").append(toIndentedString(workMem)).append("\n");
    sb.append("    sharedBuffersPercentage: ").append(toIndentedString(sharedBuffersPercentage)).append("\n");
    sb.append("    pgSettings: ").append(toIndentedString(pgSettings)).append("\n");
    sb.append("    maxConnections: ").append(toIndentedString(maxConnections)).append("\n");
    sb.append("    users: ").append(toIndentedString(users)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
