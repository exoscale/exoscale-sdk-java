/*
 * ExoscalePublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.exoscale.apichgva2.models;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.TreeMap;


/**
 * Type5Enum to be used.
 */
public enum Type5Enum {
    NS,

    CAA,

    NAPTR,

    POOL,

    A,

    HINFO,

    CNAME,

    SOA,

    SSHFP,

    SRV,

    AAAA,

    MX,

    TXT,

    ALIAS,

    URL,

    SPF;


    private static TreeMap<String, Type5Enum> valueMap = new TreeMap<>();
    private String value;

    static {
        NS.value = "NS";
        CAA.value = "CAA";
        NAPTR.value = "NAPTR";
        POOL.value = "POOL";
        A.value = "A";
        HINFO.value = "HINFO";
        CNAME.value = "CNAME";
        SOA.value = "SOA";
        SSHFP.value = "SSHFP";
        SRV.value = "SRV";
        AAAA.value = "AAAA";
        MX.value = "MX";
        TXT.value = "TXT";
        ALIAS.value = "ALIAS";
        URL.value = "URL";
        SPF.value = "SPF";

        valueMap.put("NS", NS);
        valueMap.put("CAA", CAA);
        valueMap.put("NAPTR", NAPTR);
        valueMap.put("POOL", POOL);
        valueMap.put("A", A);
        valueMap.put("HINFO", HINFO);
        valueMap.put("CNAME", CNAME);
        valueMap.put("SOA", SOA);
        valueMap.put("SSHFP", SSHFP);
        valueMap.put("SRV", SRV);
        valueMap.put("AAAA", AAAA);
        valueMap.put("MX", MX);
        valueMap.put("TXT", TXT);
        valueMap.put("ALIAS", ALIAS);
        valueMap.put("URL", URL);
        valueMap.put("SPF", SPF);
    }

    /**
     * Returns the enum member associated with the given string value.
     * @param toConvert String value to get enum member.
     * @return The enum member against the given string value.
     * @throws IOException when provided value is not mapped to any enum member.
     */
    @JsonCreator
    public static Type5Enum constructFromString(String toConvert) throws IOException {
        Type5Enum enumValue = fromString(toConvert);
        if (enumValue == null)
        {
            throw new IOException("Unable to create enum instance with value: " + toConvert);
        }
        return enumValue;
    }

    /**
     * Returns the enum member associated with the given string value.
     * @param toConvert String value to get enum member.
     * @return The enum member against the given string value.
     */
    public static Type5Enum fromString(String toConvert) {
        return valueMap.get(toConvert);
    }

    /**
     * Returns the string value associated with the enum member.
     * @return The string value against enum member.
     */
    @JsonValue
    public String value() {
        return value;
    }
        
    /**
     * Get string representation of this enum.
     */
    @Override
    public String toString() {
        return value.toString();
    }

    /**
     * Convert list of Type5Enum values to list of string values.
     * @param toConvert The list of Type5Enum values to convert.
     * @return List of representative string values.
     */
    public static List<String> toValue(List<Type5Enum> toConvert) {
        if (toConvert == null) {
            return null;
        }
        List<String> convertedValues = new ArrayList<>();
        for (Type5Enum enumValue : toConvert) {
            convertedValues.add(enumValue.value);
        }
        return convertedValues;
    }
} 