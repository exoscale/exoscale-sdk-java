/*
 * Exoscale Public API
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * OpenAPI spec version: 2.0.0
 * Contact: api@exoscale.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.ElasticipIdBody;
import io.swagger.client.model.InstanceIdBody;
import io.swagger.client.model.Operation;
import io.swagger.client.model.ReverseDnsRecord;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ReverseDnsApi
 */
@Ignore
public class ReverseDnsApiTest {

    private final ReverseDnsApi api = new ReverseDnsApi();

    /**
     * Delete the PTR DNS record for an elastic IP
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteReverseDnsElasticIpTest() {
        UUID id = null;
        Operation response = api.deleteReverseDnsElasticIp(id);

        // TODO: test validations
    }
    /**
     * Delete the PTR DNS record for an instance
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteReverseDnsInstanceTest() {
        UUID id = null;
        Operation response = api.deleteReverseDnsInstance(id);

        // TODO: test validations
    }
    /**
     * Query the PTR DNS records for an elastic IP
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getReverseDnsElasticIpTest() {
        UUID id = null;
        ReverseDnsRecord response = api.getReverseDnsElasticIp(id);

        // TODO: test validations
    }
    /**
     * Query the PTR DNS records for an instance
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getReverseDnsInstanceTest() {
        UUID id = null;
        ReverseDnsRecord response = api.getReverseDnsInstance(id);

        // TODO: test validations
    }
    /**
     * Update/Create the PTR DNS record for an elastic IP
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateReverseDnsElasticIpTest() {
        ElasticipIdBody body = null;
        UUID id = null;
        Operation response = api.updateReverseDnsElasticIp(body, id);

        // TODO: test validations
    }
    /**
     * Update/Create the PTR DNS record for an instance
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateReverseDnsInstanceTest() {
        InstanceIdBody body = null;
        UUID id = null;
        Operation response = api.updateReverseDnsInstance(body, id);

        // TODO: test validations
    }
}
