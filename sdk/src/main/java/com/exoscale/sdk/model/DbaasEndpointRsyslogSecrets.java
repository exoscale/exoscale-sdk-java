/*
 * Exoscale Public API
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@exoscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.exoscale.sdk.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * DbaasEndpointRsyslogSecrets
 */
@JsonPropertyOrder({
  DbaasEndpointRsyslogSecrets.JSON_PROPERTY_CA,
  DbaasEndpointRsyslogSecrets.JSON_PROPERTY_CERT,
  DbaasEndpointRsyslogSecrets.JSON_PROPERTY_KEY
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.4.0")
public class DbaasEndpointRsyslogSecrets {
  public static final String JSON_PROPERTY_CA = "ca";
  private String ca;

  public static final String JSON_PROPERTY_CERT = "cert";
  private String cert;

  public static final String JSON_PROPERTY_KEY = "key";
  private String key;

  public DbaasEndpointRsyslogSecrets() { 
  }

  public DbaasEndpointRsyslogSecrets ca(String ca) {
    this.ca = ca;
    return this;
  }

   /**
   * PEM encoded CA certificate
   * @return ca
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCa() {
    return ca;
  }


  @JsonProperty(JSON_PROPERTY_CA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCa(String ca) {
    this.ca = ca;
  }


  public DbaasEndpointRsyslogSecrets cert(String cert) {
    this.cert = cert;
    return this;
  }

   /**
   * PEM encoded client certificate
   * @return cert
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CERT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCert() {
    return cert;
  }


  @JsonProperty(JSON_PROPERTY_CERT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCert(String cert) {
    this.cert = cert;
  }


  public DbaasEndpointRsyslogSecrets key(String key) {
    this.key = key;
    return this;
  }

   /**
   * PEM encoded client key
   * @return key
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getKey() {
    return key;
  }


  @JsonProperty(JSON_PROPERTY_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKey(String key) {
    this.key = key;
  }


  /**
   * Return true if this dbaas-endpoint-rsyslog-secrets object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DbaasEndpointRsyslogSecrets dbaasEndpointRsyslogSecrets = (DbaasEndpointRsyslogSecrets) o;
    return Objects.equals(this.ca, dbaasEndpointRsyslogSecrets.ca) &&
        Objects.equals(this.cert, dbaasEndpointRsyslogSecrets.cert) &&
        Objects.equals(this.key, dbaasEndpointRsyslogSecrets.key);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ca, cert, key);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DbaasEndpointRsyslogSecrets {\n");
    sb.append("    ca: ").append(toIndentedString(ca)).append("\n");
    sb.append("    cert: ").append(toIndentedString(cert)).append("\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `ca` to the URL query string
    if (getCa() != null) {
      joiner.add(String.format("%sca%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCa()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `cert` to the URL query string
    if (getCert() != null) {
      joiner.add(String.format("%scert%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCert()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `key` to the URL query string
    if (getKey() != null) {
      joiner.add(String.format("%skey%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getKey()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

