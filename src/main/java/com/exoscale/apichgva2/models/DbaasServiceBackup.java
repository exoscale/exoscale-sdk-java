/*
 * ExoscalePublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.exoscale.apichgva2.models;

import com.exoscale.apichgva2.DateTimeHelper;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.LocalDateTime;

/**
 * This is a model class for DbaasServiceBackup type.
 */
public class DbaasServiceBackup {
    private String backupName;
    private LocalDateTime backupTime;
    private long dataSize;

    /**
     * Default constructor.
     */
    public DbaasServiceBackup() {
    }

    /**
     * Initialization constructor.
     * @param  backupName  String value for backupName.
     * @param  backupTime  LocalDateTime value for backupTime.
     * @param  dataSize  long value for dataSize.
     */
    public DbaasServiceBackup(
            String backupName,
            LocalDateTime backupTime,
            long dataSize) {
        this.backupName = backupName;
        this.backupTime = backupTime;
        this.dataSize = dataSize;
    }

    /**
     * Getter for BackupName.
     * Internal name of this backup
     * @return Returns the String
     */
    @JsonGetter("backup-name")
    public String getBackupName() {
        return backupName;
    }

    /**
     * Setter for BackupName.
     * Internal name of this backup
     * @param backupName Value for String
     */
    @JsonSetter("backup-name")
    public void setBackupName(String backupName) {
        this.backupName = backupName;
    }

    /**
     * Getter for BackupTime.
     * Backup timestamp (ISO 8601)
     * @return Returns the LocalDateTime
     */
    @JsonGetter("backup-time")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getBackupTime() {
        return backupTime;
    }

    /**
     * Setter for BackupTime.
     * Backup timestamp (ISO 8601)
     * @param backupTime Value for LocalDateTime
     */
    @JsonSetter("backup-time")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setBackupTime(LocalDateTime backupTime) {
        this.backupTime = backupTime;
    }

    /**
     * Getter for DataSize.
     * Backup's original size before compression
     * @return Returns the long
     */
    @JsonGetter("data-size")
    public long getDataSize() {
        return dataSize;
    }

    /**
     * Setter for DataSize.
     * Backup's original size before compression
     * @param dataSize Value for long
     */
    @JsonSetter("data-size")
    public void setDataSize(long dataSize) {
        this.dataSize = dataSize;
    }

    /**
     * Converts this DbaasServiceBackup into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "DbaasServiceBackup [" + "backupName=" + backupName + ", backupTime=" + backupTime
                + ", dataSize=" + dataSize + "]";
    }

    /**
     * Builds a new {@link DbaasServiceBackup.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link DbaasServiceBackup.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(backupName, backupTime, dataSize);
        return builder;
    }

    /**
     * Class to build instances of {@link DbaasServiceBackup}.
     */
    public static class Builder {
        private String backupName;
        private LocalDateTime backupTime;
        private long dataSize;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  backupName  String value for backupName.
         * @param  backupTime  LocalDateTime value for backupTime.
         * @param  dataSize  long value for dataSize.
         */
        public Builder(String backupName, LocalDateTime backupTime, long dataSize) {
            this.backupName = backupName;
            this.backupTime = backupTime;
            this.dataSize = dataSize;
        }

        /**
         * Setter for backupName.
         * @param  backupName  String value for backupName.
         * @return Builder
         */
        public Builder backupName(String backupName) {
            this.backupName = backupName;
            return this;
        }

        /**
         * Setter for backupTime.
         * @param  backupTime  LocalDateTime value for backupTime.
         * @return Builder
         */
        public Builder backupTime(LocalDateTime backupTime) {
            this.backupTime = backupTime;
            return this;
        }

        /**
         * Setter for dataSize.
         * @param  dataSize  long value for dataSize.
         * @return Builder
         */
        public Builder dataSize(long dataSize) {
            this.dataSize = dataSize;
            return this;
        }

        /**
         * Builds a new {@link DbaasServiceBackup} object using the set fields.
         * @return {@link DbaasServiceBackup}
         */
        public DbaasServiceBackup build() {
            return new DbaasServiceBackup(backupName, backupTime, dataSize);
        }
    }
}
