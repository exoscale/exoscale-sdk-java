/*
 * ExoscalePublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.exoscale.apichgva2.models;

import com.exoscale.apichgva2.DateTimeHelper;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.LocalDateTime;
import java.util.List;

/**
 * This is a model class for DbaasServiceOpensearch type.
 */
public class DbaasServiceOpensearch {
    private String description;
    private Long maxIndexCount;
    private LocalDateTime updatedAt;
    private Long nodeCount;
    private ConnectionInfo5 connectionInfo;
    private Long nodeCpuCount;
    private List<DbaasIntegration> integrations;
    private String zone;
    private List<DbaasNodeState> nodeStates;
    private String name;
    private Boolean keepIndexRefreshInterval;
    private String type;
    private EnumServiceStateEnum state;
    private List<String> ipFilter;
    private List<DbaasServiceBackup> backups;
    private Boolean terminationProtection;
    private List<DbaasServiceNotification> notifications;
    private List<Component> components;
    private List<IndexPattern> indexPatterns;
    private DbaasServiceMaintenance maintenance;
    private IndexTemplate indexTemplate;
    private Long diskSize;
    private Long nodeMemory;
    private String uri;
    private OpenSearchSettings opensearchSettings;
    private Object uriParams;
    private String version;
    private LocalDateTime createdAt;
    private String plan;
    private OpensearchDashboards opensearchDashboards;
    private List<User3> users;

    /**
     * Default constructor.
     */
    public DbaasServiceOpensearch() {
    }

    /**
     * Initialization constructor.
     * @param  name  String value for name.
     * @param  type  String value for type.
     * @param  plan  String value for plan.
     * @param  description  String value for description.
     * @param  maxIndexCount  Long value for maxIndexCount.
     * @param  updatedAt  LocalDateTime value for updatedAt.
     * @param  nodeCount  Long value for nodeCount.
     * @param  connectionInfo  ConnectionInfo5 value for connectionInfo.
     * @param  nodeCpuCount  Long value for nodeCpuCount.
     * @param  integrations  List of DbaasIntegration value for integrations.
     * @param  zone  String value for zone.
     * @param  nodeStates  List of DbaasNodeState value for nodeStates.
     * @param  keepIndexRefreshInterval  Boolean value for keepIndexRefreshInterval.
     * @param  state  EnumServiceStateEnum value for state.
     * @param  ipFilter  List of String value for ipFilter.
     * @param  backups  List of DbaasServiceBackup value for backups.
     * @param  terminationProtection  Boolean value for terminationProtection.
     * @param  notifications  List of DbaasServiceNotification value for notifications.
     * @param  components  List of Component value for components.
     * @param  indexPatterns  List of IndexPattern value for indexPatterns.
     * @param  maintenance  DbaasServiceMaintenance value for maintenance.
     * @param  indexTemplate  IndexTemplate value for indexTemplate.
     * @param  diskSize  Long value for diskSize.
     * @param  nodeMemory  Long value for nodeMemory.
     * @param  uri  String value for uri.
     * @param  opensearchSettings  OpenSearchSettings value for opensearchSettings.
     * @param  uriParams  Object value for uriParams.
     * @param  version  String value for version.
     * @param  createdAt  LocalDateTime value for createdAt.
     * @param  opensearchDashboards  OpensearchDashboards value for opensearchDashboards.
     * @param  users  List of User3 value for users.
     */
    public DbaasServiceOpensearch(
            String name,
            String type,
            String plan,
            String description,
            Long maxIndexCount,
            LocalDateTime updatedAt,
            Long nodeCount,
            ConnectionInfo5 connectionInfo,
            Long nodeCpuCount,
            List<DbaasIntegration> integrations,
            String zone,
            List<DbaasNodeState> nodeStates,
            Boolean keepIndexRefreshInterval,
            EnumServiceStateEnum state,
            List<String> ipFilter,
            List<DbaasServiceBackup> backups,
            Boolean terminationProtection,
            List<DbaasServiceNotification> notifications,
            List<Component> components,
            List<IndexPattern> indexPatterns,
            DbaasServiceMaintenance maintenance,
            IndexTemplate indexTemplate,
            Long diskSize,
            Long nodeMemory,
            String uri,
            OpenSearchSettings opensearchSettings,
            Object uriParams,
            String version,
            LocalDateTime createdAt,
            OpensearchDashboards opensearchDashboards,
            List<User3> users) {
        this.description = description;
        this.maxIndexCount = maxIndexCount;
        this.updatedAt = updatedAt;
        this.nodeCount = nodeCount;
        this.connectionInfo = connectionInfo;
        this.nodeCpuCount = nodeCpuCount;
        this.integrations = integrations;
        this.zone = zone;
        this.nodeStates = nodeStates;
        this.name = name;
        this.keepIndexRefreshInterval = keepIndexRefreshInterval;
        this.type = type;
        this.state = state;
        this.ipFilter = ipFilter;
        this.backups = backups;
        this.terminationProtection = terminationProtection;
        this.notifications = notifications;
        this.components = components;
        this.indexPatterns = indexPatterns;
        this.maintenance = maintenance;
        this.indexTemplate = indexTemplate;
        this.diskSize = diskSize;
        this.nodeMemory = nodeMemory;
        this.uri = uri;
        this.opensearchSettings = opensearchSettings;
        this.uriParams = uriParams;
        this.version = version;
        this.createdAt = createdAt;
        this.plan = plan;
        this.opensearchDashboards = opensearchDashboards;
        this.users = users;
    }

    /**
     * Getter for Description.
     * DbaaS service description
     * @return Returns the String
     */
    @JsonGetter("description")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDescription() {
        return description;
    }

    /**
     * Setter for Description.
     * DbaaS service description
     * @param description Value for String
     */
    @JsonSetter("description")
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Getter for MaxIndexCount.
     * Maximum number of indexes to keep before deleting the oldest one
     * @return Returns the Long
     */
    @JsonGetter("max-index-count")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Long getMaxIndexCount() {
        return maxIndexCount;
    }

    /**
     * Setter for MaxIndexCount.
     * Maximum number of indexes to keep before deleting the oldest one
     * @param maxIndexCount Value for Long
     */
    @JsonSetter("max-index-count")
    public void setMaxIndexCount(Long maxIndexCount) {
        this.maxIndexCount = maxIndexCount;
    }

    /**
     * Getter for UpdatedAt.
     * Service last update timestamp (ISO 8601)
     * @return Returns the LocalDateTime
     */
    @JsonGetter("updated-at")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getUpdatedAt() {
        return updatedAt;
    }

    /**
     * Setter for UpdatedAt.
     * Service last update timestamp (ISO 8601)
     * @param updatedAt Value for LocalDateTime
     */
    @JsonSetter("updated-at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for NodeCount.
     * Number of service nodes in the active plan
     * @return Returns the Long
     */
    @JsonGetter("node-count")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Long getNodeCount() {
        return nodeCount;
    }

    /**
     * Setter for NodeCount.
     * Number of service nodes in the active plan
     * @param nodeCount Value for Long
     */
    @JsonSetter("node-count")
    public void setNodeCount(Long nodeCount) {
        this.nodeCount = nodeCount;
    }

    /**
     * Getter for ConnectionInfo.
     * Opensearch connection information properties
     * @return Returns the ConnectionInfo5
     */
    @JsonGetter("connection-info")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public ConnectionInfo5 getConnectionInfo() {
        return connectionInfo;
    }

    /**
     * Setter for ConnectionInfo.
     * Opensearch connection information properties
     * @param connectionInfo Value for ConnectionInfo5
     */
    @JsonSetter("connection-info")
    public void setConnectionInfo(ConnectionInfo5 connectionInfo) {
        this.connectionInfo = connectionInfo;
    }

    /**
     * Getter for NodeCpuCount.
     * Number of CPUs for each node
     * @return Returns the Long
     */
    @JsonGetter("node-cpu-count")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Long getNodeCpuCount() {
        return nodeCpuCount;
    }

    /**
     * Setter for NodeCpuCount.
     * Number of CPUs for each node
     * @param nodeCpuCount Value for Long
     */
    @JsonSetter("node-cpu-count")
    public void setNodeCpuCount(Long nodeCpuCount) {
        this.nodeCpuCount = nodeCpuCount;
    }

    /**
     * Getter for Integrations.
     * Service integrations
     * @return Returns the List of DbaasIntegration
     */
    @JsonGetter("integrations")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<DbaasIntegration> getIntegrations() {
        return integrations;
    }

    /**
     * Setter for Integrations.
     * Service integrations
     * @param integrations Value for List of DbaasIntegration
     */
    @JsonSetter("integrations")
    public void setIntegrations(List<DbaasIntegration> integrations) {
        this.integrations = integrations;
    }

    /**
     * Getter for Zone.
     * The zone where the service is running
     * @return Returns the String
     */
    @JsonGetter("zone")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getZone() {
        return zone;
    }

    /**
     * Setter for Zone.
     * The zone where the service is running
     * @param zone Value for String
     */
    @JsonSetter("zone")
    public void setZone(String zone) {
        this.zone = zone;
    }

    /**
     * Getter for NodeStates.
     * State of individual service nodes
     * @return Returns the List of DbaasNodeState
     */
    @JsonGetter("node-states")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<DbaasNodeState> getNodeStates() {
        return nodeStates;
    }

    /**
     * Setter for NodeStates.
     * State of individual service nodes
     * @param nodeStates Value for List of DbaasNodeState
     */
    @JsonSetter("node-states")
    public void setNodeStates(List<DbaasNodeState> nodeStates) {
        this.nodeStates = nodeStates;
    }

    /**
     * Getter for Name.
     * @return Returns the String
     */
    @JsonGetter("name")
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for KeepIndexRefreshInterval.
     * Aiven automation resets index.refresh_interval to default value for every index to be sure
     * that indices are always visible to search. If it doesn't fit your case, you can disable this
     * by setting up this flag to true.
     * @return Returns the Boolean
     */
    @JsonGetter("keep-index-refresh-interval")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getKeepIndexRefreshInterval() {
        return keepIndexRefreshInterval;
    }

    /**
     * Setter for KeepIndexRefreshInterval.
     * Aiven automation resets index.refresh_interval to default value for every index to be sure
     * that indices are always visible to search. If it doesn't fit your case, you can disable this
     * by setting up this flag to true.
     * @param keepIndexRefreshInterval Value for Boolean
     */
    @JsonSetter("keep-index-refresh-interval")
    public void setKeepIndexRefreshInterval(Boolean keepIndexRefreshInterval) {
        this.keepIndexRefreshInterval = keepIndexRefreshInterval;
    }

    /**
     * Getter for Type.
     * @return Returns the String
     */
    @JsonGetter("type")
    public String getType() {
        return type;
    }

    /**
     * Setter for Type.
     * @param type Value for String
     */
    @JsonSetter("type")
    public void setType(String type) {
        this.type = type;
    }

    /**
     * Getter for State.
     * @return Returns the EnumServiceStateEnum
     */
    @JsonGetter("state")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public EnumServiceStateEnum getState() {
        return state;
    }

    /**
     * Setter for State.
     * @param state Value for EnumServiceStateEnum
     */
    @JsonSetter("state")
    public void setState(EnumServiceStateEnum state) {
        this.state = state;
    }

    /**
     * Getter for IpFilter.
     * Allowed CIDR address blocks for incoming connections
     * @return Returns the List of String
     */
    @JsonGetter("ip-filter")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<String> getIpFilter() {
        return ipFilter;
    }

    /**
     * Setter for IpFilter.
     * Allowed CIDR address blocks for incoming connections
     * @param ipFilter Value for List of String
     */
    @JsonSetter("ip-filter")
    public void setIpFilter(List<String> ipFilter) {
        this.ipFilter = ipFilter;
    }

    /**
     * Getter for Backups.
     * List of backups for the service
     * @return Returns the List of DbaasServiceBackup
     */
    @JsonGetter("backups")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<DbaasServiceBackup> getBackups() {
        return backups;
    }

    /**
     * Setter for Backups.
     * List of backups for the service
     * @param backups Value for List of DbaasServiceBackup
     */
    @JsonSetter("backups")
    public void setBackups(List<DbaasServiceBackup> backups) {
        this.backups = backups;
    }

    /**
     * Getter for TerminationProtection.
     * Service is protected against termination and powering off
     * @return Returns the Boolean
     */
    @JsonGetter("termination-protection")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getTerminationProtection() {
        return terminationProtection;
    }

    /**
     * Setter for TerminationProtection.
     * Service is protected against termination and powering off
     * @param terminationProtection Value for Boolean
     */
    @JsonSetter("termination-protection")
    public void setTerminationProtection(Boolean terminationProtection) {
        this.terminationProtection = terminationProtection;
    }

    /**
     * Getter for Notifications.
     * Service notifications
     * @return Returns the List of DbaasServiceNotification
     */
    @JsonGetter("notifications")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<DbaasServiceNotification> getNotifications() {
        return notifications;
    }

    /**
     * Setter for Notifications.
     * Service notifications
     * @param notifications Value for List of DbaasServiceNotification
     */
    @JsonSetter("notifications")
    public void setNotifications(List<DbaasServiceNotification> notifications) {
        this.notifications = notifications;
    }

    /**
     * Getter for Components.
     * Service component information objects
     * @return Returns the List of Component
     */
    @JsonGetter("components")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<Component> getComponents() {
        return components;
    }

    /**
     * Setter for Components.
     * Service component information objects
     * @param components Value for List of Component
     */
    @JsonSetter("components")
    public void setComponents(List<Component> components) {
        this.components = components;
    }

    /**
     * Getter for IndexPatterns.
     * Allows you to create glob style patterns and set a max number of indexes matching this
     * pattern you want to keep. Creating indexes exceeding this value will cause the oldest one to
     * get deleted. You could for example create a pattern looking like 'logs.?' and then create
     * index logs.1, logs.2 etc, it will delete logs.1 once you create logs.6. Do note 'logs.?' does
     * not apply to logs.10. Note: Setting max_index_count to 0 will do nothing and the pattern gets
     * ignored.
     * @return Returns the List of IndexPattern
     */
    @JsonGetter("index-patterns")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<IndexPattern> getIndexPatterns() {
        return indexPatterns;
    }

    /**
     * Setter for IndexPatterns.
     * Allows you to create glob style patterns and set a max number of indexes matching this
     * pattern you want to keep. Creating indexes exceeding this value will cause the oldest one to
     * get deleted. You could for example create a pattern looking like 'logs.?' and then create
     * index logs.1, logs.2 etc, it will delete logs.1 once you create logs.6. Do note 'logs.?' does
     * not apply to logs.10. Note: Setting max_index_count to 0 will do nothing and the pattern gets
     * ignored.
     * @param indexPatterns Value for List of IndexPattern
     */
    @JsonSetter("index-patterns")
    public void setIndexPatterns(List<IndexPattern> indexPatterns) {
        this.indexPatterns = indexPatterns;
    }

    /**
     * Getter for Maintenance.
     * Automatic maintenance settings
     * @return Returns the DbaasServiceMaintenance
     */
    @JsonGetter("maintenance")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public DbaasServiceMaintenance getMaintenance() {
        return maintenance;
    }

    /**
     * Setter for Maintenance.
     * Automatic maintenance settings
     * @param maintenance Value for DbaasServiceMaintenance
     */
    @JsonSetter("maintenance")
    public void setMaintenance(DbaasServiceMaintenance maintenance) {
        this.maintenance = maintenance;
    }

    /**
     * Getter for IndexTemplate.
     * Template settings for all new indexes
     * @return Returns the IndexTemplate
     */
    @JsonGetter("index-template")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public IndexTemplate getIndexTemplate() {
        return indexTemplate;
    }

    /**
     * Setter for IndexTemplate.
     * Template settings for all new indexes
     * @param indexTemplate Value for IndexTemplate
     */
    @JsonSetter("index-template")
    public void setIndexTemplate(IndexTemplate indexTemplate) {
        this.indexTemplate = indexTemplate;
    }

    /**
     * Getter for DiskSize.
     * TODO UNIT disk space for data storage
     * @return Returns the Long
     */
    @JsonGetter("disk-size")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Long getDiskSize() {
        return diskSize;
    }

    /**
     * Setter for DiskSize.
     * TODO UNIT disk space for data storage
     * @param diskSize Value for Long
     */
    @JsonSetter("disk-size")
    public void setDiskSize(Long diskSize) {
        this.diskSize = diskSize;
    }

    /**
     * Getter for NodeMemory.
     * TODO UNIT of memory for each node
     * @return Returns the Long
     */
    @JsonGetter("node-memory")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Long getNodeMemory() {
        return nodeMemory;
    }

    /**
     * Setter for NodeMemory.
     * TODO UNIT of memory for each node
     * @param nodeMemory Value for Long
     */
    @JsonSetter("node-memory")
    public void setNodeMemory(Long nodeMemory) {
        this.nodeMemory = nodeMemory;
    }

    /**
     * Getter for Uri.
     * URI for connecting to the service (may be absent)
     * @return Returns the String
     */
    @JsonGetter("uri")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getUri() {
        return uri;
    }

    /**
     * Setter for Uri.
     * URI for connecting to the service (may be absent)
     * @param uri Value for String
     */
    @JsonSetter("uri")
    public void setUri(String uri) {
        this.uri = uri;
    }

    /**
     * Getter for OpensearchSettings.
     * @return Returns the OpenSearchSettings
     */
    @JsonGetter("opensearch-settings")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public OpenSearchSettings getOpensearchSettings() {
        return opensearchSettings;
    }

    /**
     * Setter for OpensearchSettings.
     * @param opensearchSettings Value for OpenSearchSettings
     */
    @JsonSetter("opensearch-settings")
    public void setOpensearchSettings(OpenSearchSettings opensearchSettings) {
        this.opensearchSettings = opensearchSettings;
    }

    /**
     * Getter for UriParams.
     * service_uri parameterized into key-value pairs
     * @return Returns the Object
     */
    @JsonGetter("uri-params")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Object getUriParams() {
        return uriParams;
    }

    /**
     * Setter for UriParams.
     * service_uri parameterized into key-value pairs
     * @param uriParams Value for Object
     */
    @JsonSetter("uri-params")
    public void setUriParams(Object uriParams) {
        this.uriParams = uriParams;
    }

    /**
     * Getter for Version.
     * OpenSearch version
     * @return Returns the String
     */
    @JsonGetter("version")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getVersion() {
        return version;
    }

    /**
     * Setter for Version.
     * OpenSearch version
     * @param version Value for String
     */
    @JsonSetter("version")
    public void setVersion(String version) {
        this.version = version;
    }

    /**
     * Getter for CreatedAt.
     * Service creation timestamp (ISO 8601)
     * @return Returns the LocalDateTime
     */
    @JsonGetter("created-at")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getCreatedAt() {
        return createdAt;
    }

    /**
     * Setter for CreatedAt.
     * Service creation timestamp (ISO 8601)
     * @param createdAt Value for LocalDateTime
     */
    @JsonSetter("created-at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Getter for Plan.
     * Subscription plan
     * @return Returns the String
     */
    @JsonGetter("plan")
    public String getPlan() {
        return plan;
    }

    /**
     * Setter for Plan.
     * Subscription plan
     * @param plan Value for String
     */
    @JsonSetter("plan")
    public void setPlan(String plan) {
        this.plan = plan;
    }

    /**
     * Getter for OpensearchDashboards.
     * OpenSearch Dashboards settings
     * @return Returns the OpensearchDashboards
     */
    @JsonGetter("opensearch-dashboards")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public OpensearchDashboards getOpensearchDashboards() {
        return opensearchDashboards;
    }

    /**
     * Setter for OpensearchDashboards.
     * OpenSearch Dashboards settings
     * @param opensearchDashboards Value for OpensearchDashboards
     */
    @JsonSetter("opensearch-dashboards")
    public void setOpensearchDashboards(OpensearchDashboards opensearchDashboards) {
        this.opensearchDashboards = opensearchDashboards;
    }

    /**
     * Getter for Users.
     * List of service users
     * @return Returns the List of User3
     */
    @JsonGetter("users")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<User3> getUsers() {
        return users;
    }

    /**
     * Setter for Users.
     * List of service users
     * @param users Value for List of User3
     */
    @JsonSetter("users")
    public void setUsers(List<User3> users) {
        this.users = users;
    }

    /**
     * Converts this DbaasServiceOpensearch into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "DbaasServiceOpensearch [" + "name=" + name + ", type=" + type + ", plan=" + plan
                + ", description=" + description + ", maxIndexCount=" + maxIndexCount
                + ", updatedAt=" + updatedAt + ", nodeCount=" + nodeCount + ", connectionInfo="
                + connectionInfo + ", nodeCpuCount=" + nodeCpuCount + ", integrations="
                + integrations + ", zone=" + zone + ", nodeStates=" + nodeStates
                + ", keepIndexRefreshInterval=" + keepIndexRefreshInterval + ", state=" + state
                + ", ipFilter=" + ipFilter + ", backups=" + backups + ", terminationProtection="
                + terminationProtection + ", notifications=" + notifications + ", components="
                + components + ", indexPatterns=" + indexPatterns + ", maintenance=" + maintenance
                + ", indexTemplate=" + indexTemplate + ", diskSize=" + diskSize + ", nodeMemory="
                + nodeMemory + ", uri=" + uri + ", opensearchSettings=" + opensearchSettings
                + ", uriParams=" + uriParams + ", version=" + version + ", createdAt=" + createdAt
                + ", opensearchDashboards=" + opensearchDashboards + ", users=" + users + "]";
    }

    /**
     * Builds a new {@link DbaasServiceOpensearch.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link DbaasServiceOpensearch.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(name, type, plan)
                .description(getDescription())
                .maxIndexCount(getMaxIndexCount())
                .updatedAt(getUpdatedAt())
                .nodeCount(getNodeCount())
                .connectionInfo(getConnectionInfo())
                .nodeCpuCount(getNodeCpuCount())
                .integrations(getIntegrations())
                .zone(getZone())
                .nodeStates(getNodeStates())
                .keepIndexRefreshInterval(getKeepIndexRefreshInterval())
                .state(getState())
                .ipFilter(getIpFilter())
                .backups(getBackups())
                .terminationProtection(getTerminationProtection())
                .notifications(getNotifications())
                .components(getComponents())
                .indexPatterns(getIndexPatterns())
                .maintenance(getMaintenance())
                .indexTemplate(getIndexTemplate())
                .diskSize(getDiskSize())
                .nodeMemory(getNodeMemory())
                .uri(getUri())
                .opensearchSettings(getOpensearchSettings())
                .uriParams(getUriParams())
                .version(getVersion())
                .createdAt(getCreatedAt())
                .opensearchDashboards(getOpensearchDashboards())
                .users(getUsers());
        return builder;
    }

    /**
     * Class to build instances of {@link DbaasServiceOpensearch}.
     */
    public static class Builder {
        private String name;
        private String type;
        private String plan;
        private String description;
        private Long maxIndexCount;
        private LocalDateTime updatedAt;
        private Long nodeCount;
        private ConnectionInfo5 connectionInfo;
        private Long nodeCpuCount;
        private List<DbaasIntegration> integrations;
        private String zone;
        private List<DbaasNodeState> nodeStates;
        private Boolean keepIndexRefreshInterval;
        private EnumServiceStateEnum state;
        private List<String> ipFilter;
        private List<DbaasServiceBackup> backups;
        private Boolean terminationProtection;
        private List<DbaasServiceNotification> notifications;
        private List<Component> components;
        private List<IndexPattern> indexPatterns;
        private DbaasServiceMaintenance maintenance;
        private IndexTemplate indexTemplate;
        private Long diskSize;
        private Long nodeMemory;
        private String uri;
        private OpenSearchSettings opensearchSettings;
        private Object uriParams;
        private String version;
        private LocalDateTime createdAt;
        private OpensearchDashboards opensearchDashboards;
        private List<User3> users;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  name  String value for name.
         * @param  type  String value for type.
         * @param  plan  String value for plan.
         */
        public Builder(String name, String type, String plan) {
            this.name = name;
            this.type = type;
            this.plan = plan;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for type.
         * @param  type  String value for type.
         * @return Builder
         */
        public Builder type(String type) {
            this.type = type;
            return this;
        }

        /**
         * Setter for plan.
         * @param  plan  String value for plan.
         * @return Builder
         */
        public Builder plan(String plan) {
            this.plan = plan;
            return this;
        }

        /**
         * Setter for description.
         * @param  description  String value for description.
         * @return Builder
         */
        public Builder description(String description) {
            this.description = description;
            return this;
        }

        /**
         * Setter for maxIndexCount.
         * @param  maxIndexCount  Long value for maxIndexCount.
         * @return Builder
         */
        public Builder maxIndexCount(Long maxIndexCount) {
            this.maxIndexCount = maxIndexCount;
            return this;
        }

        /**
         * Setter for updatedAt.
         * @param  updatedAt  LocalDateTime value for updatedAt.
         * @return Builder
         */
        public Builder updatedAt(LocalDateTime updatedAt) {
            this.updatedAt = updatedAt;
            return this;
        }

        /**
         * Setter for nodeCount.
         * @param  nodeCount  Long value for nodeCount.
         * @return Builder
         */
        public Builder nodeCount(Long nodeCount) {
            this.nodeCount = nodeCount;
            return this;
        }

        /**
         * Setter for connectionInfo.
         * @param  connectionInfo  ConnectionInfo5 value for connectionInfo.
         * @return Builder
         */
        public Builder connectionInfo(ConnectionInfo5 connectionInfo) {
            this.connectionInfo = connectionInfo;
            return this;
        }

        /**
         * Setter for nodeCpuCount.
         * @param  nodeCpuCount  Long value for nodeCpuCount.
         * @return Builder
         */
        public Builder nodeCpuCount(Long nodeCpuCount) {
            this.nodeCpuCount = nodeCpuCount;
            return this;
        }

        /**
         * Setter for integrations.
         * @param  integrations  List of DbaasIntegration value for integrations.
         * @return Builder
         */
        public Builder integrations(List<DbaasIntegration> integrations) {
            this.integrations = integrations;
            return this;
        }

        /**
         * Setter for zone.
         * @param  zone  String value for zone.
         * @return Builder
         */
        public Builder zone(String zone) {
            this.zone = zone;
            return this;
        }

        /**
         * Setter for nodeStates.
         * @param  nodeStates  List of DbaasNodeState value for nodeStates.
         * @return Builder
         */
        public Builder nodeStates(List<DbaasNodeState> nodeStates) {
            this.nodeStates = nodeStates;
            return this;
        }

        /**
         * Setter for keepIndexRefreshInterval.
         * @param  keepIndexRefreshInterval  Boolean value for keepIndexRefreshInterval.
         * @return Builder
         */
        public Builder keepIndexRefreshInterval(Boolean keepIndexRefreshInterval) {
            this.keepIndexRefreshInterval = keepIndexRefreshInterval;
            return this;
        }

        /**
         * Setter for state.
         * @param  state  EnumServiceStateEnum value for state.
         * @return Builder
         */
        public Builder state(EnumServiceStateEnum state) {
            this.state = state;
            return this;
        }

        /**
         * Setter for ipFilter.
         * @param  ipFilter  List of String value for ipFilter.
         * @return Builder
         */
        public Builder ipFilter(List<String> ipFilter) {
            this.ipFilter = ipFilter;
            return this;
        }

        /**
         * Setter for backups.
         * @param  backups  List of DbaasServiceBackup value for backups.
         * @return Builder
         */
        public Builder backups(List<DbaasServiceBackup> backups) {
            this.backups = backups;
            return this;
        }

        /**
         * Setter for terminationProtection.
         * @param  terminationProtection  Boolean value for terminationProtection.
         * @return Builder
         */
        public Builder terminationProtection(Boolean terminationProtection) {
            this.terminationProtection = terminationProtection;
            return this;
        }

        /**
         * Setter for notifications.
         * @param  notifications  List of DbaasServiceNotification value for notifications.
         * @return Builder
         */
        public Builder notifications(List<DbaasServiceNotification> notifications) {
            this.notifications = notifications;
            return this;
        }

        /**
         * Setter for components.
         * @param  components  List of Component value for components.
         * @return Builder
         */
        public Builder components(List<Component> components) {
            this.components = components;
            return this;
        }

        /**
         * Setter for indexPatterns.
         * @param  indexPatterns  List of IndexPattern value for indexPatterns.
         * @return Builder
         */
        public Builder indexPatterns(List<IndexPattern> indexPatterns) {
            this.indexPatterns = indexPatterns;
            return this;
        }

        /**
         * Setter for maintenance.
         * @param  maintenance  DbaasServiceMaintenance value for maintenance.
         * @return Builder
         */
        public Builder maintenance(DbaasServiceMaintenance maintenance) {
            this.maintenance = maintenance;
            return this;
        }

        /**
         * Setter for indexTemplate.
         * @param  indexTemplate  IndexTemplate value for indexTemplate.
         * @return Builder
         */
        public Builder indexTemplate(IndexTemplate indexTemplate) {
            this.indexTemplate = indexTemplate;
            return this;
        }

        /**
         * Setter for diskSize.
         * @param  diskSize  Long value for diskSize.
         * @return Builder
         */
        public Builder diskSize(Long diskSize) {
            this.diskSize = diskSize;
            return this;
        }

        /**
         * Setter for nodeMemory.
         * @param  nodeMemory  Long value for nodeMemory.
         * @return Builder
         */
        public Builder nodeMemory(Long nodeMemory) {
            this.nodeMemory = nodeMemory;
            return this;
        }

        /**
         * Setter for uri.
         * @param  uri  String value for uri.
         * @return Builder
         */
        public Builder uri(String uri) {
            this.uri = uri;
            return this;
        }

        /**
         * Setter for opensearchSettings.
         * @param  opensearchSettings  OpenSearchSettings value for opensearchSettings.
         * @return Builder
         */
        public Builder opensearchSettings(OpenSearchSettings opensearchSettings) {
            this.opensearchSettings = opensearchSettings;
            return this;
        }

        /**
         * Setter for uriParams.
         * @param  uriParams  Object value for uriParams.
         * @return Builder
         */
        public Builder uriParams(Object uriParams) {
            this.uriParams = uriParams;
            return this;
        }

        /**
         * Setter for version.
         * @param  version  String value for version.
         * @return Builder
         */
        public Builder version(String version) {
            this.version = version;
            return this;
        }

        /**
         * Setter for createdAt.
         * @param  createdAt  LocalDateTime value for createdAt.
         * @return Builder
         */
        public Builder createdAt(LocalDateTime createdAt) {
            this.createdAt = createdAt;
            return this;
        }

        /**
         * Setter for opensearchDashboards.
         * @param  opensearchDashboards  OpensearchDashboards value for opensearchDashboards.
         * @return Builder
         */
        public Builder opensearchDashboards(OpensearchDashboards opensearchDashboards) {
            this.opensearchDashboards = opensearchDashboards;
            return this;
        }

        /**
         * Setter for users.
         * @param  users  List of User3 value for users.
         * @return Builder
         */
        public Builder users(List<User3> users) {
            this.users = users;
            return this;
        }

        /**
         * Builds a new {@link DbaasServiceOpensearch} object using the set fields.
         * @return {@link DbaasServiceOpensearch}
         */
        public DbaasServiceOpensearch build() {
            return new DbaasServiceOpensearch(name, type, plan, description, maxIndexCount,
                    updatedAt, nodeCount, connectionInfo, nodeCpuCount, integrations, zone,
                    nodeStates, keepIndexRefreshInterval, state, ipFilter, backups,
                    terminationProtection, notifications, components, indexPatterns, maintenance,
                    indexTemplate, diskSize, nodeMemory, uri, opensearchSettings, uriParams,
                    version, createdAt, opensearchDashboards, users);
        }
    }
}
