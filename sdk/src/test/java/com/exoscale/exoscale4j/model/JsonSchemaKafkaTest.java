/*
 * Exoscale Public API
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@exoscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.exoscale.exoscale4j.model;

import com.exoscale.exoscale4j.model.ConfigureLogCleanerForTopicCompaction;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;

/**
 * Model tests for JsonSchemaKafka
 */
public class JsonSchemaKafkaTest {
    private final JsonSchemaKafka model = new JsonSchemaKafka();

    /**
     * Model tests for JsonSchemaKafka
     */
    @Test
    public void testJsonSchemaKafka() {
        // TODO: test JsonSchemaKafka
    }

    /**
     * Test the property 'saslOauthbearerExpectedAudience'
     */
    @Test
    public void saslOauthbearerExpectedAudienceTest() {
        // TODO: test saslOauthbearerExpectedAudience
    }

    /**
     * Test the property 'groupMaxSessionTimeoutMs'
     */
    @Test
    public void groupMaxSessionTimeoutMsTest() {
        // TODO: test groupMaxSessionTimeoutMs
    }

    /**
     * Test the property 'logFlushIntervalMessages'
     */
    @Test
    public void logFlushIntervalMessagesTest() {
        // TODO: test logFlushIntervalMessages
    }

    /**
     * Test the property 'saslOauthbearerJwksEndpointUrl'
     */
    @Test
    public void saslOauthbearerJwksEndpointUrlTest() {
        // TODO: test saslOauthbearerJwksEndpointUrl
    }

    /**
     * Test the property 'maxConnectionsPerIp'
     */
    @Test
    public void maxConnectionsPerIpTest() {
        // TODO: test maxConnectionsPerIp
    }

    /**
     * Test the property 'saslOauthbearerExpectedIssuer'
     */
    @Test
    public void saslOauthbearerExpectedIssuerTest() {
        // TODO: test saslOauthbearerExpectedIssuer
    }

    /**
     * Test the property 'logIndexSizeMaxBytes'
     */
    @Test
    public void logIndexSizeMaxBytesTest() {
        // TODO: test logIndexSizeMaxBytes
    }

    /**
     * Test the property 'autoCreateTopicsEnable'
     */
    @Test
    public void autoCreateTopicsEnableTest() {
        // TODO: test autoCreateTopicsEnable
    }

    /**
     * Test the property 'logIndexIntervalBytes'
     */
    @Test
    public void logIndexIntervalBytesTest() {
        // TODO: test logIndexIntervalBytes
    }

    /**
     * Test the property 'replicaFetchMaxBytes'
     */
    @Test
    public void replicaFetchMaxBytesTest() {
        // TODO: test replicaFetchMaxBytes
    }

    /**
     * Test the property 'numPartitions'
     */
    @Test
    public void numPartitionsTest() {
        // TODO: test numPartitions
    }

    /**
     * Test the property 'transactionStateLogSegmentBytes'
     */
    @Test
    public void transactionStateLogSegmentBytesTest() {
        // TODO: test transactionStateLogSegmentBytes
    }

    /**
     * Test the property 'replicaFetchResponseMaxBytes'
     */
    @Test
    public void replicaFetchResponseMaxBytesTest() {
        // TODO: test replicaFetchResponseMaxBytes
    }

    /**
     * Test the property 'logMessageTimestampType'
     */
    @Test
    public void logMessageTimestampTypeTest() {
        // TODO: test logMessageTimestampType
    }

    /**
     * Test the property 'connectionsMaxIdleMs'
     */
    @Test
    public void connectionsMaxIdleMsTest() {
        // TODO: test connectionsMaxIdleMs
    }

    /**
     * Test the property 'logFlushIntervalMs'
     */
    @Test
    public void logFlushIntervalMsTest() {
        // TODO: test logFlushIntervalMs
    }

    /**
     * Test the property 'logPreallocate'
     */
    @Test
    public void logPreallocateTest() {
        // TODO: test logPreallocate
    }

    /**
     * Test the property 'logSegmentDeleteDelayMs'
     */
    @Test
    public void logSegmentDeleteDelayMsTest() {
        // TODO: test logSegmentDeleteDelayMs
    }

    /**
     * Test the property 'messageMaxBytes'
     */
    @Test
    public void messageMaxBytesTest() {
        // TODO: test messageMaxBytes
    }

    /**
     * Test the property 'groupInitialRebalanceDelayMs'
     */
    @Test
    public void groupInitialRebalanceDelayMsTest() {
        // TODO: test groupInitialRebalanceDelayMs
    }

    /**
     * Test the property 'logLocalRetentionBytes'
     */
    @Test
    public void logLocalRetentionBytesTest() {
        // TODO: test logLocalRetentionBytes
    }

    /**
     * Test the property 'logRollJitterMs'
     */
    @Test
    public void logRollJitterMsTest() {
        // TODO: test logRollJitterMs
    }

    /**
     * Test the property 'transactionRemoveExpiredTransactionCleanupIntervalMs'
     */
    @Test
    public void transactionRemoveExpiredTransactionCleanupIntervalMsTest() {
        // TODO: test transactionRemoveExpiredTransactionCleanupIntervalMs
    }

    /**
     * Test the property 'defaultReplicationFactor'
     */
    @Test
    public void defaultReplicationFactorTest() {
        // TODO: test defaultReplicationFactor
    }

    /**
     * Test the property 'logRollMs'
     */
    @Test
    public void logRollMsTest() {
        // TODO: test logRollMs
    }

    /**
     * Test the property 'producerPurgatoryPurgeIntervalRequests'
     */
    @Test
    public void producerPurgatoryPurgeIntervalRequestsTest() {
        // TODO: test producerPurgatoryPurgeIntervalRequests
    }

    /**
     * Test the property 'logRetentionBytes'
     */
    @Test
    public void logRetentionBytesTest() {
        // TODO: test logRetentionBytes
    }

    /**
     * Test the property 'minInsyncReplicas'
     */
    @Test
    public void minInsyncReplicasTest() {
        // TODO: test minInsyncReplicas
    }

    /**
     * Test the property 'compressionType'
     */
    @Test
    public void compressionTypeTest() {
        // TODO: test compressionType
    }

    /**
     * Test the property 'logMessageTimestampDifferenceMaxMs'
     */
    @Test
    public void logMessageTimestampDifferenceMaxMsTest() {
        // TODO: test logMessageTimestampDifferenceMaxMs
    }

    /**
     * Test the property 'logLocalRetentionMs'
     */
    @Test
    public void logLocalRetentionMsTest() {
        // TODO: test logLocalRetentionMs
    }

    /**
     * Test the property 'logMessageDownconversionEnable'
     */
    @Test
    public void logMessageDownconversionEnableTest() {
        // TODO: test logMessageDownconversionEnable
    }

    /**
     * Test the property 'saslOauthbearerSubClaimName'
     */
    @Test
    public void saslOauthbearerSubClaimNameTest() {
        // TODO: test saslOauthbearerSubClaimName
    }

    /**
     * Test the property 'maxIncrementalFetchSessionCacheSlots'
     */
    @Test
    public void maxIncrementalFetchSessionCacheSlotsTest() {
        // TODO: test maxIncrementalFetchSessionCacheSlots
    }

    /**
     * Test the property 'logRetentionHours'
     */
    @Test
    public void logRetentionHoursTest() {
        // TODO: test logRetentionHours
    }

    /**
     * Test the property 'groupMinSessionTimeoutMs'
     */
    @Test
    public void groupMinSessionTimeoutMsTest() {
        // TODO: test groupMinSessionTimeoutMs
    }

    /**
     * Test the property 'socketRequestMaxBytes'
     */
    @Test
    public void socketRequestMaxBytesTest() {
        // TODO: test socketRequestMaxBytes
    }

    /**
     * Test the property 'logSegmentBytes'
     */
    @Test
    public void logSegmentBytesTest() {
        // TODO: test logSegmentBytes
    }

    /**
     * Test the property 'logCleanupAndCompaction'
     */
    @Test
    public void logCleanupAndCompactionTest() {
        // TODO: test logCleanupAndCompaction
    }

    /**
     * Test the property 'offsetsRetentionMinutes'
     */
    @Test
    public void offsetsRetentionMinutesTest() {
        // TODO: test offsetsRetentionMinutes
    }

    /**
     * Test the property 'logRetentionMs'
     */
    @Test
    public void logRetentionMsTest() {
        // TODO: test logRetentionMs
    }

}
