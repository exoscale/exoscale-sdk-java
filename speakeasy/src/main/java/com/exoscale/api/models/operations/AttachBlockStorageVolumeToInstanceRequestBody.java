/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.exoscale.api.models.operations;

import com.exoscale.api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;


public class AttachBlockStorageVolumeToInstanceRequestBody {

    /**
     * Target Instance
     */
    @JsonProperty("instance")
    private com.exoscale.api.models.components.InstanceTarget instance;

    public AttachBlockStorageVolumeToInstanceRequestBody(
            @JsonProperty("instance") com.exoscale.api.models.components.InstanceTarget instance) {
        Utils.checkNotNull(instance, "instance");
        this.instance = instance;
    }

    /**
     * Target Instance
     */
    public com.exoscale.api.models.components.InstanceTarget instance() {
        return instance;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * Target Instance
     */
    public AttachBlockStorageVolumeToInstanceRequestBody withInstance(com.exoscale.api.models.components.InstanceTarget instance) {
        Utils.checkNotNull(instance, "instance");
        this.instance = instance;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AttachBlockStorageVolumeToInstanceRequestBody other = (AttachBlockStorageVolumeToInstanceRequestBody) o;
        return 
            java.util.Objects.deepEquals(this.instance, other.instance);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            instance);
    }
    
    @Override
    public String toString() {
        return Utils.toString(AttachBlockStorageVolumeToInstanceRequestBody.class,
                "instance", instance);
    }
    
    public final static class Builder {
 
        private com.exoscale.api.models.components.InstanceTarget instance;  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * Target Instance
         */
        public Builder instance(com.exoscale.api.models.components.InstanceTarget instance) {
            Utils.checkNotNull(instance, "instance");
            this.instance = instance;
            return this;
        }
        
        public AttachBlockStorageVolumeToInstanceRequestBody build() {
            return new AttachBlockStorageVolumeToInstanceRequestBody(
                instance);
        }
    }
}

