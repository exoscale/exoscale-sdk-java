/*
 * Exoscale Public API
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@exoscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for AutovacuumSettings
 */
public class AutovacuumSettingsTest {
    private final AutovacuumSettings model = new AutovacuumSettings();

    /**
     * Model tests for AutovacuumSettings
     */
    @Test
    public void testAutovacuumSettings() {
        // TODO: test AutovacuumSettings
    }

    /**
     * Test the property 'logAutovacuumMinDuration'
     */
    @Test
    public void logAutovacuumMinDurationTest() {
        // TODO: test logAutovacuumMinDuration
    }

    /**
     * Test the property 'autovacuumVacuumCostLimit'
     */
    @Test
    public void autovacuumVacuumCostLimitTest() {
        // TODO: test autovacuumVacuumCostLimit
    }

    /**
     * Test the property 'autovacuumMaxWorkers'
     */
    @Test
    public void autovacuumMaxWorkersTest() {
        // TODO: test autovacuumMaxWorkers
    }

    /**
     * Test the property 'autovacuumVacuumThreshold'
     */
    @Test
    public void autovacuumVacuumThresholdTest() {
        // TODO: test autovacuumVacuumThreshold
    }

    /**
     * Test the property 'autovacuumNaptime'
     */
    @Test
    public void autovacuumNaptimeTest() {
        // TODO: test autovacuumNaptime
    }

    /**
     * Test the property 'autovacuumVacuumScaleFactor'
     */
    @Test
    public void autovacuumVacuumScaleFactorTest() {
        // TODO: test autovacuumVacuumScaleFactor
    }

    /**
     * Test the property 'autovacuumVacuumCostDelay'
     */
    @Test
    public void autovacuumVacuumCostDelayTest() {
        // TODO: test autovacuumVacuumCostDelay
    }

    /**
     * Test the property 'autovacuumAnalyzeScaleFactor'
     */
    @Test
    public void autovacuumAnalyzeScaleFactorTest() {
        // TODO: test autovacuumAnalyzeScaleFactor
    }

    /**
     * Test the property 'autovacuumAnalyzeThreshold'
     */
    @Test
    public void autovacuumAnalyzeThresholdTest() {
        // TODO: test autovacuumAnalyzeThreshold
    }

    /**
     * Test the property 'autovacuumFreezeMaxAge'
     */
    @Test
    public void autovacuumFreezeMaxAgeTest() {
        // TODO: test autovacuumFreezeMaxAge
    }

}
