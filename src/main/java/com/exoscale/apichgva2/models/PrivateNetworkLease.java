/*
 * ExoscalePublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.exoscale.apichgva2.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.UUID;

/**
 * This is a model class for PrivateNetworkLease type.
 */
public class PrivateNetworkLease {
    private String ip;
    private UUID instanceId;

    /**
     * Default constructor.
     */
    public PrivateNetworkLease() {
    }

    /**
     * Initialization constructor.
     * @param  ip  String value for ip.
     * @param  instanceId  UUID value for instanceId.
     */
    public PrivateNetworkLease(
            String ip,
            UUID instanceId) {
        this.ip = ip;
        this.instanceId = instanceId;
    }

    /**
     * Getter for Ip.
     * Private Network IP address
     * @return Returns the String
     */
    @JsonGetter("ip")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getIp() {
        return ip;
    }

    /**
     * Setter for Ip.
     * Private Network IP address
     * @param ip Value for String
     */
    @JsonSetter("ip")
    public void setIp(String ip) {
        this.ip = ip;
    }

    /**
     * Getter for InstanceId.
     * Attached instance ID
     * @return Returns the UUID
     */
    @JsonGetter("instance-id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public UUID getInstanceId() {
        return instanceId;
    }

    /**
     * Setter for InstanceId.
     * Attached instance ID
     * @param instanceId Value for UUID
     */
    @JsonSetter("instance-id")
    public void setInstanceId(UUID instanceId) {
        this.instanceId = instanceId;
    }

    /**
     * Converts this PrivateNetworkLease into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "PrivateNetworkLease [" + "ip=" + ip + ", instanceId=" + instanceId + "]";
    }

    /**
     * Builds a new {@link PrivateNetworkLease.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link PrivateNetworkLease.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .ip(getIp())
                .instanceId(getInstanceId());
        return builder;
    }

    /**
     * Class to build instances of {@link PrivateNetworkLease}.
     */
    public static class Builder {
        private String ip;
        private UUID instanceId;



        /**
         * Setter for ip.
         * @param  ip  String value for ip.
         * @return Builder
         */
        public Builder ip(String ip) {
            this.ip = ip;
            return this;
        }

        /**
         * Setter for instanceId.
         * @param  instanceId  UUID value for instanceId.
         * @return Builder
         */
        public Builder instanceId(UUID instanceId) {
            this.instanceId = instanceId;
            return this;
        }

        /**
         * Builds a new {@link PrivateNetworkLease} object using the set fields.
         * @return {@link PrivateNetworkLease}
         */
        public PrivateNetworkLease build() {
            return new PrivateNetworkLease(ip, instanceId);
        }
    }
}
