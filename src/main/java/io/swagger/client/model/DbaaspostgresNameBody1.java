/*
 * Exoscale Public API
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * OpenAPI spec version: 2.0.0
 * Contact: api@exoscale.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.client.model.DbaasPgTargetVersions;
import io.swagger.client.model.DbaasmysqlnameBackupschedule;
import io.swagger.client.model.DbaasmysqlnameIntegrations;
import io.swagger.client.model.DbaasmysqlnameMaintenance;
import io.swagger.client.model.DbaasmysqlnameMigration;
import io.swagger.client.model.EnumPgSynchronousReplication;
import io.swagger.client.model.EnumPgVariant;
import io.swagger.client.model.JsonSchemaPg;
import io.swagger.client.model.JsonSchemaPgbouncer;
import io.swagger.client.model.JsonSchemaPglookout;
import io.swagger.client.model.JsonSchemaTimescaledb;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * DbaaspostgresNameBody1
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-03-08T17:23:40.261901+01:00[Europe/Vienna]")

public class DbaaspostgresNameBody1 {
  @JsonProperty("pgbouncer-settings")
  private JsonSchemaPgbouncer pgbouncerSettings = null;

  @JsonProperty("backup-schedule")
  private DbaasmysqlnameBackupschedule backupSchedule = null;

  @JsonProperty("variant")
  private EnumPgVariant variant = null;

  @JsonProperty("integrations")
  private List<DbaasmysqlnameIntegrations> integrations = null;

  @JsonProperty("timescaledb-settings")
  private JsonSchemaTimescaledb timescaledbSettings = null;

  @JsonProperty("ip-filter")
  private List<String> ipFilter = null;

  @JsonProperty("termination-protection")
  private Boolean terminationProtection = null;

  @JsonProperty("fork-from-service")
  private String forkFromService = null;

  @JsonProperty("synchronous-replication")
  private EnumPgSynchronousReplication synchronousReplication = null;

  @JsonProperty("recovery-backup-time")
  private String recoveryBackupTime = null;

  @JsonProperty("pglookout-settings")
  private JsonSchemaPglookout pglookoutSettings = null;

  @JsonProperty("maintenance")
  private DbaasmysqlnameMaintenance maintenance = null;

  @JsonProperty("admin-username")
  private String adminUsername = null;

  @JsonProperty("version")
  private DbaasPgTargetVersions version = null;

  @JsonProperty("plan")
  private String plan = null;

  @JsonProperty("work-mem")
  private Long workMem = null;

  @JsonProperty("shared-buffers-percentage")
  private Long sharedBuffersPercentage = null;

  @JsonProperty("pg-settings")
  private JsonSchemaPg pgSettings = null;

  @JsonProperty("admin-password")
  private String adminPassword = null;

  @JsonProperty("migration")
  private DbaasmysqlnameMigration migration = null;

  public DbaaspostgresNameBody1 pgbouncerSettings(JsonSchemaPgbouncer pgbouncerSettings) {
    this.pgbouncerSettings = pgbouncerSettings;
    return this;
  }

   /**
   * Get pgbouncerSettings
   * @return pgbouncerSettings
  **/
  @Schema(description = "")
  public JsonSchemaPgbouncer getPgbouncerSettings() {
    return pgbouncerSettings;
  }

  public void setPgbouncerSettings(JsonSchemaPgbouncer pgbouncerSettings) {
    this.pgbouncerSettings = pgbouncerSettings;
  }

  public DbaaspostgresNameBody1 backupSchedule(DbaasmysqlnameBackupschedule backupSchedule) {
    this.backupSchedule = backupSchedule;
    return this;
  }

   /**
   * Get backupSchedule
   * @return backupSchedule
  **/
  @Schema(description = "")
  public DbaasmysqlnameBackupschedule getBackupSchedule() {
    return backupSchedule;
  }

  public void setBackupSchedule(DbaasmysqlnameBackupschedule backupSchedule) {
    this.backupSchedule = backupSchedule;
  }

  public DbaaspostgresNameBody1 variant(EnumPgVariant variant) {
    this.variant = variant;
    return this;
  }

   /**
   * Get variant
   * @return variant
  **/
  @Schema(description = "")
  public EnumPgVariant getVariant() {
    return variant;
  }

  public void setVariant(EnumPgVariant variant) {
    this.variant = variant;
  }

  public DbaaspostgresNameBody1 integrations(List<DbaasmysqlnameIntegrations> integrations) {
    this.integrations = integrations;
    return this;
  }

  public DbaaspostgresNameBody1 addIntegrationsItem(DbaasmysqlnameIntegrations integrationsItem) {
    if (this.integrations == null) {
      this.integrations = new ArrayList<>();
    }
    this.integrations.add(integrationsItem);
    return this;
  }

   /**
   * Service integrations to be enabled when creating the service.
   * @return integrations
  **/
  @Schema(description = "Service integrations to be enabled when creating the service.")
  public List<DbaasmysqlnameIntegrations> getIntegrations() {
    return integrations;
  }

  public void setIntegrations(List<DbaasmysqlnameIntegrations> integrations) {
    this.integrations = integrations;
  }

  public DbaaspostgresNameBody1 timescaledbSettings(JsonSchemaTimescaledb timescaledbSettings) {
    this.timescaledbSettings = timescaledbSettings;
    return this;
  }

   /**
   * Get timescaledbSettings
   * @return timescaledbSettings
  **/
  @Schema(description = "")
  public JsonSchemaTimescaledb getTimescaledbSettings() {
    return timescaledbSettings;
  }

  public void setTimescaledbSettings(JsonSchemaTimescaledb timescaledbSettings) {
    this.timescaledbSettings = timescaledbSettings;
  }

  public DbaaspostgresNameBody1 ipFilter(List<String> ipFilter) {
    this.ipFilter = ipFilter;
    return this;
  }

  public DbaaspostgresNameBody1 addIpFilterItem(String ipFilterItem) {
    if (this.ipFilter == null) {
      this.ipFilter = new ArrayList<>();
    }
    this.ipFilter.add(ipFilterItem);
    return this;
  }

   /**
   * Allow incoming connections from CIDR address block, e.g. &#x27;10.20.0.0/16&#x27;
   * @return ipFilter
  **/
  @Schema(description = "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'")
  public List<String> getIpFilter() {
    return ipFilter;
  }

  public void setIpFilter(List<String> ipFilter) {
    this.ipFilter = ipFilter;
  }

  public DbaaspostgresNameBody1 terminationProtection(Boolean terminationProtection) {
    this.terminationProtection = terminationProtection;
    return this;
  }

   /**
   * Service is protected against termination and powering off
   * @return terminationProtection
  **/
  @Schema(description = "Service is protected against termination and powering off")
  public Boolean isTerminationProtection() {
    return terminationProtection;
  }

  public void setTerminationProtection(Boolean terminationProtection) {
    this.terminationProtection = terminationProtection;
  }

  public DbaaspostgresNameBody1 forkFromService(String forkFromService) {
    this.forkFromService = forkFromService;
    return this;
  }

   /**
   * Get forkFromService
   * @return forkFromService
  **/
  @Schema(description = "")
  public String getForkFromService() {
    return forkFromService;
  }

  public void setForkFromService(String forkFromService) {
    this.forkFromService = forkFromService;
  }

  public DbaaspostgresNameBody1 synchronousReplication(EnumPgSynchronousReplication synchronousReplication) {
    this.synchronousReplication = synchronousReplication;
    return this;
  }

   /**
   * Get synchronousReplication
   * @return synchronousReplication
  **/
  @Schema(description = "")
  public EnumPgSynchronousReplication getSynchronousReplication() {
    return synchronousReplication;
  }

  public void setSynchronousReplication(EnumPgSynchronousReplication synchronousReplication) {
    this.synchronousReplication = synchronousReplication;
  }

  public DbaaspostgresNameBody1 recoveryBackupTime(String recoveryBackupTime) {
    this.recoveryBackupTime = recoveryBackupTime;
    return this;
  }

   /**
   * ISO time of a backup to recover from for services that support arbitrary times
   * @return recoveryBackupTime
  **/
  @Schema(description = "ISO time of a backup to recover from for services that support arbitrary times")
  public String getRecoveryBackupTime() {
    return recoveryBackupTime;
  }

  public void setRecoveryBackupTime(String recoveryBackupTime) {
    this.recoveryBackupTime = recoveryBackupTime;
  }

  public DbaaspostgresNameBody1 pglookoutSettings(JsonSchemaPglookout pglookoutSettings) {
    this.pglookoutSettings = pglookoutSettings;
    return this;
  }

   /**
   * Get pglookoutSettings
   * @return pglookoutSettings
  **/
  @Schema(description = "")
  public JsonSchemaPglookout getPglookoutSettings() {
    return pglookoutSettings;
  }

  public void setPglookoutSettings(JsonSchemaPglookout pglookoutSettings) {
    this.pglookoutSettings = pglookoutSettings;
  }

  public DbaaspostgresNameBody1 maintenance(DbaasmysqlnameMaintenance maintenance) {
    this.maintenance = maintenance;
    return this;
  }

   /**
   * Get maintenance
   * @return maintenance
  **/
  @Schema(description = "")
  public DbaasmysqlnameMaintenance getMaintenance() {
    return maintenance;
  }

  public void setMaintenance(DbaasmysqlnameMaintenance maintenance) {
    this.maintenance = maintenance;
  }

  public DbaaspostgresNameBody1 adminUsername(String adminUsername) {
    this.adminUsername = adminUsername;
    return this;
  }

   /**
   * Custom username for admin user. This must be set only when a new service is being created.
   * @return adminUsername
  **/
  @Schema(description = "Custom username for admin user. This must be set only when a new service is being created.")
  public String getAdminUsername() {
    return adminUsername;
  }

  public void setAdminUsername(String adminUsername) {
    this.adminUsername = adminUsername;
  }

  public DbaaspostgresNameBody1 version(DbaasPgTargetVersions version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @Schema(description = "")
  public DbaasPgTargetVersions getVersion() {
    return version;
  }

  public void setVersion(DbaasPgTargetVersions version) {
    this.version = version;
  }

  public DbaaspostgresNameBody1 plan(String plan) {
    this.plan = plan;
    return this;
  }

   /**
   * Subscription plan
   * @return plan
  **/
  @Schema(required = true, description = "Subscription plan")
  public String getPlan() {
    return plan;
  }

  public void setPlan(String plan) {
    this.plan = plan;
  }

  public DbaaspostgresNameBody1 workMem(Long workMem) {
    this.workMem = workMem;
    return this;
  }

   /**
   * Sets the maximum amount of memory to be used by a query operation (such as a sort or hash table) before writing to temporary disk files, in MB. Default is 1MB + 0.075% of total RAM (up to 32MB).
   * minimum: 1
   * maximum: 1024
   * @return workMem
  **/
  @Schema(description = "Sets the maximum amount of memory to be used by a query operation (such as a sort or hash table) before writing to temporary disk files, in MB. Default is 1MB + 0.075% of total RAM (up to 32MB).")
  public Long getWorkMem() {
    return workMem;
  }

  public void setWorkMem(Long workMem) {
    this.workMem = workMem;
  }

  public DbaaspostgresNameBody1 sharedBuffersPercentage(Long sharedBuffersPercentage) {
    this.sharedBuffersPercentage = sharedBuffersPercentage;
    return this;
  }

   /**
   * Percentage of total RAM that the database server uses for shared memory buffers. Valid range is 20-60 (float), which corresponds to 20% - 60%. This setting adjusts the shared_buffers configuration value.
   * minimum: 20
   * maximum: 60
   * @return sharedBuffersPercentage
  **/
  @Schema(description = "Percentage of total RAM that the database server uses for shared memory buffers. Valid range is 20-60 (float), which corresponds to 20% - 60%. This setting adjusts the shared_buffers configuration value.")
  public Long getSharedBuffersPercentage() {
    return sharedBuffersPercentage;
  }

  public void setSharedBuffersPercentage(Long sharedBuffersPercentage) {
    this.sharedBuffersPercentage = sharedBuffersPercentage;
  }

  public DbaaspostgresNameBody1 pgSettings(JsonSchemaPg pgSettings) {
    this.pgSettings = pgSettings;
    return this;
  }

   /**
   * Get pgSettings
   * @return pgSettings
  **/
  @Schema(description = "")
  public JsonSchemaPg getPgSettings() {
    return pgSettings;
  }

  public void setPgSettings(JsonSchemaPg pgSettings) {
    this.pgSettings = pgSettings;
  }

  public DbaaspostgresNameBody1 adminPassword(String adminPassword) {
    this.adminPassword = adminPassword;
    return this;
  }

   /**
   * Custom password for admin user. Defaults to random string. This must be set only when a new service is being created.
   * @return adminPassword
  **/
  @Schema(description = "Custom password for admin user. Defaults to random string. This must be set only when a new service is being created.")
  public String getAdminPassword() {
    return adminPassword;
  }

  public void setAdminPassword(String adminPassword) {
    this.adminPassword = adminPassword;
  }

  public DbaaspostgresNameBody1 migration(DbaasmysqlnameMigration migration) {
    this.migration = migration;
    return this;
  }

   /**
   * Get migration
   * @return migration
  **/
  @Schema(description = "")
  public DbaasmysqlnameMigration getMigration() {
    return migration;
  }

  public void setMigration(DbaasmysqlnameMigration migration) {
    this.migration = migration;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DbaaspostgresNameBody1 dbaaspostgresNameBody1 = (DbaaspostgresNameBody1) o;
    return Objects.equals(this.pgbouncerSettings, dbaaspostgresNameBody1.pgbouncerSettings) &&
        Objects.equals(this.backupSchedule, dbaaspostgresNameBody1.backupSchedule) &&
        Objects.equals(this.variant, dbaaspostgresNameBody1.variant) &&
        Objects.equals(this.integrations, dbaaspostgresNameBody1.integrations) &&
        Objects.equals(this.timescaledbSettings, dbaaspostgresNameBody1.timescaledbSettings) &&
        Objects.equals(this.ipFilter, dbaaspostgresNameBody1.ipFilter) &&
        Objects.equals(this.terminationProtection, dbaaspostgresNameBody1.terminationProtection) &&
        Objects.equals(this.forkFromService, dbaaspostgresNameBody1.forkFromService) &&
        Objects.equals(this.synchronousReplication, dbaaspostgresNameBody1.synchronousReplication) &&
        Objects.equals(this.recoveryBackupTime, dbaaspostgresNameBody1.recoveryBackupTime) &&
        Objects.equals(this.pglookoutSettings, dbaaspostgresNameBody1.pglookoutSettings) &&
        Objects.equals(this.maintenance, dbaaspostgresNameBody1.maintenance) &&
        Objects.equals(this.adminUsername, dbaaspostgresNameBody1.adminUsername) &&
        Objects.equals(this.version, dbaaspostgresNameBody1.version) &&
        Objects.equals(this.plan, dbaaspostgresNameBody1.plan) &&
        Objects.equals(this.workMem, dbaaspostgresNameBody1.workMem) &&
        Objects.equals(this.sharedBuffersPercentage, dbaaspostgresNameBody1.sharedBuffersPercentage) &&
        Objects.equals(this.pgSettings, dbaaspostgresNameBody1.pgSettings) &&
        Objects.equals(this.adminPassword, dbaaspostgresNameBody1.adminPassword) &&
        Objects.equals(this.migration, dbaaspostgresNameBody1.migration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pgbouncerSettings, backupSchedule, variant, integrations, timescaledbSettings, ipFilter, terminationProtection, forkFromService, synchronousReplication, recoveryBackupTime, pglookoutSettings, maintenance, adminUsername, version, plan, workMem, sharedBuffersPercentage, pgSettings, adminPassword, migration);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DbaaspostgresNameBody1 {\n");
    
    sb.append("    pgbouncerSettings: ").append(toIndentedString(pgbouncerSettings)).append("\n");
    sb.append("    backupSchedule: ").append(toIndentedString(backupSchedule)).append("\n");
    sb.append("    variant: ").append(toIndentedString(variant)).append("\n");
    sb.append("    integrations: ").append(toIndentedString(integrations)).append("\n");
    sb.append("    timescaledbSettings: ").append(toIndentedString(timescaledbSettings)).append("\n");
    sb.append("    ipFilter: ").append(toIndentedString(ipFilter)).append("\n");
    sb.append("    terminationProtection: ").append(toIndentedString(terminationProtection)).append("\n");
    sb.append("    forkFromService: ").append(toIndentedString(forkFromService)).append("\n");
    sb.append("    synchronousReplication: ").append(toIndentedString(synchronousReplication)).append("\n");
    sb.append("    recoveryBackupTime: ").append(toIndentedString(recoveryBackupTime)).append("\n");
    sb.append("    pglookoutSettings: ").append(toIndentedString(pglookoutSettings)).append("\n");
    sb.append("    maintenance: ").append(toIndentedString(maintenance)).append("\n");
    sb.append("    adminUsername: ").append(toIndentedString(adminUsername)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    plan: ").append(toIndentedString(plan)).append("\n");
    sb.append("    workMem: ").append(toIndentedString(workMem)).append("\n");
    sb.append("    sharedBuffersPercentage: ").append(toIndentedString(sharedBuffersPercentage)).append("\n");
    sb.append("    pgSettings: ").append(toIndentedString(pgSettings)).append("\n");
    sb.append("    adminPassword: ").append(toIndentedString(adminPassword)).append("\n");
    sb.append("    migration: ").append(toIndentedString(migration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
