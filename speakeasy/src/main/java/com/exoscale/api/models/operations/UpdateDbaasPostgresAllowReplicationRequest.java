/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.exoscale.api.models.operations;

import com.exoscale.api.utils.SpeakeasyMetadata;
import com.exoscale.api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;


public class UpdateDbaasPostgresAllowReplicationRequest {

    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=service-name")
    private String serviceName;

    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=username")
    private String username;

    @SpeakeasyMetadata("request:mediaType=application/json")
    private UpdateDbaasPostgresAllowReplicationRequestBody requestBody;

    public UpdateDbaasPostgresAllowReplicationRequest(
            String serviceName,
            String username,
            UpdateDbaasPostgresAllowReplicationRequestBody requestBody) {
        Utils.checkNotNull(serviceName, "serviceName");
        Utils.checkNotNull(username, "username");
        Utils.checkNotNull(requestBody, "requestBody");
        this.serviceName = serviceName;
        this.username = username;
        this.requestBody = requestBody;
    }

    public String serviceName() {
        return serviceName;
    }

    public String username() {
        return username;
    }

    public UpdateDbaasPostgresAllowReplicationRequestBody requestBody() {
        return requestBody;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public UpdateDbaasPostgresAllowReplicationRequest withServiceName(String serviceName) {
        Utils.checkNotNull(serviceName, "serviceName");
        this.serviceName = serviceName;
        return this;
    }

    public UpdateDbaasPostgresAllowReplicationRequest withUsername(String username) {
        Utils.checkNotNull(username, "username");
        this.username = username;
        return this;
    }

    public UpdateDbaasPostgresAllowReplicationRequest withRequestBody(UpdateDbaasPostgresAllowReplicationRequestBody requestBody) {
        Utils.checkNotNull(requestBody, "requestBody");
        this.requestBody = requestBody;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        UpdateDbaasPostgresAllowReplicationRequest other = (UpdateDbaasPostgresAllowReplicationRequest) o;
        return 
            java.util.Objects.deepEquals(this.serviceName, other.serviceName) &&
            java.util.Objects.deepEquals(this.username, other.username) &&
            java.util.Objects.deepEquals(this.requestBody, other.requestBody);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            serviceName,
            username,
            requestBody);
    }
    
    @Override
    public String toString() {
        return Utils.toString(UpdateDbaasPostgresAllowReplicationRequest.class,
                "serviceName", serviceName,
                "username", username,
                "requestBody", requestBody);
    }
    
    public final static class Builder {
 
        private String serviceName;
 
        private String username;
 
        private UpdateDbaasPostgresAllowReplicationRequestBody requestBody;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder serviceName(String serviceName) {
            Utils.checkNotNull(serviceName, "serviceName");
            this.serviceName = serviceName;
            return this;
        }

        public Builder username(String username) {
            Utils.checkNotNull(username, "username");
            this.username = username;
            return this;
        }

        public Builder requestBody(UpdateDbaasPostgresAllowReplicationRequestBody requestBody) {
            Utils.checkNotNull(requestBody, "requestBody");
            this.requestBody = requestBody;
            return this;
        }
        
        public UpdateDbaasPostgresAllowReplicationRequest build() {
            return new UpdateDbaasPostgresAllowReplicationRequest(
                serviceName,
                username,
                requestBody);
        }
    }
}

