/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.exoscale.api.models.operations;

import com.exoscale.api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Optional;

/**
 * ListDbaasServicesResponseBody - 200
 */

public class ListDbaasServicesResponseBody {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dbaas-services")
    private Optional<? extends java.util.List<com.exoscale.api.models.components.DbaasServiceCommon>> dbaasServices;

    public ListDbaasServicesResponseBody(
            @JsonProperty("dbaas-services") Optional<? extends java.util.List<com.exoscale.api.models.components.DbaasServiceCommon>> dbaasServices) {
        Utils.checkNotNull(dbaasServices, "dbaasServices");
        this.dbaasServices = dbaasServices;
    }

    public Optional<? extends java.util.List<com.exoscale.api.models.components.DbaasServiceCommon>> dbaasServices() {
        return dbaasServices;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public ListDbaasServicesResponseBody withDbaasServices(java.util.List<com.exoscale.api.models.components.DbaasServiceCommon> dbaasServices) {
        Utils.checkNotNull(dbaasServices, "dbaasServices");
        this.dbaasServices = Optional.ofNullable(dbaasServices);
        return this;
    }

    public ListDbaasServicesResponseBody withDbaasServices(Optional<? extends java.util.List<com.exoscale.api.models.components.DbaasServiceCommon>> dbaasServices) {
        Utils.checkNotNull(dbaasServices, "dbaasServices");
        this.dbaasServices = dbaasServices;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ListDbaasServicesResponseBody other = (ListDbaasServicesResponseBody) o;
        return 
            java.util.Objects.deepEquals(this.dbaasServices, other.dbaasServices);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            dbaasServices);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ListDbaasServicesResponseBody.class,
                "dbaasServices", dbaasServices);
    }
    
    public final static class Builder {
 
        private Optional<? extends java.util.List<com.exoscale.api.models.components.DbaasServiceCommon>> dbaasServices = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder dbaasServices(java.util.List<com.exoscale.api.models.components.DbaasServiceCommon> dbaasServices) {
            Utils.checkNotNull(dbaasServices, "dbaasServices");
            this.dbaasServices = Optional.ofNullable(dbaasServices);
            return this;
        }

        public Builder dbaasServices(Optional<? extends java.util.List<com.exoscale.api.models.components.DbaasServiceCommon>> dbaasServices) {
            Utils.checkNotNull(dbaasServices, "dbaasServices");
            this.dbaasServices = dbaasServices;
            return this;
        }
        
        public ListDbaasServicesResponseBody build() {
            return new ListDbaasServicesResponseBody(
                dbaasServices);
        }
    }
}

