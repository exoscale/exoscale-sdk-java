/*
 * ExoscalePublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.exoscale.apichgva2.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for IamServicePolicy type.
 */
public class IamServicePolicy {
    private Type4Enum type;
    private List<IamServicePolicyRule> rules;

    /**
     * Default constructor.
     */
    public IamServicePolicy() {
    }

    /**
     * Initialization constructor.
     * @param  type  Type4Enum value for type.
     * @param  rules  List of IamServicePolicyRule value for rules.
     */
    public IamServicePolicy(
            Type4Enum type,
            List<IamServicePolicyRule> rules) {
        this.type = type;
        this.rules = rules;
    }

    /**
     * Getter for Type.
     * @return Returns the Type4Enum
     */
    @JsonGetter("type")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Type4Enum getType() {
        return type;
    }

    /**
     * Setter for Type.
     * @param type Value for Type4Enum
     */
    @JsonSetter("type")
    public void setType(Type4Enum type) {
        this.type = type;
    }

    /**
     * Getter for Rules.
     * @return Returns the List of IamServicePolicyRule
     */
    @JsonGetter("rules")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<IamServicePolicyRule> getRules() {
        return rules;
    }

    /**
     * Setter for Rules.
     * @param rules Value for List of IamServicePolicyRule
     */
    @JsonSetter("rules")
    public void setRules(List<IamServicePolicyRule> rules) {
        this.rules = rules;
    }

    /**
     * Converts this IamServicePolicy into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "IamServicePolicy [" + "type=" + type + ", rules=" + rules + "]";
    }

    /**
     * Builds a new {@link IamServicePolicy.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link IamServicePolicy.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .type(getType())
                .rules(getRules());
        return builder;
    }

    /**
     * Class to build instances of {@link IamServicePolicy}.
     */
    public static class Builder {
        private Type4Enum type;
        private List<IamServicePolicyRule> rules;



        /**
         * Setter for type.
         * @param  type  Type4Enum value for type.
         * @return Builder
         */
        public Builder type(Type4Enum type) {
            this.type = type;
            return this;
        }

        /**
         * Setter for rules.
         * @param  rules  List of IamServicePolicyRule value for rules.
         * @return Builder
         */
        public Builder rules(List<IamServicePolicyRule> rules) {
            this.rules = rules;
            return this;
        }

        /**
         * Builds a new {@link IamServicePolicy} object using the set fields.
         * @return {@link IamServicePolicy}
         */
        public IamServicePolicy build() {
            return new IamServicePolicy(type, rules);
        }
    }
}
