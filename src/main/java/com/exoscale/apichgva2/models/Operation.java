/*
 * ExoscalePublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.exoscale.apichgva2.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.UUID;

/**
 * This is a model class for Operation type.
 */
public class Operation {
    private UUID id;
    private ReasonEnum reason;
    private Reference reference;
    private String message;
    private State5Enum state;

    /**
     * Default constructor.
     */
    public Operation() {
    }

    /**
     * Initialization constructor.
     * @param  id  UUID value for id.
     * @param  reason  ReasonEnum value for reason.
     * @param  reference  Reference value for reference.
     * @param  message  String value for message.
     * @param  state  State5Enum value for state.
     */
    public Operation(
            UUID id,
            ReasonEnum reason,
            Reference reference,
            String message,
            State5Enum state) {
        this.id = id;
        this.reason = reason;
        this.reference = reference;
        this.message = message;
        this.state = state;
    }

    /**
     * Getter for Id.
     * Operation ID
     * @return Returns the UUID
     */
    @JsonGetter("id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public UUID getId() {
        return id;
    }

    /**
     * Setter for Id.
     * Operation ID
     * @param id Value for UUID
     */
    @JsonSetter("id")
    public void setId(UUID id) {
        this.id = id;
    }

    /**
     * Getter for Reason.
     * Operation failure reason
     * @return Returns the ReasonEnum
     */
    @JsonGetter("reason")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public ReasonEnum getReason() {
        return reason;
    }

    /**
     * Setter for Reason.
     * Operation failure reason
     * @param reason Value for ReasonEnum
     */
    @JsonSetter("reason")
    public void setReason(ReasonEnum reason) {
        this.reason = reason;
    }

    /**
     * Getter for Reference.
     * Related resource reference
     * @return Returns the Reference
     */
    @JsonGetter("reference")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Reference getReference() {
        return reference;
    }

    /**
     * Setter for Reference.
     * Related resource reference
     * @param reference Value for Reference
     */
    @JsonSetter("reference")
    public void setReference(Reference reference) {
        this.reference = reference;
    }

    /**
     * Getter for Message.
     * Operation message
     * @return Returns the String
     */
    @JsonGetter("message")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getMessage() {
        return message;
    }

    /**
     * Setter for Message.
     * Operation message
     * @param message Value for String
     */
    @JsonSetter("message")
    public void setMessage(String message) {
        this.message = message;
    }

    /**
     * Getter for State.
     * Operation status
     * @return Returns the State5Enum
     */
    @JsonGetter("state")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public State5Enum getState() {
        return state;
    }

    /**
     * Setter for State.
     * Operation status
     * @param state Value for State5Enum
     */
    @JsonSetter("state")
    public void setState(State5Enum state) {
        this.state = state;
    }

    /**
     * Converts this Operation into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Operation [" + "id=" + id + ", reason=" + reason + ", reference=" + reference
                + ", message=" + message + ", state=" + state + "]";
    }

    /**
     * Builds a new {@link Operation.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Operation.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .id(getId())
                .reason(getReason())
                .reference(getReference())
                .message(getMessage())
                .state(getState());
        return builder;
    }

    /**
     * Class to build instances of {@link Operation}.
     */
    public static class Builder {
        private UUID id;
        private ReasonEnum reason;
        private Reference reference;
        private String message;
        private State5Enum state;



        /**
         * Setter for id.
         * @param  id  UUID value for id.
         * @return Builder
         */
        public Builder id(UUID id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for reason.
         * @param  reason  ReasonEnum value for reason.
         * @return Builder
         */
        public Builder reason(ReasonEnum reason) {
            this.reason = reason;
            return this;
        }

        /**
         * Setter for reference.
         * @param  reference  Reference value for reference.
         * @return Builder
         */
        public Builder reference(Reference reference) {
            this.reference = reference;
            return this;
        }

        /**
         * Setter for message.
         * @param  message  String value for message.
         * @return Builder
         */
        public Builder message(String message) {
            this.message = message;
            return this;
        }

        /**
         * Setter for state.
         * @param  state  State5Enum value for state.
         * @return Builder
         */
        public Builder state(State5Enum state) {
            this.state = state;
            return this;
        }

        /**
         * Builds a new {@link Operation} object using the set fields.
         * @return {@link Operation}
         */
        public Operation build() {
            return new Operation(id, reason, reference, message, state);
        }
    }
}
