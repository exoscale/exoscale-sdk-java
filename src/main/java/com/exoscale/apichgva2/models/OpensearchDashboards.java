/*
 * ExoscalePublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.exoscale.apichgva2.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for OpensearchDashboards type.
 */
public class OpensearchDashboards {
    private Long opensearchRequestTimeout;
    private Boolean enabled;
    private Long maxOldSpaceSize;

    /**
     * Default constructor.
     */
    public OpensearchDashboards() {
    }

    /**
     * Initialization constructor.
     * @param  opensearchRequestTimeout  Long value for opensearchRequestTimeout.
     * @param  enabled  Boolean value for enabled.
     * @param  maxOldSpaceSize  Long value for maxOldSpaceSize.
     */
    public OpensearchDashboards(
            Long opensearchRequestTimeout,
            Boolean enabled,
            Long maxOldSpaceSize) {
        this.opensearchRequestTimeout = opensearchRequestTimeout;
        this.enabled = enabled;
        this.maxOldSpaceSize = maxOldSpaceSize;
    }

    /**
     * Getter for OpensearchRequestTimeout.
     * Timeout in milliseconds for requests made by OpenSearch Dashboards towards OpenSearch
     * (default: 30000)
     * @return Returns the Long
     */
    @JsonGetter("opensearch-request-timeout")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Long getOpensearchRequestTimeout() {
        return opensearchRequestTimeout;
    }

    /**
     * Setter for OpensearchRequestTimeout.
     * Timeout in milliseconds for requests made by OpenSearch Dashboards towards OpenSearch
     * (default: 30000)
     * @param opensearchRequestTimeout Value for Long
     */
    @JsonSetter("opensearch-request-timeout")
    public void setOpensearchRequestTimeout(Long opensearchRequestTimeout) {
        this.opensearchRequestTimeout = opensearchRequestTimeout;
    }

    /**
     * Getter for Enabled.
     * Enable or disable OpenSearch Dashboards (default: true)
     * @return Returns the Boolean
     */
    @JsonGetter("enabled")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getEnabled() {
        return enabled;
    }

    /**
     * Setter for Enabled.
     * Enable or disable OpenSearch Dashboards (default: true)
     * @param enabled Value for Boolean
     */
    @JsonSetter("enabled")
    public void setEnabled(Boolean enabled) {
        this.enabled = enabled;
    }

    /**
     * Getter for MaxOldSpaceSize.
     * Limits the maximum amount of memory (in MiB) the OpenSearch Dashboards process can use. This
     * sets the max_old_space_size option of the nodejs running the OpenSearch Dashboards. Note: the
     * memory reserved by OpenSearch Dashboards is not available for OpenSearch. (default: 128)
     * @return Returns the Long
     */
    @JsonGetter("max-old-space-size")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Long getMaxOldSpaceSize() {
        return maxOldSpaceSize;
    }

    /**
     * Setter for MaxOldSpaceSize.
     * Limits the maximum amount of memory (in MiB) the OpenSearch Dashboards process can use. This
     * sets the max_old_space_size option of the nodejs running the OpenSearch Dashboards. Note: the
     * memory reserved by OpenSearch Dashboards is not available for OpenSearch. (default: 128)
     * @param maxOldSpaceSize Value for Long
     */
    @JsonSetter("max-old-space-size")
    public void setMaxOldSpaceSize(Long maxOldSpaceSize) {
        this.maxOldSpaceSize = maxOldSpaceSize;
    }

    /**
     * Converts this OpensearchDashboards into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "OpensearchDashboards [" + "opensearchRequestTimeout=" + opensearchRequestTimeout
                + ", enabled=" + enabled + ", maxOldSpaceSize=" + maxOldSpaceSize + "]";
    }

    /**
     * Builds a new {@link OpensearchDashboards.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link OpensearchDashboards.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .opensearchRequestTimeout(getOpensearchRequestTimeout())
                .enabled(getEnabled())
                .maxOldSpaceSize(getMaxOldSpaceSize());
        return builder;
    }

    /**
     * Class to build instances of {@link OpensearchDashboards}.
     */
    public static class Builder {
        private Long opensearchRequestTimeout;
        private Boolean enabled;
        private Long maxOldSpaceSize;



        /**
         * Setter for opensearchRequestTimeout.
         * @param  opensearchRequestTimeout  Long value for opensearchRequestTimeout.
         * @return Builder
         */
        public Builder opensearchRequestTimeout(Long opensearchRequestTimeout) {
            this.opensearchRequestTimeout = opensearchRequestTimeout;
            return this;
        }

        /**
         * Setter for enabled.
         * @param  enabled  Boolean value for enabled.
         * @return Builder
         */
        public Builder enabled(Boolean enabled) {
            this.enabled = enabled;
            return this;
        }

        /**
         * Setter for maxOldSpaceSize.
         * @param  maxOldSpaceSize  Long value for maxOldSpaceSize.
         * @return Builder
         */
        public Builder maxOldSpaceSize(Long maxOldSpaceSize) {
            this.maxOldSpaceSize = maxOldSpaceSize;
            return this;
        }

        /**
         * Builds a new {@link OpensearchDashboards} object using the set fields.
         * @return {@link OpensearchDashboards}
         */
        public OpensearchDashboards build() {
            return new OpensearchDashboards(opensearchRequestTimeout, enabled, maxOldSpaceSize);
        }
    }
}
