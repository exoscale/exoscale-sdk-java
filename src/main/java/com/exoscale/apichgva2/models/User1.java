/*
 * ExoscalePublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.exoscale.apichgva2.models;

import com.exoscale.apichgva2.DateTimeHelper;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.LocalDateTime;

/**
 * This is a model class for User1 type.
 */
public class User1 {
    private String type;
    private String username;
    private String password;
    private String accessCert;
    private LocalDateTime accessCertExpiry;
    private String accessKey;

    /**
     * Default constructor.
     */
    public User1() {
    }

    /**
     * Initialization constructor.
     * @param  type  String value for type.
     * @param  username  String value for username.
     * @param  password  String value for password.
     * @param  accessCert  String value for accessCert.
     * @param  accessCertExpiry  LocalDateTime value for accessCertExpiry.
     * @param  accessKey  String value for accessKey.
     */
    public User1(
            String type,
            String username,
            String password,
            String accessCert,
            LocalDateTime accessCertExpiry,
            String accessKey) {
        this.type = type;
        this.username = username;
        this.password = password;
        this.accessCert = accessCert;
        this.accessCertExpiry = accessCertExpiry;
        this.accessKey = accessKey;
    }

    /**
     * Getter for Type.
     * @return Returns the String
     */
    @JsonGetter("type")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getType() {
        return type;
    }

    /**
     * Setter for Type.
     * @param type Value for String
     */
    @JsonSetter("type")
    public void setType(String type) {
        this.type = type;
    }

    /**
     * Getter for Username.
     * @return Returns the String
     */
    @JsonGetter("username")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getUsername() {
        return username;
    }

    /**
     * Setter for Username.
     * @param username Value for String
     */
    @JsonSetter("username")
    public void setUsername(String username) {
        this.username = username;
    }

    /**
     * Getter for Password.
     * @return Returns the String
     */
    @JsonGetter("password")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPassword() {
        return password;
    }

    /**
     * Setter for Password.
     * @param password Value for String
     */
    @JsonSetter("password")
    public void setPassword(String password) {
        this.password = password;
    }

    /**
     * Getter for AccessCert.
     * @return Returns the String
     */
    @JsonGetter("access-cert")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAccessCert() {
        return accessCert;
    }

    /**
     * Setter for AccessCert.
     * @param accessCert Value for String
     */
    @JsonSetter("access-cert")
    public void setAccessCert(String accessCert) {
        this.accessCert = accessCert;
    }

    /**
     * Getter for AccessCertExpiry.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("access-cert-expiry")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getAccessCertExpiry() {
        return accessCertExpiry;
    }

    /**
     * Setter for AccessCertExpiry.
     * @param accessCertExpiry Value for LocalDateTime
     */
    @JsonSetter("access-cert-expiry")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setAccessCertExpiry(LocalDateTime accessCertExpiry) {
        this.accessCertExpiry = accessCertExpiry;
    }

    /**
     * Getter for AccessKey.
     * @return Returns the String
     */
    @JsonGetter("access-key")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAccessKey() {
        return accessKey;
    }

    /**
     * Setter for AccessKey.
     * @param accessKey Value for String
     */
    @JsonSetter("access-key")
    public void setAccessKey(String accessKey) {
        this.accessKey = accessKey;
    }

    /**
     * Converts this User1 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "User1 [" + "type=" + type + ", username=" + username + ", password=" + password
                + ", accessCert=" + accessCert + ", accessCertExpiry=" + accessCertExpiry
                + ", accessKey=" + accessKey + "]";
    }

    /**
     * Builds a new {@link User1.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link User1.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .type(getType())
                .username(getUsername())
                .password(getPassword())
                .accessCert(getAccessCert())
                .accessCertExpiry(getAccessCertExpiry())
                .accessKey(getAccessKey());
        return builder;
    }

    /**
     * Class to build instances of {@link User1}.
     */
    public static class Builder {
        private String type;
        private String username;
        private String password;
        private String accessCert;
        private LocalDateTime accessCertExpiry;
        private String accessKey;



        /**
         * Setter for type.
         * @param  type  String value for type.
         * @return Builder
         */
        public Builder type(String type) {
            this.type = type;
            return this;
        }

        /**
         * Setter for username.
         * @param  username  String value for username.
         * @return Builder
         */
        public Builder username(String username) {
            this.username = username;
            return this;
        }

        /**
         * Setter for password.
         * @param  password  String value for password.
         * @return Builder
         */
        public Builder password(String password) {
            this.password = password;
            return this;
        }

        /**
         * Setter for accessCert.
         * @param  accessCert  String value for accessCert.
         * @return Builder
         */
        public Builder accessCert(String accessCert) {
            this.accessCert = accessCert;
            return this;
        }

        /**
         * Setter for accessCertExpiry.
         * @param  accessCertExpiry  LocalDateTime value for accessCertExpiry.
         * @return Builder
         */
        public Builder accessCertExpiry(LocalDateTime accessCertExpiry) {
            this.accessCertExpiry = accessCertExpiry;
            return this;
        }

        /**
         * Setter for accessKey.
         * @param  accessKey  String value for accessKey.
         * @return Builder
         */
        public Builder accessKey(String accessKey) {
            this.accessKey = accessKey;
            return this;
        }

        /**
         * Builds a new {@link User1} object using the set fields.
         * @return {@link User1}
         */
        public User1 build() {
            return new User1(type, username, password, accessCert, accessCertExpiry, accessKey);
        }
    }
}
