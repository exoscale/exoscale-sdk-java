/*
 * ExoscalePublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.exoscale.apichgva2.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.Map;

/**
 * This is a model class for IamPolicy type.
 */
public class IamPolicy {
    private DefaultServiceStrategyEnum defaultServiceStrategy;
    private Map<String, IamServicePolicy> services;

    /**
     * Default constructor.
     */
    public IamPolicy() {
    }

    /**
     * Initialization constructor.
     * @param  defaultServiceStrategy  DefaultServiceStrategyEnum value for defaultServiceStrategy.
     * @param  services  Map of String, value for services.
     */
    public IamPolicy(
            DefaultServiceStrategyEnum defaultServiceStrategy,
            Map<String, IamServicePolicy> services) {
        this.defaultServiceStrategy = defaultServiceStrategy;
        this.services = services;
    }

    /**
     * Getter for DefaultServiceStrategy.
     * IAM default service strategy
     * @return Returns the DefaultServiceStrategyEnum
     */
    @JsonGetter("default-service-strategy")
    public DefaultServiceStrategyEnum getDefaultServiceStrategy() {
        return defaultServiceStrategy;
    }

    /**
     * Setter for DefaultServiceStrategy.
     * IAM default service strategy
     * @param defaultServiceStrategy Value for DefaultServiceStrategyEnum
     */
    @JsonSetter("default-service-strategy")
    public void setDefaultServiceStrategy(DefaultServiceStrategyEnum defaultServiceStrategy) {
        this.defaultServiceStrategy = defaultServiceStrategy;
    }

    /**
     * Getter for Services.
     * IAM services
     * @return Returns the Map of String, IamServicePolicy
     */
    @JsonGetter("services")
    public Map<String, IamServicePolicy> getServices() {
        return services;
    }

    /**
     * Setter for Services.
     * IAM services
     * @param services Value for Map of String, IamServicePolicy
     */
    @JsonSetter("services")
    public void setServices(Map<String, IamServicePolicy> services) {
        this.services = services;
    }

    /**
     * Converts this IamPolicy into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "IamPolicy [" + "defaultServiceStrategy=" + defaultServiceStrategy + ", services="
                + services + "]";
    }

    /**
     * Builds a new {@link IamPolicy.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link IamPolicy.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(defaultServiceStrategy, services);
        return builder;
    }

    /**
     * Class to build instances of {@link IamPolicy}.
     */
    public static class Builder {
        private DefaultServiceStrategyEnum defaultServiceStrategy;
        private Map<String, IamServicePolicy> services;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  defaultServiceStrategy  DefaultServiceStrategyEnum value for
         *         defaultServiceStrategy.
         * @param  services  Map of String, value for services.
         */
        public Builder(DefaultServiceStrategyEnum defaultServiceStrategy,
                Map<String, IamServicePolicy> services) {
            this.defaultServiceStrategy = defaultServiceStrategy;
            this.services = services;
        }

        /**
         * Setter for defaultServiceStrategy.
         * @param  defaultServiceStrategy  DefaultServiceStrategyEnum value for
         *         defaultServiceStrategy.
         * @return Builder
         */
        public Builder defaultServiceStrategy(DefaultServiceStrategyEnum defaultServiceStrategy) {
            this.defaultServiceStrategy = defaultServiceStrategy;
            return this;
        }

        /**
         * Setter for services.
         * @param  services  Map of String, value for services.
         * @return Builder
         */
        public Builder services(Map<String, IamServicePolicy> services) {
            this.services = services;
            return this;
        }

        /**
         * Builds a new {@link IamPolicy} object using the set fields.
         * @return {@link IamPolicy}
         */
        public IamPolicy build() {
            return new IamPolicy(defaultServiceStrategy, services);
        }
    }
}
