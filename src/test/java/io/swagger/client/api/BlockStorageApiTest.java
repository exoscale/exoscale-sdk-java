/*
 * Exoscale Public API
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * OpenAPI spec version: 2.0.0
 * Contact: api@exoscale.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.BlockStorageSnapshot;
import io.swagger.client.model.BlockStorageVolume;
import io.swagger.client.model.BlockstorageBody;
import io.swagger.client.model.BlockstorageIdBody;
import io.swagger.client.model.BlockstorageIdattachBody;
import io.swagger.client.model.BlockstorageIdcreatesnapshotBody;
import io.swagger.client.model.BlockstorageIdresizevolumeBody;
import io.swagger.client.model.InlineResponse20019;
import io.swagger.client.model.InlineResponse20040;
import io.swagger.client.model.Operation;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BlockStorageApi
 */
@Ignore
public class BlockStorageApiTest {

    private final BlockStorageApi api = new BlockStorageApi();

    /**
     * Attach block storage volume to an instance
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void attachBlockStorageVolumeToInstanceTest() {
        BlockstorageIdattachBody body = null;
        UUID id = null;
        Operation response = api.attachBlockStorageVolumeToInstance(body, id);

        // TODO: test validations
    }
    /**
     * Create a block storage snapshot
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createBlockStorageSnapshotTest() {
        BlockstorageIdcreatesnapshotBody body = null;
        UUID id = null;
        Operation response = api.createBlockStorageSnapshot(body, id);

        // TODO: test validations
    }
    /**
     * Create a block storage volume
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createBlockStorageVolumeTest() {
        BlockstorageBody body = null;
        Operation response = api.createBlockStorageVolume(body);

        // TODO: test validations
    }
    /**
     * Delete a block storage snapshot, data will be unrecoverable
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteBlockStorageSnapshotTest() {
        UUID id = null;
        Operation response = api.deleteBlockStorageSnapshot(id);

        // TODO: test validations
    }
    /**
     * Delete a block storage volume, data will be unrecoverable
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteBlockStorageVolumeTest() {
        UUID id = null;
        Operation response = api.deleteBlockStorageVolume(id);

        // TODO: test validations
    }
    /**
     * Detach block storage volume
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void detachBlockStorageVolumeTest() {
        UUID id = null;
        Operation response = api.detachBlockStorageVolume(id);

        // TODO: test validations
    }
    /**
     * Retrieve block storage snapshot details
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getBlockStorageSnapshotTest() {
        UUID id = null;
        BlockStorageSnapshot response = api.getBlockStorageSnapshot(id);

        // TODO: test validations
    }
    /**
     * Retrieve block storage volume details
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getBlockStorageVolumeTest() {
        UUID id = null;
        BlockStorageVolume response = api.getBlockStorageVolume(id);

        // TODO: test validations
    }
    /**
     * List block storage snapshots
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listBlockStorageSnapshotsTest() {
        InlineResponse20019 response = api.listBlockStorageSnapshots();

        // TODO: test validations
    }
    /**
     * List block storage volumes
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listBlockStorageVolumesTest() {
        UUID instanceId = null;
        InlineResponse20040 response = api.listBlockStorageVolumes(instanceId);

        // TODO: test validations
    }
    /**
     * Resize a block storage volume
     *
     * This operation resizes a Block storage volume. Note: the volume can only grow, cannot be shrunk.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void resizeBlockStorageVolumeTest() {
        BlockstorageIdresizevolumeBody body = null;
        UUID id = null;
        BlockStorageVolume response = api.resizeBlockStorageVolume(body, id);

        // TODO: test validations
    }
    /**
     * Set block storage volume labels
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateBlockStorageVolumeLabelsTest() {
        BlockstorageIdBody body = null;
        UUID id = null;
        Operation response = api.updateBlockStorageVolumeLabels(body, id);

        // TODO: test validations
    }
}
