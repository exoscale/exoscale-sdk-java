/*
 * Exoscale Public API
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@exoscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.exoscale.model;

import java.util.Objects;
import java.util.Arrays;
import com.exoscale.model.SksOidc;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.Map;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreateSksClusterRequest
 */
@JsonPropertyOrder({
  CreateSksClusterRequest.JSON_PROPERTY_DESCRIPTION,
  CreateSksClusterRequest.JSON_PROPERTY_LABELS,
  CreateSksClusterRequest.JSON_PROPERTY_CNI,
  CreateSksClusterRequest.JSON_PROPERTY_AUTO_UPGRADE,
  CreateSksClusterRequest.JSON_PROPERTY_OIDC,
  CreateSksClusterRequest.JSON_PROPERTY_NAME,
  CreateSksClusterRequest.JSON_PROPERTY_LEVEL,
  CreateSksClusterRequest.JSON_PROPERTY_ADDONS,
  CreateSksClusterRequest.JSON_PROPERTY_VERSION
})
@JsonTypeName("create_sks_cluster_request")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-06T21:01:33.231699+01:00[Europe/Vienna]")
public class CreateSksClusterRequest {
  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_LABELS = "labels";
  private Map<String, String> labels = new HashMap<>();

  /**
   * Cluster CNI
   */
  public enum CniEnum {
    CALICO("calico"),
    
    CILIUM("cilium");

    private String value;

    CniEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static CniEnum fromValue(String value) {
      for (CniEnum b : CniEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_CNI = "cni";
  private CniEnum cni;

  public static final String JSON_PROPERTY_AUTO_UPGRADE = "auto-upgrade";
  private Boolean autoUpgrade;

  public static final String JSON_PROPERTY_OIDC = "oidc";
  private SksOidc oidc;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  /**
   * Cluster service level
   */
  public enum LevelEnum {
    STARTER("starter"),
    
    PRO("pro");

    private String value;

    LevelEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static LevelEnum fromValue(String value) {
      for (LevelEnum b : LevelEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_LEVEL = "level";
  private LevelEnum level;

  /**
   * Gets or Sets addons
   */
  public enum AddonsEnum {
    EXOSCALE_CLOUD_CONTROLLER("exoscale-cloud-controller"),
    
    EXOSCALE_CONTAINER_STORAGE_INTERFACE("exoscale-container-storage-interface"),
    
    METRICS_SERVER("metrics-server");

    private String value;

    AddonsEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AddonsEnum fromValue(String value) {
      for (AddonsEnum b : AddonsEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ADDONS = "addons";
  private Set<AddonsEnum> addons;

  public static final String JSON_PROPERTY_VERSION = "version";
  private String version;

  public CreateSksClusterRequest() {
  }

  public CreateSksClusterRequest description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Cluster description
   * @return description
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public CreateSksClusterRequest labels(Map<String, String> labels) {
    
    this.labels = labels;
    return this;
  }

  public CreateSksClusterRequest putLabelsItem(String key, String labelsItem) {
    if (this.labels == null) {
      this.labels = new HashMap<>();
    }
    this.labels.put(key, labelsItem);
    return this;
  }

   /**
   * Get labels
   * @return labels
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LABELS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, String> getLabels() {
    return labels;
  }


  @JsonProperty(JSON_PROPERTY_LABELS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLabels(Map<String, String> labels) {
    this.labels = labels;
  }


  public CreateSksClusterRequest cni(CniEnum cni) {
    
    this.cni = cni;
    return this;
  }

   /**
   * Cluster CNI
   * @return cni
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CNI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CniEnum getCni() {
    return cni;
  }


  @JsonProperty(JSON_PROPERTY_CNI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCni(CniEnum cni) {
    this.cni = cni;
  }


  public CreateSksClusterRequest autoUpgrade(Boolean autoUpgrade) {
    
    this.autoUpgrade = autoUpgrade;
    return this;
  }

   /**
   * Enable auto upgrade of the control plane to the latest patch version available
   * @return autoUpgrade
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUTO_UPGRADE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAutoUpgrade() {
    return autoUpgrade;
  }


  @JsonProperty(JSON_PROPERTY_AUTO_UPGRADE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAutoUpgrade(Boolean autoUpgrade) {
    this.autoUpgrade = autoUpgrade;
  }


  public CreateSksClusterRequest oidc(SksOidc oidc) {
    
    this.oidc = oidc;
    return this;
  }

   /**
   * Get oidc
   * @return oidc
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OIDC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SksOidc getOidc() {
    return oidc;
  }


  @JsonProperty(JSON_PROPERTY_OIDC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOidc(SksOidc oidc) {
    this.oidc = oidc;
  }


  public CreateSksClusterRequest name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Cluster name
   * @return name
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public CreateSksClusterRequest level(LevelEnum level) {
    
    this.level = level;
    return this;
  }

   /**
   * Cluster service level
   * @return level
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LEVEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public LevelEnum getLevel() {
    return level;
  }


  @JsonProperty(JSON_PROPERTY_LEVEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLevel(LevelEnum level) {
    this.level = level;
  }


  public CreateSksClusterRequest addons(Set<AddonsEnum> addons) {
    
    this.addons = addons;
    return this;
  }

  public CreateSksClusterRequest addAddonsItem(AddonsEnum addonsItem) {
    if (this.addons == null) {
      this.addons = new LinkedHashSet<>();
    }
    this.addons.add(addonsItem);
    return this;
  }

   /**
   * Cluster addons
   * @return addons
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<AddonsEnum> getAddons() {
    return addons;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_ADDONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddons(Set<AddonsEnum> addons) {
    this.addons = addons;
  }


  public CreateSksClusterRequest version(String version) {
    
    this.version = version;
    return this;
  }

   /**
   * Control plane Kubernetes version
   * @return version
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getVersion() {
    return version;
  }


  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVersion(String version) {
    this.version = version;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateSksClusterRequest createSksClusterRequest = (CreateSksClusterRequest) o;
    return Objects.equals(this.description, createSksClusterRequest.description) &&
        Objects.equals(this.labels, createSksClusterRequest.labels) &&
        Objects.equals(this.cni, createSksClusterRequest.cni) &&
        Objects.equals(this.autoUpgrade, createSksClusterRequest.autoUpgrade) &&
        Objects.equals(this.oidc, createSksClusterRequest.oidc) &&
        Objects.equals(this.name, createSksClusterRequest.name) &&
        Objects.equals(this.level, createSksClusterRequest.level) &&
        Objects.equals(this.addons, createSksClusterRequest.addons) &&
        Objects.equals(this.version, createSksClusterRequest.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, labels, cni, autoUpgrade, oidc, name, level, addons, version);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateSksClusterRequest {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    cni: ").append(toIndentedString(cni)).append("\n");
    sb.append("    autoUpgrade: ").append(toIndentedString(autoUpgrade)).append("\n");
    sb.append("    oidc: ").append(toIndentedString(oidc)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    level: ").append(toIndentedString(level)).append("\n");
    sb.append("    addons: ").append(toIndentedString(addons)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

