/*
 * Exoscale Public API
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * OpenAPI spec version: 2.0.0
 * Contact: api@exoscale.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.IdRulesBody;
import io.swagger.client.model.InlineResponse2002;
import io.swagger.client.model.Operation;
import io.swagger.client.model.SecurityGroup;
import io.swagger.client.model.SecuritygroupBody;
import io.swagger.client.model.SecuritygroupIdaddsourceBody;
import io.swagger.client.model.SecuritygroupIdattachBody;
import io.swagger.client.model.SecuritygroupIddetachBody;
import io.swagger.client.model.SecuritygroupIdremovesourceBody;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SecurityGroupApi
 */
@Ignore
public class SecurityGroupApiTest {

    private final SecurityGroupApi api = new SecurityGroupApi();

    /**
     * Add an external source as a member of a Security Group
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addExternalSourceToSecurityGroupTest() {
        SecuritygroupIdaddsourceBody body = null;
        UUID id = null;
        Operation response = api.addExternalSourceToSecurityGroup(body, id);

        // TODO: test validations
    }
    /**
     * Create a Security Group rule
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addRuleToSecurityGroupTest() {
        IdRulesBody body = null;
        UUID id = null;
        Operation response = api.addRuleToSecurityGroup(body, id);

        // TODO: test validations
    }
    /**
     * Attach a Compute instance to a Security Group
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void attachInstanceToSecurityGroupTest() {
        SecuritygroupIdattachBody body = null;
        UUID id = null;
        Operation response = api.attachInstanceToSecurityGroup(body, id);

        // TODO: test validations
    }
    /**
     * Create a Security Group
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createSecurityGroupTest() {
        SecuritygroupBody body = null;
        Operation response = api.createSecurityGroup(body);

        // TODO: test validations
    }
    /**
     * Delete a Security Group rule
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteRuleFromSecurityGroupTest() {
        UUID id = null;
        UUID ruleId = null;
        Operation response = api.deleteRuleFromSecurityGroup(id, ruleId);

        // TODO: test validations
    }
    /**
     * Delete a Security Group
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteSecurityGroupTest() {
        UUID id = null;
        Operation response = api.deleteSecurityGroup(id);

        // TODO: test validations
    }
    /**
     * Detach a Compute instance from a Security Group
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void detachInstanceFromSecurityGroupTest() {
        SecuritygroupIddetachBody body = null;
        UUID id = null;
        Operation response = api.detachInstanceFromSecurityGroup(body, id);

        // TODO: test validations
    }
    /**
     * Retrieve Security Group details
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSecurityGroupTest() {
        UUID id = null;
        SecurityGroup response = api.getSecurityGroup(id);

        // TODO: test validations
    }
    /**
     * List Security Groups.
     *
     * Lists security groups. When visibility is set to public, lists public security groups. Public security groups are objects maintained by Exoscale which contain source addresses for relevant services hosted by Exoscale. They can be used a source in ingress rules and as a destination in egress rules.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listSecurityGroupsTest() {
        String visibility = null;
        InlineResponse2002 response = api.listSecurityGroups(visibility);

        // TODO: test validations
    }
    /**
     * Remove an external source from a Security Group
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void removeExternalSourceFromSecurityGroupTest() {
        SecuritygroupIdremovesourceBody body = null;
        UUID id = null;
        Operation response = api.removeExternalSourceFromSecurityGroup(body, id);

        // TODO: test validations
    }
}
