/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.exoscale.api.models.operations;

import com.exoscale.api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Optional;


public class GetDbaasServiceMetricsRequestBody {

    /**
     * Metrics time period (default: hour)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("period")
    private Optional<? extends Period> period;

    public GetDbaasServiceMetricsRequestBody(
            @JsonProperty("period") Optional<? extends Period> period) {
        Utils.checkNotNull(period, "period");
        this.period = period;
    }

    /**
     * Metrics time period (default: hour)
     */
    public Optional<? extends Period> period() {
        return period;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * Metrics time period (default: hour)
     */
    public GetDbaasServiceMetricsRequestBody withPeriod(Period period) {
        Utils.checkNotNull(period, "period");
        this.period = Optional.ofNullable(period);
        return this;
    }

    /**
     * Metrics time period (default: hour)
     */
    public GetDbaasServiceMetricsRequestBody withPeriod(Optional<? extends Period> period) {
        Utils.checkNotNull(period, "period");
        this.period = period;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetDbaasServiceMetricsRequestBody other = (GetDbaasServiceMetricsRequestBody) o;
        return 
            java.util.Objects.deepEquals(this.period, other.period);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            period);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GetDbaasServiceMetricsRequestBody.class,
                "period", period);
    }
    
    public final static class Builder {
 
        private Optional<? extends Period> period = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * Metrics time period (default: hour)
         */
        public Builder period(Period period) {
            Utils.checkNotNull(period, "period");
            this.period = Optional.ofNullable(period);
            return this;
        }

        /**
         * Metrics time period (default: hour)
         */
        public Builder period(Optional<? extends Period> period) {
            Utils.checkNotNull(period, "period");
            this.period = period;
            return this;
        }
        
        public GetDbaasServiceMetricsRequestBody build() {
            return new GetDbaasServiceMetricsRequestBody(
                period);
        }
    }
}

