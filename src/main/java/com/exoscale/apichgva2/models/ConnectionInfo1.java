/*
 * ExoscalePublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.exoscale.apichgva2.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for ConnectionInfo1 type.
 */
public class ConnectionInfo1 {
    private List<String> nodes;
    private String accessCert;
    private String accessKey;
    private String connectUri;
    private String restUri;
    private String registryUri;

    /**
     * Default constructor.
     */
    public ConnectionInfo1() {
    }

    /**
     * Initialization constructor.
     * @param  nodes  List of String value for nodes.
     * @param  accessCert  String value for accessCert.
     * @param  accessKey  String value for accessKey.
     * @param  connectUri  String value for connectUri.
     * @param  restUri  String value for restUri.
     * @param  registryUri  String value for registryUri.
     */
    public ConnectionInfo1(
            List<String> nodes,
            String accessCert,
            String accessKey,
            String connectUri,
            String restUri,
            String registryUri) {
        this.nodes = nodes;
        this.accessCert = accessCert;
        this.accessKey = accessKey;
        this.connectUri = connectUri;
        this.restUri = restUri;
        this.registryUri = registryUri;
    }

    /**
     * Getter for Nodes.
     * @return Returns the List of String
     */
    @JsonGetter("nodes")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<String> getNodes() {
        return nodes;
    }

    /**
     * Setter for Nodes.
     * @param nodes Value for List of String
     */
    @JsonSetter("nodes")
    public void setNodes(List<String> nodes) {
        this.nodes = nodes;
    }

    /**
     * Getter for AccessCert.
     * @return Returns the String
     */
    @JsonGetter("access-cert")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAccessCert() {
        return accessCert;
    }

    /**
     * Setter for AccessCert.
     * @param accessCert Value for String
     */
    @JsonSetter("access-cert")
    public void setAccessCert(String accessCert) {
        this.accessCert = accessCert;
    }

    /**
     * Getter for AccessKey.
     * @return Returns the String
     */
    @JsonGetter("access-key")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAccessKey() {
        return accessKey;
    }

    /**
     * Setter for AccessKey.
     * @param accessKey Value for String
     */
    @JsonSetter("access-key")
    public void setAccessKey(String accessKey) {
        this.accessKey = accessKey;
    }

    /**
     * Getter for ConnectUri.
     * @return Returns the String
     */
    @JsonGetter("connect-uri")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getConnectUri() {
        return connectUri;
    }

    /**
     * Setter for ConnectUri.
     * @param connectUri Value for String
     */
    @JsonSetter("connect-uri")
    public void setConnectUri(String connectUri) {
        this.connectUri = connectUri;
    }

    /**
     * Getter for RestUri.
     * @return Returns the String
     */
    @JsonGetter("rest-uri")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getRestUri() {
        return restUri;
    }

    /**
     * Setter for RestUri.
     * @param restUri Value for String
     */
    @JsonSetter("rest-uri")
    public void setRestUri(String restUri) {
        this.restUri = restUri;
    }

    /**
     * Getter for RegistryUri.
     * @return Returns the String
     */
    @JsonGetter("registry-uri")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getRegistryUri() {
        return registryUri;
    }

    /**
     * Setter for RegistryUri.
     * @param registryUri Value for String
     */
    @JsonSetter("registry-uri")
    public void setRegistryUri(String registryUri) {
        this.registryUri = registryUri;
    }

    /**
     * Converts this ConnectionInfo1 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ConnectionInfo1 [" + "nodes=" + nodes + ", accessCert=" + accessCert
                + ", accessKey=" + accessKey + ", connectUri=" + connectUri + ", restUri=" + restUri
                + ", registryUri=" + registryUri + "]";
    }

    /**
     * Builds a new {@link ConnectionInfo1.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ConnectionInfo1.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .nodes(getNodes())
                .accessCert(getAccessCert())
                .accessKey(getAccessKey())
                .connectUri(getConnectUri())
                .restUri(getRestUri())
                .registryUri(getRegistryUri());
        return builder;
    }

    /**
     * Class to build instances of {@link ConnectionInfo1}.
     */
    public static class Builder {
        private List<String> nodes;
        private String accessCert;
        private String accessKey;
        private String connectUri;
        private String restUri;
        private String registryUri;



        /**
         * Setter for nodes.
         * @param  nodes  List of String value for nodes.
         * @return Builder
         */
        public Builder nodes(List<String> nodes) {
            this.nodes = nodes;
            return this;
        }

        /**
         * Setter for accessCert.
         * @param  accessCert  String value for accessCert.
         * @return Builder
         */
        public Builder accessCert(String accessCert) {
            this.accessCert = accessCert;
            return this;
        }

        /**
         * Setter for accessKey.
         * @param  accessKey  String value for accessKey.
         * @return Builder
         */
        public Builder accessKey(String accessKey) {
            this.accessKey = accessKey;
            return this;
        }

        /**
         * Setter for connectUri.
         * @param  connectUri  String value for connectUri.
         * @return Builder
         */
        public Builder connectUri(String connectUri) {
            this.connectUri = connectUri;
            return this;
        }

        /**
         * Setter for restUri.
         * @param  restUri  String value for restUri.
         * @return Builder
         */
        public Builder restUri(String restUri) {
            this.restUri = restUri;
            return this;
        }

        /**
         * Setter for registryUri.
         * @param  registryUri  String value for registryUri.
         * @return Builder
         */
        public Builder registryUri(String registryUri) {
            this.registryUri = registryUri;
            return this;
        }

        /**
         * Builds a new {@link ConnectionInfo1} object using the set fields.
         * @return {@link ConnectionInfo1}
         */
        public ConnectionInfo1 build() {
            return new ConnectionInfo1(nodes, accessCert, accessKey, connectUri, restUri,
                    registryUri);
        }
    }
}
