/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.exoscale.api.models.operations;

import com.exoscale.api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Optional;

/**
 * CreateAccessKeyRequestBody - IAM Access Key
 */

public class CreateAccessKeyRequestBody {

    /**
     * IAM Access Key name
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    private Optional<? extends String> name;

    /**
     * IAM Access Key tags
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    private Optional<? extends java.util.List<String>> tags;

    /**
     * IAM Access Key operations
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("operations")
    private Optional<? extends java.util.List<String>> operations;

    /**
     * IAM Access Key Resources
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resources")
    private Optional<? extends java.util.List<com.exoscale.api.models.components.AccessKeyResource>> resources;

    public CreateAccessKeyRequestBody(
            @JsonProperty("name") Optional<? extends String> name,
            @JsonProperty("tags") Optional<? extends java.util.List<String>> tags,
            @JsonProperty("operations") Optional<? extends java.util.List<String>> operations,
            @JsonProperty("resources") Optional<? extends java.util.List<com.exoscale.api.models.components.AccessKeyResource>> resources) {
        Utils.checkNotNull(name, "name");
        Utils.checkNotNull(tags, "tags");
        Utils.checkNotNull(operations, "operations");
        Utils.checkNotNull(resources, "resources");
        this.name = name;
        this.tags = tags;
        this.operations = operations;
        this.resources = resources;
    }

    /**
     * IAM Access Key name
     */
    public Optional<? extends String> name() {
        return name;
    }

    /**
     * IAM Access Key tags
     */
    public Optional<? extends java.util.List<String>> tags() {
        return tags;
    }

    /**
     * IAM Access Key operations
     */
    public Optional<? extends java.util.List<String>> operations() {
        return operations;
    }

    /**
     * IAM Access Key Resources
     */
    public Optional<? extends java.util.List<com.exoscale.api.models.components.AccessKeyResource>> resources() {
        return resources;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * IAM Access Key name
     */
    public CreateAccessKeyRequestBody withName(String name) {
        Utils.checkNotNull(name, "name");
        this.name = Optional.ofNullable(name);
        return this;
    }

    /**
     * IAM Access Key name
     */
    public CreateAccessKeyRequestBody withName(Optional<? extends String> name) {
        Utils.checkNotNull(name, "name");
        this.name = name;
        return this;
    }

    /**
     * IAM Access Key tags
     */
    public CreateAccessKeyRequestBody withTags(java.util.List<String> tags) {
        Utils.checkNotNull(tags, "tags");
        this.tags = Optional.ofNullable(tags);
        return this;
    }

    /**
     * IAM Access Key tags
     */
    public CreateAccessKeyRequestBody withTags(Optional<? extends java.util.List<String>> tags) {
        Utils.checkNotNull(tags, "tags");
        this.tags = tags;
        return this;
    }

    /**
     * IAM Access Key operations
     */
    public CreateAccessKeyRequestBody withOperations(java.util.List<String> operations) {
        Utils.checkNotNull(operations, "operations");
        this.operations = Optional.ofNullable(operations);
        return this;
    }

    /**
     * IAM Access Key operations
     */
    public CreateAccessKeyRequestBody withOperations(Optional<? extends java.util.List<String>> operations) {
        Utils.checkNotNull(operations, "operations");
        this.operations = operations;
        return this;
    }

    /**
     * IAM Access Key Resources
     */
    public CreateAccessKeyRequestBody withResources(java.util.List<com.exoscale.api.models.components.AccessKeyResource> resources) {
        Utils.checkNotNull(resources, "resources");
        this.resources = Optional.ofNullable(resources);
        return this;
    }

    /**
     * IAM Access Key Resources
     */
    public CreateAccessKeyRequestBody withResources(Optional<? extends java.util.List<com.exoscale.api.models.components.AccessKeyResource>> resources) {
        Utils.checkNotNull(resources, "resources");
        this.resources = resources;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CreateAccessKeyRequestBody other = (CreateAccessKeyRequestBody) o;
        return 
            java.util.Objects.deepEquals(this.name, other.name) &&
            java.util.Objects.deepEquals(this.tags, other.tags) &&
            java.util.Objects.deepEquals(this.operations, other.operations) &&
            java.util.Objects.deepEquals(this.resources, other.resources);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            name,
            tags,
            operations,
            resources);
    }
    
    @Override
    public String toString() {
        return Utils.toString(CreateAccessKeyRequestBody.class,
                "name", name,
                "tags", tags,
                "operations", operations,
                "resources", resources);
    }
    
    public final static class Builder {
 
        private Optional<? extends String> name = Optional.empty();
 
        private Optional<? extends java.util.List<String>> tags = Optional.empty();
 
        private Optional<? extends java.util.List<String>> operations = Optional.empty();
 
        private Optional<? extends java.util.List<com.exoscale.api.models.components.AccessKeyResource>> resources = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * IAM Access Key name
         */
        public Builder name(String name) {
            Utils.checkNotNull(name, "name");
            this.name = Optional.ofNullable(name);
            return this;
        }

        /**
         * IAM Access Key name
         */
        public Builder name(Optional<? extends String> name) {
            Utils.checkNotNull(name, "name");
            this.name = name;
            return this;
        }

        /**
         * IAM Access Key tags
         */
        public Builder tags(java.util.List<String> tags) {
            Utils.checkNotNull(tags, "tags");
            this.tags = Optional.ofNullable(tags);
            return this;
        }

        /**
         * IAM Access Key tags
         */
        public Builder tags(Optional<? extends java.util.List<String>> tags) {
            Utils.checkNotNull(tags, "tags");
            this.tags = tags;
            return this;
        }

        /**
         * IAM Access Key operations
         */
        public Builder operations(java.util.List<String> operations) {
            Utils.checkNotNull(operations, "operations");
            this.operations = Optional.ofNullable(operations);
            return this;
        }

        /**
         * IAM Access Key operations
         */
        public Builder operations(Optional<? extends java.util.List<String>> operations) {
            Utils.checkNotNull(operations, "operations");
            this.operations = operations;
            return this;
        }

        /**
         * IAM Access Key Resources
         */
        public Builder resources(java.util.List<com.exoscale.api.models.components.AccessKeyResource> resources) {
            Utils.checkNotNull(resources, "resources");
            this.resources = Optional.ofNullable(resources);
            return this;
        }

        /**
         * IAM Access Key Resources
         */
        public Builder resources(Optional<? extends java.util.List<com.exoscale.api.models.components.AccessKeyResource>> resources) {
            Utils.checkNotNull(resources, "resources");
            this.resources = resources;
            return this;
        }
        
        public CreateAccessKeyRequestBody build() {
            return new CreateAccessKeyRequestBody(
                name,
                tags,
                operations,
                resources);
        }
    }
}

