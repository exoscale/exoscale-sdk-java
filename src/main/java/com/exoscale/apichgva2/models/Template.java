/*
 * ExoscalePublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.exoscale.apichgva2.models;

import com.exoscale.apichgva2.DateTimeHelper;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.LocalDateTime;
import java.util.List;
import java.util.UUID;

/**
 * This is a model class for Template type.
 */
public class Template {
    private String maintainer;
    private String description;
    private Boolean sshKeyEnabled;
    private String family;
    private String name;
    private String defaultUser;
    private Long size;
    private Boolean passwordEnabled;
    private String build;
    private String checksum;
    private BootModeEnum bootMode;
    private UUID id;
    private List<ZoneNameEnum> zones;
    private String url;
    private String version;
    private LocalDateTime createdAt;
    private Visibility1Enum visibility;

    /**
     * Default constructor.
     */
    public Template() {
    }

    /**
     * Initialization constructor.
     * @param  maintainer  String value for maintainer.
     * @param  description  String value for description.
     * @param  sshKeyEnabled  Boolean value for sshKeyEnabled.
     * @param  family  String value for family.
     * @param  name  String value for name.
     * @param  defaultUser  String value for defaultUser.
     * @param  size  Long value for size.
     * @param  passwordEnabled  Boolean value for passwordEnabled.
     * @param  build  String value for build.
     * @param  checksum  String value for checksum.
     * @param  bootMode  BootModeEnum value for bootMode.
     * @param  id  UUID value for id.
     * @param  zones  List of ZoneNameEnum value for zones.
     * @param  url  String value for url.
     * @param  version  String value for version.
     * @param  createdAt  LocalDateTime value for createdAt.
     * @param  visibility  Visibility1Enum value for visibility.
     */
    public Template(
            String maintainer,
            String description,
            Boolean sshKeyEnabled,
            String family,
            String name,
            String defaultUser,
            Long size,
            Boolean passwordEnabled,
            String build,
            String checksum,
            BootModeEnum bootMode,
            UUID id,
            List<ZoneNameEnum> zones,
            String url,
            String version,
            LocalDateTime createdAt,
            Visibility1Enum visibility) {
        this.maintainer = maintainer;
        this.description = description;
        this.sshKeyEnabled = sshKeyEnabled;
        this.family = family;
        this.name = name;
        this.defaultUser = defaultUser;
        this.size = size;
        this.passwordEnabled = passwordEnabled;
        this.build = build;
        this.checksum = checksum;
        this.bootMode = bootMode;
        this.id = id;
        this.zones = zones;
        this.url = url;
        this.version = version;
        this.createdAt = createdAt;
        this.visibility = visibility;
    }

    /**
     * Getter for Maintainer.
     * Template maintainer
     * @return Returns the String
     */
    @JsonGetter("maintainer")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getMaintainer() {
        return maintainer;
    }

    /**
     * Setter for Maintainer.
     * Template maintainer
     * @param maintainer Value for String
     */
    @JsonSetter("maintainer")
    public void setMaintainer(String maintainer) {
        this.maintainer = maintainer;
    }

    /**
     * Getter for Description.
     * Template description
     * @return Returns the String
     */
    @JsonGetter("description")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDescription() {
        return description;
    }

    /**
     * Setter for Description.
     * Template description
     * @param description Value for String
     */
    @JsonSetter("description")
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Getter for SshKeyEnabled.
     * Enable SSH key-based login
     * @return Returns the Boolean
     */
    @JsonGetter("ssh-key-enabled")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getSshKeyEnabled() {
        return sshKeyEnabled;
    }

    /**
     * Setter for SshKeyEnabled.
     * Enable SSH key-based login
     * @param sshKeyEnabled Value for Boolean
     */
    @JsonSetter("ssh-key-enabled")
    public void setSshKeyEnabled(Boolean sshKeyEnabled) {
        this.sshKeyEnabled = sshKeyEnabled;
    }

    /**
     * Getter for Family.
     * Template family
     * @return Returns the String
     */
    @JsonGetter("family")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getFamily() {
        return family;
    }

    /**
     * Setter for Family.
     * Template family
     * @param family Value for String
     */
    @JsonSetter("family")
    public void setFamily(String family) {
        this.family = family;
    }

    /**
     * Getter for Name.
     * Template name
     * @return Returns the String
     */
    @JsonGetter("name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * Template name
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for DefaultUser.
     * Template default user
     * @return Returns the String
     */
    @JsonGetter("default-user")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDefaultUser() {
        return defaultUser;
    }

    /**
     * Setter for DefaultUser.
     * Template default user
     * @param defaultUser Value for String
     */
    @JsonSetter("default-user")
    public void setDefaultUser(String defaultUser) {
        this.defaultUser = defaultUser;
    }

    /**
     * Getter for Size.
     * Template size
     * @return Returns the Long
     */
    @JsonGetter("size")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Long getSize() {
        return size;
    }

    /**
     * Setter for Size.
     * Template size
     * @param size Value for Long
     */
    @JsonSetter("size")
    public void setSize(Long size) {
        this.size = size;
    }

    /**
     * Getter for PasswordEnabled.
     * Enable password-based login
     * @return Returns the Boolean
     */
    @JsonGetter("password-enabled")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getPasswordEnabled() {
        return passwordEnabled;
    }

    /**
     * Setter for PasswordEnabled.
     * Enable password-based login
     * @param passwordEnabled Value for Boolean
     */
    @JsonSetter("password-enabled")
    public void setPasswordEnabled(Boolean passwordEnabled) {
        this.passwordEnabled = passwordEnabled;
    }

    /**
     * Getter for Build.
     * Template build
     * @return Returns the String
     */
    @JsonGetter("build")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getBuild() {
        return build;
    }

    /**
     * Setter for Build.
     * Template build
     * @param build Value for String
     */
    @JsonSetter("build")
    public void setBuild(String build) {
        this.build = build;
    }

    /**
     * Getter for Checksum.
     * Template MD5 checksum
     * @return Returns the String
     */
    @JsonGetter("checksum")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getChecksum() {
        return checksum;
    }

    /**
     * Setter for Checksum.
     * Template MD5 checksum
     * @param checksum Value for String
     */
    @JsonSetter("checksum")
    public void setChecksum(String checksum) {
        this.checksum = checksum;
    }

    /**
     * Getter for BootMode.
     * Boot mode (default: legacy)
     * @return Returns the BootModeEnum
     */
    @JsonGetter("boot-mode")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public BootModeEnum getBootMode() {
        return bootMode;
    }

    /**
     * Setter for BootMode.
     * Boot mode (default: legacy)
     * @param bootMode Value for BootModeEnum
     */
    @JsonSetter("boot-mode")
    public void setBootMode(BootModeEnum bootMode) {
        this.bootMode = bootMode;
    }

    /**
     * Getter for Id.
     * Template ID
     * @return Returns the UUID
     */
    @JsonGetter("id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public UUID getId() {
        return id;
    }

    /**
     * Setter for Id.
     * Template ID
     * @param id Value for UUID
     */
    @JsonSetter("id")
    public void setId(UUID id) {
        this.id = id;
    }

    /**
     * Getter for Zones.
     * Zones availability
     * @return Returns the List of ZoneNameEnum
     */
    @JsonGetter("zones")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<ZoneNameEnum> getZones() {
        return zones;
    }

    /**
     * Setter for Zones.
     * Zones availability
     * @param zones Value for List of ZoneNameEnum
     */
    @JsonSetter("zones")
    public void setZones(List<ZoneNameEnum> zones) {
        this.zones = zones;
    }

    /**
     * Getter for Url.
     * Template source URL
     * @return Returns the String
     */
    @JsonGetter("url")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getUrl() {
        return url;
    }

    /**
     * Setter for Url.
     * Template source URL
     * @param url Value for String
     */
    @JsonSetter("url")
    public void setUrl(String url) {
        this.url = url;
    }

    /**
     * Getter for Version.
     * Template version
     * @return Returns the String
     */
    @JsonGetter("version")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getVersion() {
        return version;
    }

    /**
     * Setter for Version.
     * Template version
     * @param version Value for String
     */
    @JsonSetter("version")
    public void setVersion(String version) {
        this.version = version;
    }

    /**
     * Getter for CreatedAt.
     * Template creation date
     * @return Returns the LocalDateTime
     */
    @JsonGetter("created-at")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getCreatedAt() {
        return createdAt;
    }

    /**
     * Setter for CreatedAt.
     * Template creation date
     * @param createdAt Value for LocalDateTime
     */
    @JsonSetter("created-at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Getter for Visibility.
     * Template visibility
     * @return Returns the Visibility1Enum
     */
    @JsonGetter("visibility")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Visibility1Enum getVisibility() {
        return visibility;
    }

    /**
     * Setter for Visibility.
     * Template visibility
     * @param visibility Value for Visibility1Enum
     */
    @JsonSetter("visibility")
    public void setVisibility(Visibility1Enum visibility) {
        this.visibility = visibility;
    }

    /**
     * Converts this Template into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Template [" + "maintainer=" + maintainer + ", description=" + description
                + ", sshKeyEnabled=" + sshKeyEnabled + ", family=" + family + ", name=" + name
                + ", defaultUser=" + defaultUser + ", size=" + size + ", passwordEnabled="
                + passwordEnabled + ", build=" + build + ", checksum=" + checksum + ", bootMode="
                + bootMode + ", id=" + id + ", zones=" + zones + ", url=" + url + ", version="
                + version + ", createdAt=" + createdAt + ", visibility=" + visibility + "]";
    }

    /**
     * Builds a new {@link Template.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Template.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .maintainer(getMaintainer())
                .description(getDescription())
                .sshKeyEnabled(getSshKeyEnabled())
                .family(getFamily())
                .name(getName())
                .defaultUser(getDefaultUser())
                .size(getSize())
                .passwordEnabled(getPasswordEnabled())
                .build(getBuild())
                .checksum(getChecksum())
                .bootMode(getBootMode())
                .id(getId())
                .zones(getZones())
                .url(getUrl())
                .version(getVersion())
                .createdAt(getCreatedAt())
                .visibility(getVisibility());
        return builder;
    }

    /**
     * Class to build instances of {@link Template}.
     */
    public static class Builder {
        private String maintainer;
        private String description;
        private Boolean sshKeyEnabled;
        private String family;
        private String name;
        private String defaultUser;
        private Long size;
        private Boolean passwordEnabled;
        private String build;
        private String checksum;
        private BootModeEnum bootMode;
        private UUID id;
        private List<ZoneNameEnum> zones;
        private String url;
        private String version;
        private LocalDateTime createdAt;
        private Visibility1Enum visibility;



        /**
         * Setter for maintainer.
         * @param  maintainer  String value for maintainer.
         * @return Builder
         */
        public Builder maintainer(String maintainer) {
            this.maintainer = maintainer;
            return this;
        }

        /**
         * Setter for description.
         * @param  description  String value for description.
         * @return Builder
         */
        public Builder description(String description) {
            this.description = description;
            return this;
        }

        /**
         * Setter for sshKeyEnabled.
         * @param  sshKeyEnabled  Boolean value for sshKeyEnabled.
         * @return Builder
         */
        public Builder sshKeyEnabled(Boolean sshKeyEnabled) {
            this.sshKeyEnabled = sshKeyEnabled;
            return this;
        }

        /**
         * Setter for family.
         * @param  family  String value for family.
         * @return Builder
         */
        public Builder family(String family) {
            this.family = family;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for defaultUser.
         * @param  defaultUser  String value for defaultUser.
         * @return Builder
         */
        public Builder defaultUser(String defaultUser) {
            this.defaultUser = defaultUser;
            return this;
        }

        /**
         * Setter for size.
         * @param  size  Long value for size.
         * @return Builder
         */
        public Builder size(Long size) {
            this.size = size;
            return this;
        }

        /**
         * Setter for passwordEnabled.
         * @param  passwordEnabled  Boolean value for passwordEnabled.
         * @return Builder
         */
        public Builder passwordEnabled(Boolean passwordEnabled) {
            this.passwordEnabled = passwordEnabled;
            return this;
        }

        /**
         * Setter for build.
         * @param  build  String value for build.
         * @return Builder
         */
        public Builder build(String build) {
            this.build = build;
            return this;
        }

        /**
         * Setter for checksum.
         * @param  checksum  String value for checksum.
         * @return Builder
         */
        public Builder checksum(String checksum) {
            this.checksum = checksum;
            return this;
        }

        /**
         * Setter for bootMode.
         * @param  bootMode  BootModeEnum value for bootMode.
         * @return Builder
         */
        public Builder bootMode(BootModeEnum bootMode) {
            this.bootMode = bootMode;
            return this;
        }

        /**
         * Setter for id.
         * @param  id  UUID value for id.
         * @return Builder
         */
        public Builder id(UUID id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for zones.
         * @param  zones  List of ZoneNameEnum value for zones.
         * @return Builder
         */
        public Builder zones(List<ZoneNameEnum> zones) {
            this.zones = zones;
            return this;
        }

        /**
         * Setter for url.
         * @param  url  String value for url.
         * @return Builder
         */
        public Builder url(String url) {
            this.url = url;
            return this;
        }

        /**
         * Setter for version.
         * @param  version  String value for version.
         * @return Builder
         */
        public Builder version(String version) {
            this.version = version;
            return this;
        }

        /**
         * Setter for createdAt.
         * @param  createdAt  LocalDateTime value for createdAt.
         * @return Builder
         */
        public Builder createdAt(LocalDateTime createdAt) {
            this.createdAt = createdAt;
            return this;
        }

        /**
         * Setter for visibility.
         * @param  visibility  Visibility1Enum value for visibility.
         * @return Builder
         */
        public Builder visibility(Visibility1Enum visibility) {
            this.visibility = visibility;
            return this;
        }

        /**
         * Builds a new {@link Template} object using the set fields.
         * @return {@link Template}
         */
        public Template build() {
            return new Template(maintainer, description, sshKeyEnabled, family, name, defaultUser,
                    size, passwordEnabled, build, checksum, bootMode, id, zones, url, version,
                    createdAt, visibility);
        }
    }
}
