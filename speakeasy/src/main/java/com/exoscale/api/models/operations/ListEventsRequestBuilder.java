/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.exoscale.api.models.operations;

import com.exoscale.api.models.errors.SDKError;
import com.exoscale.api.utils.LazySingletonValue;
import com.exoscale.api.utils.Utils;
import com.fasterxml.jackson.core.type.TypeReference;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.Optional;
import java.util.stream.Stream;
import org.openapitools.jackson.nullable.JsonNullable;


public class ListEventsRequestBuilder {

    private Optional<? extends OffsetDateTime> from = Optional.empty();
    private Optional<? extends OffsetDateTime> to = Optional.empty();
    private final SDKMethodInterfaces.MethodCallListEvents sdk;

    public ListEventsRequestBuilder(SDKMethodInterfaces.MethodCallListEvents sdk) {
        this.sdk = sdk;
    }
                
    public ListEventsRequestBuilder from(OffsetDateTime from) {
        Utils.checkNotNull(from, "from");
        this.from = Optional.of(from);
        return this;
    }

    public ListEventsRequestBuilder from(Optional<? extends OffsetDateTime> from) {
        Utils.checkNotNull(from, "from");
        this.from = from;
        return this;
    }
                
    public ListEventsRequestBuilder to(OffsetDateTime to) {
        Utils.checkNotNull(to, "to");
        this.to = Optional.of(to);
        return this;
    }

    public ListEventsRequestBuilder to(Optional<? extends OffsetDateTime> to) {
        Utils.checkNotNull(to, "to");
        this.to = to;
        return this;
    }

    public ListEventsResponse call() throws Exception {

        return sdk.listEvents(
            from,
            to);
    }
}
