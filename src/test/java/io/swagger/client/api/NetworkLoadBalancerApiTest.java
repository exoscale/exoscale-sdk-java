/*
 * Exoscale Public API
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * OpenAPI spec version: 2.0.0
 * Contact: api@exoscale.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.IdServiceBody;
import io.swagger.client.model.InlineResponse2001;
import io.swagger.client.model.LoadBalancer;
import io.swagger.client.model.LoadBalancerService;
import io.swagger.client.model.LoadbalancerBody;
import io.swagger.client.model.LoadbalancerIdBody;
import io.swagger.client.model.Operation;
import io.swagger.client.model.ServiceServiceidBody;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for NetworkLoadBalancerApi
 */
@Ignore
public class NetworkLoadBalancerApiTest {

    private final NetworkLoadBalancerApi api = new NetworkLoadBalancerApi();

    /**
     * Add a Load Balancer Service
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addServiceToLoadBalancerTest() {
        IdServiceBody body = null;
        UUID id = null;
        Operation response = api.addServiceToLoadBalancer(body, id);

        // TODO: test validations
    }
    /**
     * Create a Load Balancer
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createLoadBalancerTest() {
        LoadbalancerBody body = null;
        Operation response = api.createLoadBalancer(body);

        // TODO: test validations
    }
    /**
     * Delete a Load Balancer
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteLoadBalancerTest() {
        UUID id = null;
        Operation response = api.deleteLoadBalancer(id);

        // TODO: test validations
    }
    /**
     * Delete a Load Balancer Service
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteLoadBalancerServiceTest() {
        UUID id = null;
        UUID serviceId = null;
        Operation response = api.deleteLoadBalancerService(id, serviceId);

        // TODO: test validations
    }
    /**
     * Retrieve Load Balancer details
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getLoadBalancerTest() {
        UUID id = null;
        LoadBalancer response = api.getLoadBalancer(id);

        // TODO: test validations
    }
    /**
     * Retrieve Load Balancer Service details
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getLoadBalancerServiceTest() {
        UUID id = null;
        UUID serviceId = null;
        LoadBalancerService response = api.getLoadBalancerService(id, serviceId);

        // TODO: test validations
    }
    /**
     * List Load Balancers
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listLoadBalancersTest() {
        InlineResponse2001 response = api.listLoadBalancers();

        // TODO: test validations
    }
    /**
     * Reset a Load Balancer field to its default value
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void resetLoadBalancerFieldTest() {
        UUID id = null;
        String field = null;
        Operation response = api.resetLoadBalancerField(id, field);

        // TODO: test validations
    }
    /**
     * Reset a Load Balancer Service field to its default value
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void resetLoadBalancerServiceFieldTest() {
        UUID id = null;
        UUID serviceId = null;
        String field = null;
        Operation response = api.resetLoadBalancerServiceField(id, serviceId, field);

        // TODO: test validations
    }
    /**
     * Update a Load Balancer
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateLoadBalancerTest() {
        LoadbalancerIdBody body = null;
        UUID id = null;
        Operation response = api.updateLoadBalancer(body, id);

        // TODO: test validations
    }
    /**
     * Update a Load Balancer Service
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateLoadBalancerServiceTest() {
        ServiceServiceidBody body = null;
        UUID id = null;
        UUID serviceId = null;
        Operation response = api.updateLoadBalancerService(body, id, serviceId);

        // TODO: test validations
    }
}
