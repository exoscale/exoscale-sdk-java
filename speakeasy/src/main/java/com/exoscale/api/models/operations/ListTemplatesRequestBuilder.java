/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.exoscale.api.models.operations;

import com.exoscale.api.models.errors.SDKError;
import com.exoscale.api.utils.LazySingletonValue;
import com.exoscale.api.utils.Utils;
import com.fasterxml.jackson.core.type.TypeReference;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.Optional;
import java.util.stream.Stream;
import org.openapitools.jackson.nullable.JsonNullable;


public class ListTemplatesRequestBuilder {

    private Optional<? extends QueryParamVisibility> visibility = Optional.empty();
    private Optional<? extends String> family = Optional.empty();
    private final SDKMethodInterfaces.MethodCallListTemplates sdk;

    public ListTemplatesRequestBuilder(SDKMethodInterfaces.MethodCallListTemplates sdk) {
        this.sdk = sdk;
    }
                
    public ListTemplatesRequestBuilder visibility(QueryParamVisibility visibility) {
        Utils.checkNotNull(visibility, "visibility");
        this.visibility = Optional.of(visibility);
        return this;
    }

    public ListTemplatesRequestBuilder visibility(Optional<? extends QueryParamVisibility> visibility) {
        Utils.checkNotNull(visibility, "visibility");
        this.visibility = visibility;
        return this;
    }
                
    public ListTemplatesRequestBuilder family(String family) {
        Utils.checkNotNull(family, "family");
        this.family = Optional.of(family);
        return this;
    }

    public ListTemplatesRequestBuilder family(Optional<? extends String> family) {
        Utils.checkNotNull(family, "family");
        this.family = family;
        return this;
    }

    public ListTemplatesResponse call() throws Exception {

        return sdk.listTemplates(
            visibility,
            family);
    }
}
