/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.exoscale.api.models.operations;

import com.exoscale.api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;


public class UpdateInstancePoolRequestBody {

    /**
     * Instance Pool Anti-affinity Groups
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("anti-affinity-groups")
    private JsonNullable<? extends java.util.List<com.exoscale.api.models.components.AntiAffinityGroupInput>> antiAffinityGroups;

    /**
     * Instance Pool description
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    private Optional<? extends String> description;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("public-ip-assignment")
    private Optional<? extends com.exoscale.api.models.components.PublicIpAssignment> publicIpAssignment;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    private Optional<? extends java.util.Map<String, String>> labels;

    /**
     * Instance Pool Security Groups
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("security-groups")
    private JsonNullable<? extends java.util.List<com.exoscale.api.models.components.SecurityGroupInput>> securityGroups;

    /**
     * Instances Elastic IPs
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("elastic-ips")
    private JsonNullable<? extends java.util.List<com.exoscale.api.models.components.ElasticIpInput>> elasticIps;

    /**
     * Instance Pool name
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    private Optional<? extends String> name;

    /**
     * Compute instance type
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("instance-type")
    private Optional<? extends com.exoscale.api.models.components.InstanceTypeInput> instanceType;

    /**
     * Minimum number of running Instances
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("min-available")
    private JsonNullable<? extends Long> minAvailable;

    /**
     * Instance Pool Private Networks
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("private-networks")
    private JsonNullable<? extends java.util.List<com.exoscale.api.models.components.PrivateNetworkInput>> privateNetworks;

    /**
     * Instance template
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("template")
    private Optional<? extends com.exoscale.api.models.components.TemplateInput> template;

    /**
     * SSH key
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ssh-key")
    private Optional<? extends com.exoscale.api.models.components.SshKeyInput> sshKey;

    /**
     * Prefix to apply to Instances names (default: pool)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("instance-prefix")
    private JsonNullable<? extends String> instancePrefix;

    /**
     * Instances Cloud-init user-data
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user-data")
    private JsonNullable<? extends String> userData;

    /**
     * Deploy target
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deploy-target")
    private Optional<? extends com.exoscale.api.models.components.DeployTarget> deployTarget;

    /**
     * Enable IPv6. DEPRECATED: use `public-ip-assignments`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ipv6-enabled")
    private Optional<? extends Boolean> ipv6Enabled;

    /**
     * Instances disk size in GB
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("disk-size")
    private Optional<? extends Long> diskSize;

    /**
     * Instances SSH keys
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ssh-keys")
    private JsonNullable<? extends java.util.List<com.exoscale.api.models.components.SshKeyInput>> sshKeys;

    public UpdateInstancePoolRequestBody(
            @JsonProperty("anti-affinity-groups") JsonNullable<? extends java.util.List<com.exoscale.api.models.components.AntiAffinityGroupInput>> antiAffinityGroups,
            @JsonProperty("description") Optional<? extends String> description,
            @JsonProperty("public-ip-assignment") Optional<? extends com.exoscale.api.models.components.PublicIpAssignment> publicIpAssignment,
            @JsonProperty("labels") Optional<? extends java.util.Map<String, String>> labels,
            @JsonProperty("security-groups") JsonNullable<? extends java.util.List<com.exoscale.api.models.components.SecurityGroupInput>> securityGroups,
            @JsonProperty("elastic-ips") JsonNullable<? extends java.util.List<com.exoscale.api.models.components.ElasticIpInput>> elasticIps,
            @JsonProperty("name") Optional<? extends String> name,
            @JsonProperty("instance-type") Optional<? extends com.exoscale.api.models.components.InstanceTypeInput> instanceType,
            @JsonProperty("min-available") JsonNullable<? extends Long> minAvailable,
            @JsonProperty("private-networks") JsonNullable<? extends java.util.List<com.exoscale.api.models.components.PrivateNetworkInput>> privateNetworks,
            @JsonProperty("template") Optional<? extends com.exoscale.api.models.components.TemplateInput> template,
            @JsonProperty("ssh-key") Optional<? extends com.exoscale.api.models.components.SshKeyInput> sshKey,
            @JsonProperty("instance-prefix") JsonNullable<? extends String> instancePrefix,
            @JsonProperty("user-data") JsonNullable<? extends String> userData,
            @JsonProperty("deploy-target") Optional<? extends com.exoscale.api.models.components.DeployTarget> deployTarget,
            @JsonProperty("ipv6-enabled") Optional<? extends Boolean> ipv6Enabled,
            @JsonProperty("disk-size") Optional<? extends Long> diskSize,
            @JsonProperty("ssh-keys") JsonNullable<? extends java.util.List<com.exoscale.api.models.components.SshKeyInput>> sshKeys) {
        Utils.checkNotNull(antiAffinityGroups, "antiAffinityGroups");
        Utils.checkNotNull(description, "description");
        Utils.checkNotNull(publicIpAssignment, "publicIpAssignment");
        Utils.checkNotNull(labels, "labels");
        Utils.checkNotNull(securityGroups, "securityGroups");
        Utils.checkNotNull(elasticIps, "elasticIps");
        Utils.checkNotNull(name, "name");
        Utils.checkNotNull(instanceType, "instanceType");
        Utils.checkNotNull(minAvailable, "minAvailable");
        Utils.checkNotNull(privateNetworks, "privateNetworks");
        Utils.checkNotNull(template, "template");
        Utils.checkNotNull(sshKey, "sshKey");
        Utils.checkNotNull(instancePrefix, "instancePrefix");
        Utils.checkNotNull(userData, "userData");
        Utils.checkNotNull(deployTarget, "deployTarget");
        Utils.checkNotNull(ipv6Enabled, "ipv6Enabled");
        Utils.checkNotNull(diskSize, "diskSize");
        Utils.checkNotNull(sshKeys, "sshKeys");
        this.antiAffinityGroups = antiAffinityGroups;
        this.description = description;
        this.publicIpAssignment = publicIpAssignment;
        this.labels = labels;
        this.securityGroups = securityGroups;
        this.elasticIps = elasticIps;
        this.name = name;
        this.instanceType = instanceType;
        this.minAvailable = minAvailable;
        this.privateNetworks = privateNetworks;
        this.template = template;
        this.sshKey = sshKey;
        this.instancePrefix = instancePrefix;
        this.userData = userData;
        this.deployTarget = deployTarget;
        this.ipv6Enabled = ipv6Enabled;
        this.diskSize = diskSize;
        this.sshKeys = sshKeys;
    }

    /**
     * Instance Pool Anti-affinity Groups
     */
    public JsonNullable<? extends java.util.List<com.exoscale.api.models.components.AntiAffinityGroupInput>> antiAffinityGroups() {
        return antiAffinityGroups;
    }

    /**
     * Instance Pool description
     */
    public Optional<? extends String> description() {
        return description;
    }

    public Optional<? extends com.exoscale.api.models.components.PublicIpAssignment> publicIpAssignment() {
        return publicIpAssignment;
    }

    public Optional<? extends java.util.Map<String, String>> labels() {
        return labels;
    }

    /**
     * Instance Pool Security Groups
     */
    public JsonNullable<? extends java.util.List<com.exoscale.api.models.components.SecurityGroupInput>> securityGroups() {
        return securityGroups;
    }

    /**
     * Instances Elastic IPs
     */
    public JsonNullable<? extends java.util.List<com.exoscale.api.models.components.ElasticIpInput>> elasticIps() {
        return elasticIps;
    }

    /**
     * Instance Pool name
     */
    public Optional<? extends String> name() {
        return name;
    }

    /**
     * Compute instance type
     */
    public Optional<? extends com.exoscale.api.models.components.InstanceTypeInput> instanceType() {
        return instanceType;
    }

    /**
     * Minimum number of running Instances
     */
    public JsonNullable<? extends Long> minAvailable() {
        return minAvailable;
    }

    /**
     * Instance Pool Private Networks
     */
    public JsonNullable<? extends java.util.List<com.exoscale.api.models.components.PrivateNetworkInput>> privateNetworks() {
        return privateNetworks;
    }

    /**
     * Instance template
     */
    public Optional<? extends com.exoscale.api.models.components.TemplateInput> template() {
        return template;
    }

    /**
     * SSH key
     */
    public Optional<? extends com.exoscale.api.models.components.SshKeyInput> sshKey() {
        return sshKey;
    }

    /**
     * Prefix to apply to Instances names (default: pool)
     */
    public JsonNullable<? extends String> instancePrefix() {
        return instancePrefix;
    }

    /**
     * Instances Cloud-init user-data
     */
    public JsonNullable<? extends String> userData() {
        return userData;
    }

    /**
     * Deploy target
     */
    public Optional<? extends com.exoscale.api.models.components.DeployTarget> deployTarget() {
        return deployTarget;
    }

    /**
     * Enable IPv6. DEPRECATED: use `public-ip-assignments`.
     */
    public Optional<? extends Boolean> ipv6Enabled() {
        return ipv6Enabled;
    }

    /**
     * Instances disk size in GB
     */
    public Optional<? extends Long> diskSize() {
        return diskSize;
    }

    /**
     * Instances SSH keys
     */
    public JsonNullable<? extends java.util.List<com.exoscale.api.models.components.SshKeyInput>> sshKeys() {
        return sshKeys;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * Instance Pool Anti-affinity Groups
     */
    public UpdateInstancePoolRequestBody withAntiAffinityGroups(java.util.List<com.exoscale.api.models.components.AntiAffinityGroupInput> antiAffinityGroups) {
        Utils.checkNotNull(antiAffinityGroups, "antiAffinityGroups");
        this.antiAffinityGroups = JsonNullable.of(antiAffinityGroups);
        return this;
    }

    /**
     * Instance Pool Anti-affinity Groups
     */
    public UpdateInstancePoolRequestBody withAntiAffinityGroups(JsonNullable<? extends java.util.List<com.exoscale.api.models.components.AntiAffinityGroupInput>> antiAffinityGroups) {
        Utils.checkNotNull(antiAffinityGroups, "antiAffinityGroups");
        this.antiAffinityGroups = antiAffinityGroups;
        return this;
    }

    /**
     * Instance Pool description
     */
    public UpdateInstancePoolRequestBody withDescription(String description) {
        Utils.checkNotNull(description, "description");
        this.description = Optional.ofNullable(description);
        return this;
    }

    /**
     * Instance Pool description
     */
    public UpdateInstancePoolRequestBody withDescription(Optional<? extends String> description) {
        Utils.checkNotNull(description, "description");
        this.description = description;
        return this;
    }

    public UpdateInstancePoolRequestBody withPublicIpAssignment(com.exoscale.api.models.components.PublicIpAssignment publicIpAssignment) {
        Utils.checkNotNull(publicIpAssignment, "publicIpAssignment");
        this.publicIpAssignment = Optional.ofNullable(publicIpAssignment);
        return this;
    }

    public UpdateInstancePoolRequestBody withPublicIpAssignment(Optional<? extends com.exoscale.api.models.components.PublicIpAssignment> publicIpAssignment) {
        Utils.checkNotNull(publicIpAssignment, "publicIpAssignment");
        this.publicIpAssignment = publicIpAssignment;
        return this;
    }

    public UpdateInstancePoolRequestBody withLabels(java.util.Map<String, String> labels) {
        Utils.checkNotNull(labels, "labels");
        this.labels = Optional.ofNullable(labels);
        return this;
    }

    public UpdateInstancePoolRequestBody withLabels(Optional<? extends java.util.Map<String, String>> labels) {
        Utils.checkNotNull(labels, "labels");
        this.labels = labels;
        return this;
    }

    /**
     * Instance Pool Security Groups
     */
    public UpdateInstancePoolRequestBody withSecurityGroups(java.util.List<com.exoscale.api.models.components.SecurityGroupInput> securityGroups) {
        Utils.checkNotNull(securityGroups, "securityGroups");
        this.securityGroups = JsonNullable.of(securityGroups);
        return this;
    }

    /**
     * Instance Pool Security Groups
     */
    public UpdateInstancePoolRequestBody withSecurityGroups(JsonNullable<? extends java.util.List<com.exoscale.api.models.components.SecurityGroupInput>> securityGroups) {
        Utils.checkNotNull(securityGroups, "securityGroups");
        this.securityGroups = securityGroups;
        return this;
    }

    /**
     * Instances Elastic IPs
     */
    public UpdateInstancePoolRequestBody withElasticIps(java.util.List<com.exoscale.api.models.components.ElasticIpInput> elasticIps) {
        Utils.checkNotNull(elasticIps, "elasticIps");
        this.elasticIps = JsonNullable.of(elasticIps);
        return this;
    }

    /**
     * Instances Elastic IPs
     */
    public UpdateInstancePoolRequestBody withElasticIps(JsonNullable<? extends java.util.List<com.exoscale.api.models.components.ElasticIpInput>> elasticIps) {
        Utils.checkNotNull(elasticIps, "elasticIps");
        this.elasticIps = elasticIps;
        return this;
    }

    /**
     * Instance Pool name
     */
    public UpdateInstancePoolRequestBody withName(String name) {
        Utils.checkNotNull(name, "name");
        this.name = Optional.ofNullable(name);
        return this;
    }

    /**
     * Instance Pool name
     */
    public UpdateInstancePoolRequestBody withName(Optional<? extends String> name) {
        Utils.checkNotNull(name, "name");
        this.name = name;
        return this;
    }

    /**
     * Compute instance type
     */
    public UpdateInstancePoolRequestBody withInstanceType(com.exoscale.api.models.components.InstanceTypeInput instanceType) {
        Utils.checkNotNull(instanceType, "instanceType");
        this.instanceType = Optional.ofNullable(instanceType);
        return this;
    }

    /**
     * Compute instance type
     */
    public UpdateInstancePoolRequestBody withInstanceType(Optional<? extends com.exoscale.api.models.components.InstanceTypeInput> instanceType) {
        Utils.checkNotNull(instanceType, "instanceType");
        this.instanceType = instanceType;
        return this;
    }

    /**
     * Minimum number of running Instances
     */
    public UpdateInstancePoolRequestBody withMinAvailable(long minAvailable) {
        Utils.checkNotNull(minAvailable, "minAvailable");
        this.minAvailable = JsonNullable.of(minAvailable);
        return this;
    }

    /**
     * Minimum number of running Instances
     */
    public UpdateInstancePoolRequestBody withMinAvailable(JsonNullable<? extends Long> minAvailable) {
        Utils.checkNotNull(minAvailable, "minAvailable");
        this.minAvailable = minAvailable;
        return this;
    }

    /**
     * Instance Pool Private Networks
     */
    public UpdateInstancePoolRequestBody withPrivateNetworks(java.util.List<com.exoscale.api.models.components.PrivateNetworkInput> privateNetworks) {
        Utils.checkNotNull(privateNetworks, "privateNetworks");
        this.privateNetworks = JsonNullable.of(privateNetworks);
        return this;
    }

    /**
     * Instance Pool Private Networks
     */
    public UpdateInstancePoolRequestBody withPrivateNetworks(JsonNullable<? extends java.util.List<com.exoscale.api.models.components.PrivateNetworkInput>> privateNetworks) {
        Utils.checkNotNull(privateNetworks, "privateNetworks");
        this.privateNetworks = privateNetworks;
        return this;
    }

    /**
     * Instance template
     */
    public UpdateInstancePoolRequestBody withTemplate(com.exoscale.api.models.components.TemplateInput template) {
        Utils.checkNotNull(template, "template");
        this.template = Optional.ofNullable(template);
        return this;
    }

    /**
     * Instance template
     */
    public UpdateInstancePoolRequestBody withTemplate(Optional<? extends com.exoscale.api.models.components.TemplateInput> template) {
        Utils.checkNotNull(template, "template");
        this.template = template;
        return this;
    }

    /**
     * SSH key
     */
    public UpdateInstancePoolRequestBody withSshKey(com.exoscale.api.models.components.SshKeyInput sshKey) {
        Utils.checkNotNull(sshKey, "sshKey");
        this.sshKey = Optional.ofNullable(sshKey);
        return this;
    }

    /**
     * SSH key
     */
    public UpdateInstancePoolRequestBody withSshKey(Optional<? extends com.exoscale.api.models.components.SshKeyInput> sshKey) {
        Utils.checkNotNull(sshKey, "sshKey");
        this.sshKey = sshKey;
        return this;
    }

    /**
     * Prefix to apply to Instances names (default: pool)
     */
    public UpdateInstancePoolRequestBody withInstancePrefix(String instancePrefix) {
        Utils.checkNotNull(instancePrefix, "instancePrefix");
        this.instancePrefix = JsonNullable.of(instancePrefix);
        return this;
    }

    /**
     * Prefix to apply to Instances names (default: pool)
     */
    public UpdateInstancePoolRequestBody withInstancePrefix(JsonNullable<? extends String> instancePrefix) {
        Utils.checkNotNull(instancePrefix, "instancePrefix");
        this.instancePrefix = instancePrefix;
        return this;
    }

    /**
     * Instances Cloud-init user-data
     */
    public UpdateInstancePoolRequestBody withUserData(String userData) {
        Utils.checkNotNull(userData, "userData");
        this.userData = JsonNullable.of(userData);
        return this;
    }

    /**
     * Instances Cloud-init user-data
     */
    public UpdateInstancePoolRequestBody withUserData(JsonNullable<? extends String> userData) {
        Utils.checkNotNull(userData, "userData");
        this.userData = userData;
        return this;
    }

    /**
     * Deploy target
     */
    public UpdateInstancePoolRequestBody withDeployTarget(com.exoscale.api.models.components.DeployTarget deployTarget) {
        Utils.checkNotNull(deployTarget, "deployTarget");
        this.deployTarget = Optional.ofNullable(deployTarget);
        return this;
    }

    /**
     * Deploy target
     */
    public UpdateInstancePoolRequestBody withDeployTarget(Optional<? extends com.exoscale.api.models.components.DeployTarget> deployTarget) {
        Utils.checkNotNull(deployTarget, "deployTarget");
        this.deployTarget = deployTarget;
        return this;
    }

    /**
     * Enable IPv6. DEPRECATED: use `public-ip-assignments`.
     */
    public UpdateInstancePoolRequestBody withIpv6Enabled(boolean ipv6Enabled) {
        Utils.checkNotNull(ipv6Enabled, "ipv6Enabled");
        this.ipv6Enabled = Optional.ofNullable(ipv6Enabled);
        return this;
    }

    /**
     * Enable IPv6. DEPRECATED: use `public-ip-assignments`.
     */
    public UpdateInstancePoolRequestBody withIpv6Enabled(Optional<? extends Boolean> ipv6Enabled) {
        Utils.checkNotNull(ipv6Enabled, "ipv6Enabled");
        this.ipv6Enabled = ipv6Enabled;
        return this;
    }

    /**
     * Instances disk size in GB
     */
    public UpdateInstancePoolRequestBody withDiskSize(long diskSize) {
        Utils.checkNotNull(diskSize, "diskSize");
        this.diskSize = Optional.ofNullable(diskSize);
        return this;
    }

    /**
     * Instances disk size in GB
     */
    public UpdateInstancePoolRequestBody withDiskSize(Optional<? extends Long> diskSize) {
        Utils.checkNotNull(diskSize, "diskSize");
        this.diskSize = diskSize;
        return this;
    }

    /**
     * Instances SSH keys
     */
    public UpdateInstancePoolRequestBody withSshKeys(java.util.List<com.exoscale.api.models.components.SshKeyInput> sshKeys) {
        Utils.checkNotNull(sshKeys, "sshKeys");
        this.sshKeys = JsonNullable.of(sshKeys);
        return this;
    }

    /**
     * Instances SSH keys
     */
    public UpdateInstancePoolRequestBody withSshKeys(JsonNullable<? extends java.util.List<com.exoscale.api.models.components.SshKeyInput>> sshKeys) {
        Utils.checkNotNull(sshKeys, "sshKeys");
        this.sshKeys = sshKeys;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        UpdateInstancePoolRequestBody other = (UpdateInstancePoolRequestBody) o;
        return 
            java.util.Objects.deepEquals(this.antiAffinityGroups, other.antiAffinityGroups) &&
            java.util.Objects.deepEquals(this.description, other.description) &&
            java.util.Objects.deepEquals(this.publicIpAssignment, other.publicIpAssignment) &&
            java.util.Objects.deepEquals(this.labels, other.labels) &&
            java.util.Objects.deepEquals(this.securityGroups, other.securityGroups) &&
            java.util.Objects.deepEquals(this.elasticIps, other.elasticIps) &&
            java.util.Objects.deepEquals(this.name, other.name) &&
            java.util.Objects.deepEquals(this.instanceType, other.instanceType) &&
            java.util.Objects.deepEquals(this.minAvailable, other.minAvailable) &&
            java.util.Objects.deepEquals(this.privateNetworks, other.privateNetworks) &&
            java.util.Objects.deepEquals(this.template, other.template) &&
            java.util.Objects.deepEquals(this.sshKey, other.sshKey) &&
            java.util.Objects.deepEquals(this.instancePrefix, other.instancePrefix) &&
            java.util.Objects.deepEquals(this.userData, other.userData) &&
            java.util.Objects.deepEquals(this.deployTarget, other.deployTarget) &&
            java.util.Objects.deepEquals(this.ipv6Enabled, other.ipv6Enabled) &&
            java.util.Objects.deepEquals(this.diskSize, other.diskSize) &&
            java.util.Objects.deepEquals(this.sshKeys, other.sshKeys);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            antiAffinityGroups,
            description,
            publicIpAssignment,
            labels,
            securityGroups,
            elasticIps,
            name,
            instanceType,
            minAvailable,
            privateNetworks,
            template,
            sshKey,
            instancePrefix,
            userData,
            deployTarget,
            ipv6Enabled,
            diskSize,
            sshKeys);
    }
    
    @Override
    public String toString() {
        return Utils.toString(UpdateInstancePoolRequestBody.class,
                "antiAffinityGroups", antiAffinityGroups,
                "description", description,
                "publicIpAssignment", publicIpAssignment,
                "labels", labels,
                "securityGroups", securityGroups,
                "elasticIps", elasticIps,
                "name", name,
                "instanceType", instanceType,
                "minAvailable", minAvailable,
                "privateNetworks", privateNetworks,
                "template", template,
                "sshKey", sshKey,
                "instancePrefix", instancePrefix,
                "userData", userData,
                "deployTarget", deployTarget,
                "ipv6Enabled", ipv6Enabled,
                "diskSize", diskSize,
                "sshKeys", sshKeys);
    }
    
    public final static class Builder {
 
        private JsonNullable<? extends java.util.List<com.exoscale.api.models.components.AntiAffinityGroupInput>> antiAffinityGroups = JsonNullable.undefined();
 
        private Optional<? extends String> description = Optional.empty();
 
        private Optional<? extends com.exoscale.api.models.components.PublicIpAssignment> publicIpAssignment = Optional.empty();
 
        private Optional<? extends java.util.Map<String, String>> labels = Optional.empty();
 
        private JsonNullable<? extends java.util.List<com.exoscale.api.models.components.SecurityGroupInput>> securityGroups = JsonNullable.undefined();
 
        private JsonNullable<? extends java.util.List<com.exoscale.api.models.components.ElasticIpInput>> elasticIps = JsonNullable.undefined();
 
        private Optional<? extends String> name = Optional.empty();
 
        private Optional<? extends com.exoscale.api.models.components.InstanceTypeInput> instanceType = Optional.empty();
 
        private JsonNullable<? extends Long> minAvailable = JsonNullable.undefined();
 
        private JsonNullable<? extends java.util.List<com.exoscale.api.models.components.PrivateNetworkInput>> privateNetworks = JsonNullable.undefined();
 
        private Optional<? extends com.exoscale.api.models.components.TemplateInput> template = Optional.empty();
 
        private Optional<? extends com.exoscale.api.models.components.SshKeyInput> sshKey = Optional.empty();
 
        private JsonNullable<? extends String> instancePrefix = JsonNullable.undefined();
 
        private JsonNullable<? extends String> userData = JsonNullable.undefined();
 
        private Optional<? extends com.exoscale.api.models.components.DeployTarget> deployTarget = Optional.empty();
 
        private Optional<? extends Boolean> ipv6Enabled = Optional.empty();
 
        private Optional<? extends Long> diskSize = Optional.empty();
 
        private JsonNullable<? extends java.util.List<com.exoscale.api.models.components.SshKeyInput>> sshKeys = JsonNullable.undefined();  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * Instance Pool Anti-affinity Groups
         */
        public Builder antiAffinityGroups(java.util.List<com.exoscale.api.models.components.AntiAffinityGroupInput> antiAffinityGroups) {
            Utils.checkNotNull(antiAffinityGroups, "antiAffinityGroups");
            this.antiAffinityGroups = JsonNullable.of(antiAffinityGroups);
            return this;
        }

        /**
         * Instance Pool Anti-affinity Groups
         */
        public Builder antiAffinityGroups(JsonNullable<? extends java.util.List<com.exoscale.api.models.components.AntiAffinityGroupInput>> antiAffinityGroups) {
            Utils.checkNotNull(antiAffinityGroups, "antiAffinityGroups");
            this.antiAffinityGroups = antiAffinityGroups;
            return this;
        }

        /**
         * Instance Pool description
         */
        public Builder description(String description) {
            Utils.checkNotNull(description, "description");
            this.description = Optional.ofNullable(description);
            return this;
        }

        /**
         * Instance Pool description
         */
        public Builder description(Optional<? extends String> description) {
            Utils.checkNotNull(description, "description");
            this.description = description;
            return this;
        }

        public Builder publicIpAssignment(com.exoscale.api.models.components.PublicIpAssignment publicIpAssignment) {
            Utils.checkNotNull(publicIpAssignment, "publicIpAssignment");
            this.publicIpAssignment = Optional.ofNullable(publicIpAssignment);
            return this;
        }

        public Builder publicIpAssignment(Optional<? extends com.exoscale.api.models.components.PublicIpAssignment> publicIpAssignment) {
            Utils.checkNotNull(publicIpAssignment, "publicIpAssignment");
            this.publicIpAssignment = publicIpAssignment;
            return this;
        }

        public Builder labels(java.util.Map<String, String> labels) {
            Utils.checkNotNull(labels, "labels");
            this.labels = Optional.ofNullable(labels);
            return this;
        }

        public Builder labels(Optional<? extends java.util.Map<String, String>> labels) {
            Utils.checkNotNull(labels, "labels");
            this.labels = labels;
            return this;
        }

        /**
         * Instance Pool Security Groups
         */
        public Builder securityGroups(java.util.List<com.exoscale.api.models.components.SecurityGroupInput> securityGroups) {
            Utils.checkNotNull(securityGroups, "securityGroups");
            this.securityGroups = JsonNullable.of(securityGroups);
            return this;
        }

        /**
         * Instance Pool Security Groups
         */
        public Builder securityGroups(JsonNullable<? extends java.util.List<com.exoscale.api.models.components.SecurityGroupInput>> securityGroups) {
            Utils.checkNotNull(securityGroups, "securityGroups");
            this.securityGroups = securityGroups;
            return this;
        }

        /**
         * Instances Elastic IPs
         */
        public Builder elasticIps(java.util.List<com.exoscale.api.models.components.ElasticIpInput> elasticIps) {
            Utils.checkNotNull(elasticIps, "elasticIps");
            this.elasticIps = JsonNullable.of(elasticIps);
            return this;
        }

        /**
         * Instances Elastic IPs
         */
        public Builder elasticIps(JsonNullable<? extends java.util.List<com.exoscale.api.models.components.ElasticIpInput>> elasticIps) {
            Utils.checkNotNull(elasticIps, "elasticIps");
            this.elasticIps = elasticIps;
            return this;
        }

        /**
         * Instance Pool name
         */
        public Builder name(String name) {
            Utils.checkNotNull(name, "name");
            this.name = Optional.ofNullable(name);
            return this;
        }

        /**
         * Instance Pool name
         */
        public Builder name(Optional<? extends String> name) {
            Utils.checkNotNull(name, "name");
            this.name = name;
            return this;
        }

        /**
         * Compute instance type
         */
        public Builder instanceType(com.exoscale.api.models.components.InstanceTypeInput instanceType) {
            Utils.checkNotNull(instanceType, "instanceType");
            this.instanceType = Optional.ofNullable(instanceType);
            return this;
        }

        /**
         * Compute instance type
         */
        public Builder instanceType(Optional<? extends com.exoscale.api.models.components.InstanceTypeInput> instanceType) {
            Utils.checkNotNull(instanceType, "instanceType");
            this.instanceType = instanceType;
            return this;
        }

        /**
         * Minimum number of running Instances
         */
        public Builder minAvailable(long minAvailable) {
            Utils.checkNotNull(minAvailable, "minAvailable");
            this.minAvailable = JsonNullable.of(minAvailable);
            return this;
        }

        /**
         * Minimum number of running Instances
         */
        public Builder minAvailable(JsonNullable<? extends Long> minAvailable) {
            Utils.checkNotNull(minAvailable, "minAvailable");
            this.minAvailable = minAvailable;
            return this;
        }

        /**
         * Instance Pool Private Networks
         */
        public Builder privateNetworks(java.util.List<com.exoscale.api.models.components.PrivateNetworkInput> privateNetworks) {
            Utils.checkNotNull(privateNetworks, "privateNetworks");
            this.privateNetworks = JsonNullable.of(privateNetworks);
            return this;
        }

        /**
         * Instance Pool Private Networks
         */
        public Builder privateNetworks(JsonNullable<? extends java.util.List<com.exoscale.api.models.components.PrivateNetworkInput>> privateNetworks) {
            Utils.checkNotNull(privateNetworks, "privateNetworks");
            this.privateNetworks = privateNetworks;
            return this;
        }

        /**
         * Instance template
         */
        public Builder template(com.exoscale.api.models.components.TemplateInput template) {
            Utils.checkNotNull(template, "template");
            this.template = Optional.ofNullable(template);
            return this;
        }

        /**
         * Instance template
         */
        public Builder template(Optional<? extends com.exoscale.api.models.components.TemplateInput> template) {
            Utils.checkNotNull(template, "template");
            this.template = template;
            return this;
        }

        /**
         * SSH key
         */
        public Builder sshKey(com.exoscale.api.models.components.SshKeyInput sshKey) {
            Utils.checkNotNull(sshKey, "sshKey");
            this.sshKey = Optional.ofNullable(sshKey);
            return this;
        }

        /**
         * SSH key
         */
        public Builder sshKey(Optional<? extends com.exoscale.api.models.components.SshKeyInput> sshKey) {
            Utils.checkNotNull(sshKey, "sshKey");
            this.sshKey = sshKey;
            return this;
        }

        /**
         * Prefix to apply to Instances names (default: pool)
         */
        public Builder instancePrefix(String instancePrefix) {
            Utils.checkNotNull(instancePrefix, "instancePrefix");
            this.instancePrefix = JsonNullable.of(instancePrefix);
            return this;
        }

        /**
         * Prefix to apply to Instances names (default: pool)
         */
        public Builder instancePrefix(JsonNullable<? extends String> instancePrefix) {
            Utils.checkNotNull(instancePrefix, "instancePrefix");
            this.instancePrefix = instancePrefix;
            return this;
        }

        /**
         * Instances Cloud-init user-data
         */
        public Builder userData(String userData) {
            Utils.checkNotNull(userData, "userData");
            this.userData = JsonNullable.of(userData);
            return this;
        }

        /**
         * Instances Cloud-init user-data
         */
        public Builder userData(JsonNullable<? extends String> userData) {
            Utils.checkNotNull(userData, "userData");
            this.userData = userData;
            return this;
        }

        /**
         * Deploy target
         */
        public Builder deployTarget(com.exoscale.api.models.components.DeployTarget deployTarget) {
            Utils.checkNotNull(deployTarget, "deployTarget");
            this.deployTarget = Optional.ofNullable(deployTarget);
            return this;
        }

        /**
         * Deploy target
         */
        public Builder deployTarget(Optional<? extends com.exoscale.api.models.components.DeployTarget> deployTarget) {
            Utils.checkNotNull(deployTarget, "deployTarget");
            this.deployTarget = deployTarget;
            return this;
        }

        /**
         * Enable IPv6. DEPRECATED: use `public-ip-assignments`.
         */
        public Builder ipv6Enabled(boolean ipv6Enabled) {
            Utils.checkNotNull(ipv6Enabled, "ipv6Enabled");
            this.ipv6Enabled = Optional.ofNullable(ipv6Enabled);
            return this;
        }

        /**
         * Enable IPv6. DEPRECATED: use `public-ip-assignments`.
         */
        public Builder ipv6Enabled(Optional<? extends Boolean> ipv6Enabled) {
            Utils.checkNotNull(ipv6Enabled, "ipv6Enabled");
            this.ipv6Enabled = ipv6Enabled;
            return this;
        }

        /**
         * Instances disk size in GB
         */
        public Builder diskSize(long diskSize) {
            Utils.checkNotNull(diskSize, "diskSize");
            this.diskSize = Optional.ofNullable(diskSize);
            return this;
        }

        /**
         * Instances disk size in GB
         */
        public Builder diskSize(Optional<? extends Long> diskSize) {
            Utils.checkNotNull(diskSize, "diskSize");
            this.diskSize = diskSize;
            return this;
        }

        /**
         * Instances SSH keys
         */
        public Builder sshKeys(java.util.List<com.exoscale.api.models.components.SshKeyInput> sshKeys) {
            Utils.checkNotNull(sshKeys, "sshKeys");
            this.sshKeys = JsonNullable.of(sshKeys);
            return this;
        }

        /**
         * Instances SSH keys
         */
        public Builder sshKeys(JsonNullable<? extends java.util.List<com.exoscale.api.models.components.SshKeyInput>> sshKeys) {
            Utils.checkNotNull(sshKeys, "sshKeys");
            this.sshKeys = sshKeys;
            return this;
        }
        
        public UpdateInstancePoolRequestBody build() {
            return new UpdateInstancePoolRequestBody(
                antiAffinityGroups,
                description,
                publicIpAssignment,
                labels,
                securityGroups,
                elasticIps,
                name,
                instanceType,
                minAvailable,
                privateNetworks,
                template,
                sshKey,
                instancePrefix,
                userData,
                deployTarget,
                ipv6Enabled,
                diskSize,
                sshKeys);
        }
    }
}

