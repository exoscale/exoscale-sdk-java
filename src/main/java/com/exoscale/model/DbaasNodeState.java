/*
 * Exoscale Public API
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@exoscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.exoscale.model;

import java.util.Objects;
import java.util.Arrays;
import com.exoscale.model.DbaasNodeStateProgressUpdate;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Automatic maintenance settings
 */
@JsonPropertyOrder({
  DbaasNodeState.JSON_PROPERTY_NAME,
  DbaasNodeState.JSON_PROPERTY_PROGRESS_UPDATES,
  DbaasNodeState.JSON_PROPERTY_ROLE,
  DbaasNodeState.JSON_PROPERTY_STATE
})
@JsonTypeName("dbaas-node-state")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-06T21:01:33.231699+01:00[Europe/Vienna]")
public class DbaasNodeState {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_PROGRESS_UPDATES = "progress-updates";
  private List<DbaasNodeStateProgressUpdate> progressUpdates;

  /**
   * Role of this node. Only returned for a subset of service types
   */
  public enum RoleEnum {
    STANDBY("standby"),
    
    MASTER("master"),
    
    READ_REPLICA("read-replica");

    private String value;

    RoleEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static RoleEnum fromValue(String value) {
      for (RoleEnum b : RoleEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ROLE = "role";
  private RoleEnum role;

  /**
   * Current state of the service node
   */
  public enum StateEnum {
    LEAVING("leaving"),
    
    RUNNING("running"),
    
    SYNCING_DATA("syncing_data"),
    
    SETTING_UP_VM("setting_up_vm"),
    
    UNKNOWN("unknown");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StateEnum fromValue(String value) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATE = "state";
  private StateEnum state;

  public DbaasNodeState() {
  }

  public DbaasNodeState name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name of the service node
   * @return name
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public DbaasNodeState progressUpdates(List<DbaasNodeStateProgressUpdate> progressUpdates) {
    
    this.progressUpdates = progressUpdates;
    return this;
  }

  public DbaasNodeState addProgressUpdatesItem(DbaasNodeStateProgressUpdate progressUpdatesItem) {
    if (this.progressUpdates == null) {
      this.progressUpdates = new ArrayList<>();
    }
    this.progressUpdates.add(progressUpdatesItem);
    return this;
  }

   /**
   * Extra information regarding the progress for current state
   * @return progressUpdates
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROGRESS_UPDATES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<DbaasNodeStateProgressUpdate> getProgressUpdates() {
    return progressUpdates;
  }


  @JsonProperty(JSON_PROPERTY_PROGRESS_UPDATES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProgressUpdates(List<DbaasNodeStateProgressUpdate> progressUpdates) {
    this.progressUpdates = progressUpdates;
  }


  public DbaasNodeState role(RoleEnum role) {
    
    this.role = role;
    return this;
  }

   /**
   * Role of this node. Only returned for a subset of service types
   * @return role
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ROLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RoleEnum getRole() {
    return role;
  }


  @JsonProperty(JSON_PROPERTY_ROLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRole(RoleEnum role) {
    this.role = role;
  }


  public DbaasNodeState state(StateEnum state) {
    
    this.state = state;
    return this;
  }

   /**
   * Current state of the service node
   * @return state
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public StateEnum getState() {
    return state;
  }


  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setState(StateEnum state) {
    this.state = state;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DbaasNodeState dbaasNodeState = (DbaasNodeState) o;
    return Objects.equals(this.name, dbaasNodeState.name) &&
        Objects.equals(this.progressUpdates, dbaasNodeState.progressUpdates) &&
        Objects.equals(this.role, dbaasNodeState.role) &&
        Objects.equals(this.state, dbaasNodeState.state);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, progressUpdates, role, state);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DbaasNodeState {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    progressUpdates: ").append(toIndentedString(progressUpdates)).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

