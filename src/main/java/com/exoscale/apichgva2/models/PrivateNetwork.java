/*
 * ExoscalePublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.exoscale.apichgva2.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;
import java.util.Map;
import java.util.UUID;

/**
 * This is a model class for PrivateNetwork type.
 */
public class PrivateNetwork {
    private UUID id;
    private String name;
    private String description;
    private String netmask;
    private String startIp;
    private String endIp;
    private List<PrivateNetworkLease> leases;
    private Map<String, String> labels;

    /**
     * Default constructor.
     */
    public PrivateNetwork() {
    }

    /**
     * Initialization constructor.
     * @param  id  UUID value for id.
     * @param  name  String value for name.
     * @param  description  String value for description.
     * @param  netmask  String value for netmask.
     * @param  startIp  String value for startIp.
     * @param  endIp  String value for endIp.
     * @param  leases  List of PrivateNetworkLease value for leases.
     * @param  labels  Map of String, value for labels.
     */
    public PrivateNetwork(
            UUID id,
            String name,
            String description,
            String netmask,
            String startIp,
            String endIp,
            List<PrivateNetworkLease> leases,
            Map<String, String> labels) {
        this.id = id;
        this.name = name;
        this.description = description;
        this.netmask = netmask;
        this.startIp = startIp;
        this.endIp = endIp;
        this.leases = leases;
        this.labels = labels;
    }

    /**
     * Getter for Id.
     * Private Network ID
     * @return Returns the UUID
     */
    @JsonGetter("id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public UUID getId() {
        return id;
    }

    /**
     * Setter for Id.
     * Private Network ID
     * @param id Value for UUID
     */
    @JsonSetter("id")
    public void setId(UUID id) {
        this.id = id;
    }

    /**
     * Getter for Name.
     * Private Network name
     * @return Returns the String
     */
    @JsonGetter("name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * Private Network name
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for Description.
     * Private Network description
     * @return Returns the String
     */
    @JsonGetter("description")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDescription() {
        return description;
    }

    /**
     * Setter for Description.
     * Private Network description
     * @param description Value for String
     */
    @JsonSetter("description")
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Getter for Netmask.
     * Private Network netmask
     * @return Returns the String
     */
    @JsonGetter("netmask")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getNetmask() {
        return netmask;
    }

    /**
     * Setter for Netmask.
     * Private Network netmask
     * @param netmask Value for String
     */
    @JsonSetter("netmask")
    public void setNetmask(String netmask) {
        this.netmask = netmask;
    }

    /**
     * Getter for StartIp.
     * Private Network start IP address
     * @return Returns the String
     */
    @JsonGetter("start-ip")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getStartIp() {
        return startIp;
    }

    /**
     * Setter for StartIp.
     * Private Network start IP address
     * @param startIp Value for String
     */
    @JsonSetter("start-ip")
    public void setStartIp(String startIp) {
        this.startIp = startIp;
    }

    /**
     * Getter for EndIp.
     * Private Network end IP address
     * @return Returns the String
     */
    @JsonGetter("end-ip")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getEndIp() {
        return endIp;
    }

    /**
     * Setter for EndIp.
     * Private Network end IP address
     * @param endIp Value for String
     */
    @JsonSetter("end-ip")
    public void setEndIp(String endIp) {
        this.endIp = endIp;
    }

    /**
     * Getter for Leases.
     * Private Network leased IP addresses
     * @return Returns the List of PrivateNetworkLease
     */
    @JsonGetter("leases")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<PrivateNetworkLease> getLeases() {
        return leases;
    }

    /**
     * Setter for Leases.
     * Private Network leased IP addresses
     * @param leases Value for List of PrivateNetworkLease
     */
    @JsonSetter("leases")
    public void setLeases(List<PrivateNetworkLease> leases) {
        this.leases = leases;
    }

    /**
     * Getter for Labels.
     * @return Returns the Map of String, String
     */
    @JsonGetter("labels")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Map<String, String> getLabels() {
        return labels;
    }

    /**
     * Setter for Labels.
     * @param labels Value for Map of String, String
     */
    @JsonSetter("labels")
    public void setLabels(Map<String, String> labels) {
        this.labels = labels;
    }

    /**
     * Converts this PrivateNetwork into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "PrivateNetwork [" + "id=" + id + ", name=" + name + ", description=" + description
                + ", netmask=" + netmask + ", startIp=" + startIp + ", endIp=" + endIp + ", leases="
                + leases + ", labels=" + labels + "]";
    }

    /**
     * Builds a new {@link PrivateNetwork.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link PrivateNetwork.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .id(getId())
                .name(getName())
                .description(getDescription())
                .netmask(getNetmask())
                .startIp(getStartIp())
                .endIp(getEndIp())
                .leases(getLeases())
                .labels(getLabels());
        return builder;
    }

    /**
     * Class to build instances of {@link PrivateNetwork}.
     */
    public static class Builder {
        private UUID id;
        private String name;
        private String description;
        private String netmask;
        private String startIp;
        private String endIp;
        private List<PrivateNetworkLease> leases;
        private Map<String, String> labels;



        /**
         * Setter for id.
         * @param  id  UUID value for id.
         * @return Builder
         */
        public Builder id(UUID id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for description.
         * @param  description  String value for description.
         * @return Builder
         */
        public Builder description(String description) {
            this.description = description;
            return this;
        }

        /**
         * Setter for netmask.
         * @param  netmask  String value for netmask.
         * @return Builder
         */
        public Builder netmask(String netmask) {
            this.netmask = netmask;
            return this;
        }

        /**
         * Setter for startIp.
         * @param  startIp  String value for startIp.
         * @return Builder
         */
        public Builder startIp(String startIp) {
            this.startIp = startIp;
            return this;
        }

        /**
         * Setter for endIp.
         * @param  endIp  String value for endIp.
         * @return Builder
         */
        public Builder endIp(String endIp) {
            this.endIp = endIp;
            return this;
        }

        /**
         * Setter for leases.
         * @param  leases  List of PrivateNetworkLease value for leases.
         * @return Builder
         */
        public Builder leases(List<PrivateNetworkLease> leases) {
            this.leases = leases;
            return this;
        }

        /**
         * Setter for labels.
         * @param  labels  Map of String, value for labels.
         * @return Builder
         */
        public Builder labels(Map<String, String> labels) {
            this.labels = labels;
            return this;
        }

        /**
         * Builds a new {@link PrivateNetwork} object using the set fields.
         * @return {@link PrivateNetwork}
         */
        public PrivateNetwork build() {
            return new PrivateNetwork(id, name, description, netmask, startIp, endIp, leases,
                    labels);
        }
    }
}
