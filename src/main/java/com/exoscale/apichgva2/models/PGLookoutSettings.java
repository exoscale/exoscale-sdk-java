/*
 * ExoscalePublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.exoscale.apichgva2.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for PGLookoutSettings type.
 */
public class PGLookoutSettings {
    private Integer maxFailoverReplicationTimeLag;

    /**
     * Default constructor.
     */
    public PGLookoutSettings() {
        maxFailoverReplicationTimeLag = 60;
    }

    /**
     * Initialization constructor.
     * @param  maxFailoverReplicationTimeLag  Integer value for maxFailoverReplicationTimeLag.
     */
    public PGLookoutSettings(
            Integer maxFailoverReplicationTimeLag) {
        this.maxFailoverReplicationTimeLag = maxFailoverReplicationTimeLag;
    }

    /**
     * Getter for MaxFailoverReplicationTimeLag.
     * Number of seconds of master unavailability before triggering database failover to standby
     * @return Returns the Integer
     */
    @JsonGetter("max_failover_replication_time_lag")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getMaxFailoverReplicationTimeLag() {
        return maxFailoverReplicationTimeLag;
    }

    /**
     * Setter for MaxFailoverReplicationTimeLag.
     * Number of seconds of master unavailability before triggering database failover to standby
     * @param maxFailoverReplicationTimeLag Value for Integer
     */
    @JsonSetter("max_failover_replication_time_lag")
    public void setMaxFailoverReplicationTimeLag(Integer maxFailoverReplicationTimeLag) {
        this.maxFailoverReplicationTimeLag = maxFailoverReplicationTimeLag;
    }

    /**
     * Converts this PGLookoutSettings into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "PGLookoutSettings [" + "maxFailoverReplicationTimeLag="
                + maxFailoverReplicationTimeLag + "]";
    }

    /**
     * Builds a new {@link PGLookoutSettings.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link PGLookoutSettings.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .maxFailoverReplicationTimeLag(getMaxFailoverReplicationTimeLag());
        return builder;
    }

    /**
     * Class to build instances of {@link PGLookoutSettings}.
     */
    public static class Builder {
        private Integer maxFailoverReplicationTimeLag = 60;



        /**
         * Setter for maxFailoverReplicationTimeLag.
         * @param  maxFailoverReplicationTimeLag  Integer value for maxFailoverReplicationTimeLag.
         * @return Builder
         */
        public Builder maxFailoverReplicationTimeLag(Integer maxFailoverReplicationTimeLag) {
            this.maxFailoverReplicationTimeLag = maxFailoverReplicationTimeLag;
            return this;
        }

        /**
         * Builds a new {@link PGLookoutSettings} object using the set fields.
         * @return {@link PGLookoutSettings}
         */
        public PGLookoutSettings build() {
            return new PGLookoutSettings(maxFailoverReplicationTimeLag);
        }
    }
}
