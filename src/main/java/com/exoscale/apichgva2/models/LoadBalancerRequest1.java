/*
 * ExoscalePublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.exoscale.apichgva2.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.Map;

/**
 * This is a model class for LoadBalancerRequest1 type.
 */
public class LoadBalancerRequest1 {
    private String name;
    private String description;
    private Map<String, String> labels;

    /**
     * Default constructor.
     */
    public LoadBalancerRequest1() {
    }

    /**
     * Initialization constructor.
     * @param  name  String value for name.
     * @param  description  String value for description.
     * @param  labels  Map of String, value for labels.
     */
    public LoadBalancerRequest1(
            String name,
            String description,
            Map<String, String> labels) {
        this.name = name;
        this.description = description;
        this.labels = labels;
    }

    /**
     * Getter for Name.
     * Load Balancer name
     * @return Returns the String
     */
    @JsonGetter("name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * Load Balancer name
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for Description.
     * Load Balancer description
     * @return Returns the String
     */
    @JsonGetter("description")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDescription() {
        return description;
    }

    /**
     * Setter for Description.
     * Load Balancer description
     * @param description Value for String
     */
    @JsonSetter("description")
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Getter for Labels.
     * @return Returns the Map of String, String
     */
    @JsonGetter("labels")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Map<String, String> getLabels() {
        return labels;
    }

    /**
     * Setter for Labels.
     * @param labels Value for Map of String, String
     */
    @JsonSetter("labels")
    public void setLabels(Map<String, String> labels) {
        this.labels = labels;
    }

    /**
     * Converts this LoadBalancerRequest1 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "LoadBalancerRequest1 [" + "name=" + name + ", description=" + description
                + ", labels=" + labels + "]";
    }

    /**
     * Builds a new {@link LoadBalancerRequest1.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link LoadBalancerRequest1.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .name(getName())
                .description(getDescription())
                .labels(getLabels());
        return builder;
    }

    /**
     * Class to build instances of {@link LoadBalancerRequest1}.
     */
    public static class Builder {
        private String name;
        private String description;
        private Map<String, String> labels;



        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for description.
         * @param  description  String value for description.
         * @return Builder
         */
        public Builder description(String description) {
            this.description = description;
            return this;
        }

        /**
         * Setter for labels.
         * @param  labels  Map of String, value for labels.
         * @return Builder
         */
        public Builder labels(Map<String, String> labels) {
            this.labels = labels;
            return this;
        }

        /**
         * Builds a new {@link LoadBalancerRequest1} object using the set fields.
         * @return {@link LoadBalancerRequest1}
         */
        public LoadBalancerRequest1 build() {
            return new LoadBalancerRequest1(name, description, labels);
        }
    }
}
