/*
 * ExoscalePublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.exoscale.apichgva2.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for DbaasPostgresRequest type.
 */
public class DbaasPostgresRequest {
    private PGBouncerConnectionPoolingSettings pgbouncerSettings;
    private BackupSchedule2 backupSchedule;
    private EnumPgVariantEnum variant;
    private TimescaleDBExtensionConfigurationValues timescaledbSettings;
    private List<String> ipFilter;
    private Boolean terminationProtection;
    private EnumPgSynchronousReplicationEnum synchronousReplication;
    private PGLookoutSettings pglookoutSettings;
    private Maintenance maintenance;
    private String version;
    private String plan;
    private Long workMem;
    private Long sharedBuffersPercentage;
    private PostgresqlConfConfigurationValues pgSettings;
    private Migration migration;

    /**
     * Default constructor.
     */
    public DbaasPostgresRequest() {
    }

    /**
     * Initialization constructor.
     * @param  pgbouncerSettings  PGBouncerConnectionPoolingSettings value for pgbouncerSettings.
     * @param  backupSchedule  BackupSchedule2 value for backupSchedule.
     * @param  variant  EnumPgVariantEnum value for variant.
     * @param  timescaledbSettings  TimescaleDBExtensionConfigurationValues value for
     *         timescaledbSettings.
     * @param  ipFilter  List of String value for ipFilter.
     * @param  terminationProtection  Boolean value for terminationProtection.
     * @param  synchronousReplication  EnumPgSynchronousReplicationEnum value for
     *         synchronousReplication.
     * @param  pglookoutSettings  PGLookoutSettings value for pglookoutSettings.
     * @param  maintenance  Maintenance value for maintenance.
     * @param  version  String value for version.
     * @param  plan  String value for plan.
     * @param  workMem  Long value for workMem.
     * @param  sharedBuffersPercentage  Long value for sharedBuffersPercentage.
     * @param  pgSettings  PostgresqlConfConfigurationValues value for pgSettings.
     * @param  migration  Migration value for migration.
     */
    public DbaasPostgresRequest(
            PGBouncerConnectionPoolingSettings pgbouncerSettings,
            BackupSchedule2 backupSchedule,
            EnumPgVariantEnum variant,
            TimescaleDBExtensionConfigurationValues timescaledbSettings,
            List<String> ipFilter,
            Boolean terminationProtection,
            EnumPgSynchronousReplicationEnum synchronousReplication,
            PGLookoutSettings pglookoutSettings,
            Maintenance maintenance,
            String version,
            String plan,
            Long workMem,
            Long sharedBuffersPercentage,
            PostgresqlConfConfigurationValues pgSettings,
            Migration migration) {
        this.pgbouncerSettings = pgbouncerSettings;
        this.backupSchedule = backupSchedule;
        this.variant = variant;
        this.timescaledbSettings = timescaledbSettings;
        this.ipFilter = ipFilter;
        this.terminationProtection = terminationProtection;
        this.synchronousReplication = synchronousReplication;
        this.pglookoutSettings = pglookoutSettings;
        this.maintenance = maintenance;
        this.version = version;
        this.plan = plan;
        this.workMem = workMem;
        this.sharedBuffersPercentage = sharedBuffersPercentage;
        this.pgSettings = pgSettings;
        this.migration = migration;
    }

    /**
     * Getter for PgbouncerSettings.
     * @return Returns the PGBouncerConnectionPoolingSettings
     */
    @JsonGetter("pgbouncer-settings")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public PGBouncerConnectionPoolingSettings getPgbouncerSettings() {
        return pgbouncerSettings;
    }

    /**
     * Setter for PgbouncerSettings.
     * @param pgbouncerSettings Value for PGBouncerConnectionPoolingSettings
     */
    @JsonSetter("pgbouncer-settings")
    public void setPgbouncerSettings(PGBouncerConnectionPoolingSettings pgbouncerSettings) {
        this.pgbouncerSettings = pgbouncerSettings;
    }

    /**
     * Getter for BackupSchedule.
     * @return Returns the BackupSchedule2
     */
    @JsonGetter("backup-schedule")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public BackupSchedule2 getBackupSchedule() {
        return backupSchedule;
    }

    /**
     * Setter for BackupSchedule.
     * @param backupSchedule Value for BackupSchedule2
     */
    @JsonSetter("backup-schedule")
    public void setBackupSchedule(BackupSchedule2 backupSchedule) {
        this.backupSchedule = backupSchedule;
    }

    /**
     * Getter for Variant.
     * @return Returns the EnumPgVariantEnum
     */
    @JsonGetter("variant")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public EnumPgVariantEnum getVariant() {
        return variant;
    }

    /**
     * Setter for Variant.
     * @param variant Value for EnumPgVariantEnum
     */
    @JsonSetter("variant")
    public void setVariant(EnumPgVariantEnum variant) {
        this.variant = variant;
    }

    /**
     * Getter for TimescaledbSettings.
     * @return Returns the TimescaleDBExtensionConfigurationValues
     */
    @JsonGetter("timescaledb-settings")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public TimescaleDBExtensionConfigurationValues getTimescaledbSettings() {
        return timescaledbSettings;
    }

    /**
     * Setter for TimescaledbSettings.
     * @param timescaledbSettings Value for TimescaleDBExtensionConfigurationValues
     */
    @JsonSetter("timescaledb-settings")
    public void setTimescaledbSettings(TimescaleDBExtensionConfigurationValues timescaledbSettings) {
        this.timescaledbSettings = timescaledbSettings;
    }

    /**
     * Getter for IpFilter.
     * Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'
     * @return Returns the List of String
     */
    @JsonGetter("ip-filter")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<String> getIpFilter() {
        return ipFilter;
    }

    /**
     * Setter for IpFilter.
     * Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'
     * @param ipFilter Value for List of String
     */
    @JsonSetter("ip-filter")
    public void setIpFilter(List<String> ipFilter) {
        this.ipFilter = ipFilter;
    }

    /**
     * Getter for TerminationProtection.
     * Service is protected against termination and powering off
     * @return Returns the Boolean
     */
    @JsonGetter("termination-protection")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getTerminationProtection() {
        return terminationProtection;
    }

    /**
     * Setter for TerminationProtection.
     * Service is protected against termination and powering off
     * @param terminationProtection Value for Boolean
     */
    @JsonSetter("termination-protection")
    public void setTerminationProtection(Boolean terminationProtection) {
        this.terminationProtection = terminationProtection;
    }

    /**
     * Getter for SynchronousReplication.
     * @return Returns the EnumPgSynchronousReplicationEnum
     */
    @JsonGetter("synchronous-replication")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public EnumPgSynchronousReplicationEnum getSynchronousReplication() {
        return synchronousReplication;
    }

    /**
     * Setter for SynchronousReplication.
     * @param synchronousReplication Value for EnumPgSynchronousReplicationEnum
     */
    @JsonSetter("synchronous-replication")
    public void setSynchronousReplication(EnumPgSynchronousReplicationEnum synchronousReplication) {
        this.synchronousReplication = synchronousReplication;
    }

    /**
     * Getter for PglookoutSettings.
     * @return Returns the PGLookoutSettings
     */
    @JsonGetter("pglookout-settings")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public PGLookoutSettings getPglookoutSettings() {
        return pglookoutSettings;
    }

    /**
     * Setter for PglookoutSettings.
     * @param pglookoutSettings Value for PGLookoutSettings
     */
    @JsonSetter("pglookout-settings")
    public void setPglookoutSettings(PGLookoutSettings pglookoutSettings) {
        this.pglookoutSettings = pglookoutSettings;
    }

    /**
     * Getter for Maintenance.
     * Automatic maintenance settings
     * @return Returns the Maintenance
     */
    @JsonGetter("maintenance")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Maintenance getMaintenance() {
        return maintenance;
    }

    /**
     * Setter for Maintenance.
     * Automatic maintenance settings
     * @param maintenance Value for Maintenance
     */
    @JsonSetter("maintenance")
    public void setMaintenance(Maintenance maintenance) {
        this.maintenance = maintenance;
    }

    /**
     * Getter for Version.
     * Version
     * @return Returns the String
     */
    @JsonGetter("version")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getVersion() {
        return version;
    }

    /**
     * Setter for Version.
     * Version
     * @param version Value for String
     */
    @JsonSetter("version")
    public void setVersion(String version) {
        this.version = version;
    }

    /**
     * Getter for Plan.
     * Subscription plan
     * @return Returns the String
     */
    @JsonGetter("plan")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPlan() {
        return plan;
    }

    /**
     * Setter for Plan.
     * Subscription plan
     * @param plan Value for String
     */
    @JsonSetter("plan")
    public void setPlan(String plan) {
        this.plan = plan;
    }

    /**
     * Getter for WorkMem.
     * Sets the maximum amount of memory to be used by a query operation (such as a sort or hash
     * table) before writing to temporary disk files, in MB. Default is 1MB + 0.075% of total RAM
     * (up to 32MB).
     * @return Returns the Long
     */
    @JsonGetter("work-mem")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Long getWorkMem() {
        return workMem;
    }

    /**
     * Setter for WorkMem.
     * Sets the maximum amount of memory to be used by a query operation (such as a sort or hash
     * table) before writing to temporary disk files, in MB. Default is 1MB + 0.075% of total RAM
     * (up to 32MB).
     * @param workMem Value for Long
     */
    @JsonSetter("work-mem")
    public void setWorkMem(Long workMem) {
        this.workMem = workMem;
    }

    /**
     * Getter for SharedBuffersPercentage.
     * Percentage of total RAM that the database server uses for shared memory buffers. Valid range
     * is 20-60 (float), which corresponds to 20% - 60%. This setting adjusts the shared_buffers
     * configuration value.
     * @return Returns the Long
     */
    @JsonGetter("shared-buffers-percentage")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Long getSharedBuffersPercentage() {
        return sharedBuffersPercentage;
    }

    /**
     * Setter for SharedBuffersPercentage.
     * Percentage of total RAM that the database server uses for shared memory buffers. Valid range
     * is 20-60 (float), which corresponds to 20% - 60%. This setting adjusts the shared_buffers
     * configuration value.
     * @param sharedBuffersPercentage Value for Long
     */
    @JsonSetter("shared-buffers-percentage")
    public void setSharedBuffersPercentage(Long sharedBuffersPercentage) {
        this.sharedBuffersPercentage = sharedBuffersPercentage;
    }

    /**
     * Getter for PgSettings.
     * @return Returns the PostgresqlConfConfigurationValues
     */
    @JsonGetter("pg-settings")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public PostgresqlConfConfigurationValues getPgSettings() {
        return pgSettings;
    }

    /**
     * Setter for PgSettings.
     * @param pgSettings Value for PostgresqlConfConfigurationValues
     */
    @JsonSetter("pg-settings")
    public void setPgSettings(PostgresqlConfConfigurationValues pgSettings) {
        this.pgSettings = pgSettings;
    }

    /**
     * Getter for Migration.
     * Migrate data from existing server
     * @return Returns the Migration
     */
    @JsonGetter("migration")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Migration getMigration() {
        return migration;
    }

    /**
     * Setter for Migration.
     * Migrate data from existing server
     * @param migration Value for Migration
     */
    @JsonSetter("migration")
    public void setMigration(Migration migration) {
        this.migration = migration;
    }

    /**
     * Converts this DbaasPostgresRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "DbaasPostgresRequest [" + "pgbouncerSettings=" + pgbouncerSettings
                + ", backupSchedule=" + backupSchedule + ", variant=" + variant
                + ", timescaledbSettings=" + timescaledbSettings + ", ipFilter=" + ipFilter
                + ", terminationProtection=" + terminationProtection + ", synchronousReplication="
                + synchronousReplication + ", pglookoutSettings=" + pglookoutSettings
                + ", maintenance=" + maintenance + ", version=" + version + ", plan=" + plan
                + ", workMem=" + workMem + ", sharedBuffersPercentage=" + sharedBuffersPercentage
                + ", pgSettings=" + pgSettings + ", migration=" + migration + "]";
    }

    /**
     * Builds a new {@link DbaasPostgresRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link DbaasPostgresRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .pgbouncerSettings(getPgbouncerSettings())
                .backupSchedule(getBackupSchedule())
                .variant(getVariant())
                .timescaledbSettings(getTimescaledbSettings())
                .ipFilter(getIpFilter())
                .terminationProtection(getTerminationProtection())
                .synchronousReplication(getSynchronousReplication())
                .pglookoutSettings(getPglookoutSettings())
                .maintenance(getMaintenance())
                .version(getVersion())
                .plan(getPlan())
                .workMem(getWorkMem())
                .sharedBuffersPercentage(getSharedBuffersPercentage())
                .pgSettings(getPgSettings())
                .migration(getMigration());
        return builder;
    }

    /**
     * Class to build instances of {@link DbaasPostgresRequest}.
     */
    public static class Builder {
        private PGBouncerConnectionPoolingSettings pgbouncerSettings;
        private BackupSchedule2 backupSchedule;
        private EnumPgVariantEnum variant;
        private TimescaleDBExtensionConfigurationValues timescaledbSettings;
        private List<String> ipFilter;
        private Boolean terminationProtection;
        private EnumPgSynchronousReplicationEnum synchronousReplication;
        private PGLookoutSettings pglookoutSettings;
        private Maintenance maintenance;
        private String version;
        private String plan;
        private Long workMem;
        private Long sharedBuffersPercentage;
        private PostgresqlConfConfigurationValues pgSettings;
        private Migration migration;



        /**
         * Setter for pgbouncerSettings.
         * @param  pgbouncerSettings  PGBouncerConnectionPoolingSettings value for
         *         pgbouncerSettings.
         * @return Builder
         */
        public Builder pgbouncerSettings(PGBouncerConnectionPoolingSettings pgbouncerSettings) {
            this.pgbouncerSettings = pgbouncerSettings;
            return this;
        }

        /**
         * Setter for backupSchedule.
         * @param  backupSchedule  BackupSchedule2 value for backupSchedule.
         * @return Builder
         */
        public Builder backupSchedule(BackupSchedule2 backupSchedule) {
            this.backupSchedule = backupSchedule;
            return this;
        }

        /**
         * Setter for variant.
         * @param  variant  EnumPgVariantEnum value for variant.
         * @return Builder
         */
        public Builder variant(EnumPgVariantEnum variant) {
            this.variant = variant;
            return this;
        }

        /**
         * Setter for timescaledbSettings.
         * @param  timescaledbSettings  TimescaleDBExtensionConfigurationValues value for
         *         timescaledbSettings.
         * @return Builder
         */
        public Builder timescaledbSettings(
                TimescaleDBExtensionConfigurationValues timescaledbSettings) {
            this.timescaledbSettings = timescaledbSettings;
            return this;
        }

        /**
         * Setter for ipFilter.
         * @param  ipFilter  List of String value for ipFilter.
         * @return Builder
         */
        public Builder ipFilter(List<String> ipFilter) {
            this.ipFilter = ipFilter;
            return this;
        }

        /**
         * Setter for terminationProtection.
         * @param  terminationProtection  Boolean value for terminationProtection.
         * @return Builder
         */
        public Builder terminationProtection(Boolean terminationProtection) {
            this.terminationProtection = terminationProtection;
            return this;
        }

        /**
         * Setter for synchronousReplication.
         * @param  synchronousReplication  EnumPgSynchronousReplicationEnum value for
         *         synchronousReplication.
         * @return Builder
         */
        public Builder synchronousReplication(
                EnumPgSynchronousReplicationEnum synchronousReplication) {
            this.synchronousReplication = synchronousReplication;
            return this;
        }

        /**
         * Setter for pglookoutSettings.
         * @param  pglookoutSettings  PGLookoutSettings value for pglookoutSettings.
         * @return Builder
         */
        public Builder pglookoutSettings(PGLookoutSettings pglookoutSettings) {
            this.pglookoutSettings = pglookoutSettings;
            return this;
        }

        /**
         * Setter for maintenance.
         * @param  maintenance  Maintenance value for maintenance.
         * @return Builder
         */
        public Builder maintenance(Maintenance maintenance) {
            this.maintenance = maintenance;
            return this;
        }

        /**
         * Setter for version.
         * @param  version  String value for version.
         * @return Builder
         */
        public Builder version(String version) {
            this.version = version;
            return this;
        }

        /**
         * Setter for plan.
         * @param  plan  String value for plan.
         * @return Builder
         */
        public Builder plan(String plan) {
            this.plan = plan;
            return this;
        }

        /**
         * Setter for workMem.
         * @param  workMem  Long value for workMem.
         * @return Builder
         */
        public Builder workMem(Long workMem) {
            this.workMem = workMem;
            return this;
        }

        /**
         * Setter for sharedBuffersPercentage.
         * @param  sharedBuffersPercentage  Long value for sharedBuffersPercentage.
         * @return Builder
         */
        public Builder sharedBuffersPercentage(Long sharedBuffersPercentage) {
            this.sharedBuffersPercentage = sharedBuffersPercentage;
            return this;
        }

        /**
         * Setter for pgSettings.
         * @param  pgSettings  PostgresqlConfConfigurationValues value for pgSettings.
         * @return Builder
         */
        public Builder pgSettings(PostgresqlConfConfigurationValues pgSettings) {
            this.pgSettings = pgSettings;
            return this;
        }

        /**
         * Setter for migration.
         * @param  migration  Migration value for migration.
         * @return Builder
         */
        public Builder migration(Migration migration) {
            this.migration = migration;
            return this;
        }

        /**
         * Builds a new {@link DbaasPostgresRequest} object using the set fields.
         * @return {@link DbaasPostgresRequest}
         */
        public DbaasPostgresRequest build() {
            return new DbaasPostgresRequest(pgbouncerSettings, backupSchedule, variant,
                    timescaledbSettings, ipFilter, terminationProtection, synchronousReplication,
                    pglookoutSettings, maintenance, version, plan, workMem, sharedBuffersPercentage,
                    pgSettings, migration);
        }
    }
}
