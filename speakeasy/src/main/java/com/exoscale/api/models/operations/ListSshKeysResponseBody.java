/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.exoscale.api.models.operations;

import com.exoscale.api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Optional;

/**
 * ListSshKeysResponseBody - 200
 */

public class ListSshKeysResponseBody {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ssh-keys")
    private Optional<? extends java.util.List<com.exoscale.api.models.components.SshKey>> sshKeys;

    public ListSshKeysResponseBody(
            @JsonProperty("ssh-keys") Optional<? extends java.util.List<com.exoscale.api.models.components.SshKey>> sshKeys) {
        Utils.checkNotNull(sshKeys, "sshKeys");
        this.sshKeys = sshKeys;
    }

    public Optional<? extends java.util.List<com.exoscale.api.models.components.SshKey>> sshKeys() {
        return sshKeys;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public ListSshKeysResponseBody withSshKeys(java.util.List<com.exoscale.api.models.components.SshKey> sshKeys) {
        Utils.checkNotNull(sshKeys, "sshKeys");
        this.sshKeys = Optional.ofNullable(sshKeys);
        return this;
    }

    public ListSshKeysResponseBody withSshKeys(Optional<? extends java.util.List<com.exoscale.api.models.components.SshKey>> sshKeys) {
        Utils.checkNotNull(sshKeys, "sshKeys");
        this.sshKeys = sshKeys;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ListSshKeysResponseBody other = (ListSshKeysResponseBody) o;
        return 
            java.util.Objects.deepEquals(this.sshKeys, other.sshKeys);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            sshKeys);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ListSshKeysResponseBody.class,
                "sshKeys", sshKeys);
    }
    
    public final static class Builder {
 
        private Optional<? extends java.util.List<com.exoscale.api.models.components.SshKey>> sshKeys = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder sshKeys(java.util.List<com.exoscale.api.models.components.SshKey> sshKeys) {
            Utils.checkNotNull(sshKeys, "sshKeys");
            this.sshKeys = Optional.ofNullable(sshKeys);
            return this;
        }

        public Builder sshKeys(Optional<? extends java.util.List<com.exoscale.api.models.components.SshKey>> sshKeys) {
            Utils.checkNotNull(sshKeys, "sshKeys");
            this.sshKeys = sshKeys;
            return this;
        }
        
        public ListSshKeysResponseBody build() {
            return new ListSshKeysResponseBody(
                sshKeys);
        }
    }
}

