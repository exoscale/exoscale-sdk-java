/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.exoscale.api.models.operations;

import com.exoscale.api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;


public class CopyTemplateRequestBody {

    /**
     * Zone
     */
    @JsonProperty("target-zone")
    private com.exoscale.api.models.components.ZoneInput targetZone;

    public CopyTemplateRequestBody(
            @JsonProperty("target-zone") com.exoscale.api.models.components.ZoneInput targetZone) {
        Utils.checkNotNull(targetZone, "targetZone");
        this.targetZone = targetZone;
    }

    /**
     * Zone
     */
    public com.exoscale.api.models.components.ZoneInput targetZone() {
        return targetZone;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * Zone
     */
    public CopyTemplateRequestBody withTargetZone(com.exoscale.api.models.components.ZoneInput targetZone) {
        Utils.checkNotNull(targetZone, "targetZone");
        this.targetZone = targetZone;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CopyTemplateRequestBody other = (CopyTemplateRequestBody) o;
        return 
            java.util.Objects.deepEquals(this.targetZone, other.targetZone);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            targetZone);
    }
    
    @Override
    public String toString() {
        return Utils.toString(CopyTemplateRequestBody.class,
                "targetZone", targetZone);
    }
    
    public final static class Builder {
 
        private com.exoscale.api.models.components.ZoneInput targetZone;  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * Zone
         */
        public Builder targetZone(com.exoscale.api.models.components.ZoneInput targetZone) {
            Utils.checkNotNull(targetZone, "targetZone");
            this.targetZone = targetZone;
            return this;
        }
        
        public CopyTemplateRequestBody build() {
            return new CopyTemplateRequestBody(
                targetZone);
        }
    }
}

