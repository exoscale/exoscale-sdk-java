/*
 * Exoscale Public API
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@exoscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.exoscale.sdk.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * PromoteSnapshotToTemplateRequest
 */
@JsonPropertyOrder({
  PromoteSnapshotToTemplateRequest.JSON_PROPERTY_NAME,
  PromoteSnapshotToTemplateRequest.JSON_PROPERTY_DESCRIPTION,
  PromoteSnapshotToTemplateRequest.JSON_PROPERTY_DEFAULT_USER,
  PromoteSnapshotToTemplateRequest.JSON_PROPERTY_SSH_KEY_ENABLED,
  PromoteSnapshotToTemplateRequest.JSON_PROPERTY_PASSWORD_ENABLED
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-08-30T13:37:22.669691+02:00[Europe/Vienna]", comments = "Generator version: 7.4.0")
public class PromoteSnapshotToTemplateRequest {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_DEFAULT_USER = "default-user";
  private String defaultUser;

  public static final String JSON_PROPERTY_SSH_KEY_ENABLED = "ssh-key-enabled";
  private Boolean sshKeyEnabled;

  public static final String JSON_PROPERTY_PASSWORD_ENABLED = "password-enabled";
  private Boolean passwordEnabled;

  public PromoteSnapshotToTemplateRequest() { 
  }

  public PromoteSnapshotToTemplateRequest name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Template name
   * @return name
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public PromoteSnapshotToTemplateRequest description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Template description
   * @return description
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public PromoteSnapshotToTemplateRequest defaultUser(String defaultUser) {
    this.defaultUser = defaultUser;
    return this;
  }

   /**
   * Template default user
   * @return defaultUser
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEFAULT_USER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDefaultUser() {
    return defaultUser;
  }


  @JsonProperty(JSON_PROPERTY_DEFAULT_USER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDefaultUser(String defaultUser) {
    this.defaultUser = defaultUser;
  }


  public PromoteSnapshotToTemplateRequest sshKeyEnabled(Boolean sshKeyEnabled) {
    this.sshKeyEnabled = sshKeyEnabled;
    return this;
  }

   /**
   * Enable SSH key-based login in the template
   * @return sshKeyEnabled
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SSH_KEY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSshKeyEnabled() {
    return sshKeyEnabled;
  }


  @JsonProperty(JSON_PROPERTY_SSH_KEY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSshKeyEnabled(Boolean sshKeyEnabled) {
    this.sshKeyEnabled = sshKeyEnabled;
  }


  public PromoteSnapshotToTemplateRequest passwordEnabled(Boolean passwordEnabled) {
    this.passwordEnabled = passwordEnabled;
    return this;
  }

   /**
   * Enable password-based login in the template
   * @return passwordEnabled
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PASSWORD_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getPasswordEnabled() {
    return passwordEnabled;
  }


  @JsonProperty(JSON_PROPERTY_PASSWORD_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPasswordEnabled(Boolean passwordEnabled) {
    this.passwordEnabled = passwordEnabled;
  }


  /**
   * Return true if this promote_snapshot_to_template_request object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PromoteSnapshotToTemplateRequest promoteSnapshotToTemplateRequest = (PromoteSnapshotToTemplateRequest) o;
    return Objects.equals(this.name, promoteSnapshotToTemplateRequest.name) &&
        Objects.equals(this.description, promoteSnapshotToTemplateRequest.description) &&
        Objects.equals(this.defaultUser, promoteSnapshotToTemplateRequest.defaultUser) &&
        Objects.equals(this.sshKeyEnabled, promoteSnapshotToTemplateRequest.sshKeyEnabled) &&
        Objects.equals(this.passwordEnabled, promoteSnapshotToTemplateRequest.passwordEnabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, description, defaultUser, sshKeyEnabled, passwordEnabled);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PromoteSnapshotToTemplateRequest {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    defaultUser: ").append(toIndentedString(defaultUser)).append("\n");
    sb.append("    sshKeyEnabled: ").append(toIndentedString(sshKeyEnabled)).append("\n");
    sb.append("    passwordEnabled: ").append(toIndentedString(passwordEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `name` to the URL query string
    if (getName() != null) {
      joiner.add(String.format("%sname%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getName()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `description` to the URL query string
    if (getDescription() != null) {
      joiner.add(String.format("%sdescription%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getDescription()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `default-user` to the URL query string
    if (getDefaultUser() != null) {
      joiner.add(String.format("%sdefault-user%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getDefaultUser()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `ssh-key-enabled` to the URL query string
    if (getSshKeyEnabled() != null) {
      joiner.add(String.format("%sssh-key-enabled%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getSshKeyEnabled()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `password-enabled` to the URL query string
    if (getPasswordEnabled() != null) {
      joiner.add(String.format("%spassword-enabled%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getPasswordEnabled()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

