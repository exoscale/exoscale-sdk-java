/*
 * Exoscale Public API
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@exoscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for JsonSchemaMysql
 */
public class JsonSchemaMysqlTest {
    private final JsonSchemaMysql model = new JsonSchemaMysql();

    /**
     * Model tests for JsonSchemaMysql
     */
    @Test
    public void testJsonSchemaMysql() {
        // TODO: test JsonSchemaMysql
    }

    /**
     * Test the property 'netWriteTimeout'
     */
    @Test
    public void netWriteTimeoutTest() {
        // TODO: test netWriteTimeout
    }

    /**
     * Test the property 'internalTmpMemStorageEngine'
     */
    @Test
    public void internalTmpMemStorageEngineTest() {
        // TODO: test internalTmpMemStorageEngine
    }

    /**
     * Test the property 'sqlMode'
     */
    @Test
    public void sqlModeTest() {
        // TODO: test sqlMode
    }

    /**
     * Test the property 'informationSchemaStatsExpiry'
     */
    @Test
    public void informationSchemaStatsExpiryTest() {
        // TODO: test informationSchemaStatsExpiry
    }

    /**
     * Test the property 'sortBufferSize'
     */
    @Test
    public void sortBufferSizeTest() {
        // TODO: test sortBufferSize
    }

    /**
     * Test the property 'innodbThreadConcurrency'
     */
    @Test
    public void innodbThreadConcurrencyTest() {
        // TODO: test innodbThreadConcurrency
    }

    /**
     * Test the property 'innodbWriteIoThreads'
     */
    @Test
    public void innodbWriteIoThreadsTest() {
        // TODO: test innodbWriteIoThreads
    }

    /**
     * Test the property 'innodbFtMinTokenSize'
     */
    @Test
    public void innodbFtMinTokenSizeTest() {
        // TODO: test innodbFtMinTokenSize
    }

    /**
     * Test the property 'innodbChangeBufferMaxSize'
     */
    @Test
    public void innodbChangeBufferMaxSizeTest() {
        // TODO: test innodbChangeBufferMaxSize
    }

    /**
     * Test the property 'innodbFlushNeighbors'
     */
    @Test
    public void innodbFlushNeighborsTest() {
        // TODO: test innodbFlushNeighbors
    }

    /**
     * Test the property 'tmpTableSize'
     */
    @Test
    public void tmpTableSizeTest() {
        // TODO: test tmpTableSize
    }

    /**
     * Test the property 'slowQueryLog'
     */
    @Test
    public void slowQueryLogTest() {
        // TODO: test slowQueryLog
    }

    /**
     * Test the property 'connectTimeout'
     */
    @Test
    public void connectTimeoutTest() {
        // TODO: test connectTimeout
    }

    /**
     * Test the property 'netReadTimeout'
     */
    @Test
    public void netReadTimeoutTest() {
        // TODO: test netReadTimeout
    }

    /**
     * Test the property 'innodbLockWaitTimeout'
     */
    @Test
    public void innodbLockWaitTimeoutTest() {
        // TODO: test innodbLockWaitTimeout
    }

    /**
     * Test the property 'waitTimeout'
     */
    @Test
    public void waitTimeoutTest() {
        // TODO: test waitTimeout
    }

    /**
     * Test the property 'innodbRollbackOnTimeout'
     */
    @Test
    public void innodbRollbackOnTimeoutTest() {
        // TODO: test innodbRollbackOnTimeout
    }

    /**
     * Test the property 'groupConcatMaxLen'
     */
    @Test
    public void groupConcatMaxLenTest() {
        // TODO: test groupConcatMaxLen
    }

    /**
     * Test the property 'netBufferLength'
     */
    @Test
    public void netBufferLengthTest() {
        // TODO: test netBufferLength
    }

    /**
     * Test the property 'innodbPrintAllDeadlocks'
     */
    @Test
    public void innodbPrintAllDeadlocksTest() {
        // TODO: test innodbPrintAllDeadlocks
    }

    /**
     * Test the property 'innodbOnlineAlterLogMaxSize'
     */
    @Test
    public void innodbOnlineAlterLogMaxSizeTest() {
        // TODO: test innodbOnlineAlterLogMaxSize
    }

    /**
     * Test the property 'interactiveTimeout'
     */
    @Test
    public void interactiveTimeoutTest() {
        // TODO: test interactiveTimeout
    }

    /**
     * Test the property 'innodbLogBufferSize'
     */
    @Test
    public void innodbLogBufferSizeTest() {
        // TODO: test innodbLogBufferSize
    }

    /**
     * Test the property 'maxAllowedPacket'
     */
    @Test
    public void maxAllowedPacketTest() {
        // TODO: test maxAllowedPacket
    }

    /**
     * Test the property 'maxHeapTableSize'
     */
    @Test
    public void maxHeapTableSizeTest() {
        // TODO: test maxHeapTableSize
    }

    /**
     * Test the property 'innodbFtServerStopwordTable'
     */
    @Test
    public void innodbFtServerStopwordTableTest() {
        // TODO: test innodbFtServerStopwordTable
    }

    /**
     * Test the property 'innodbReadIoThreads'
     */
    @Test
    public void innodbReadIoThreadsTest() {
        // TODO: test innodbReadIoThreads
    }

    /**
     * Test the property 'sqlRequirePrimaryKey'
     */
    @Test
    public void sqlRequirePrimaryKeyTest() {
        // TODO: test sqlRequirePrimaryKey
    }

    /**
     * Test the property 'defaultTimeZone'
     */
    @Test
    public void defaultTimeZoneTest() {
        // TODO: test defaultTimeZone
    }

    /**
     * Test the property 'longQueryTime'
     */
    @Test
    public void longQueryTimeTest() {
        // TODO: test longQueryTime
    }

}
