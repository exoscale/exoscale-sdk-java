/*
 * Exoscale Public API
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@exoscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.exoscale.exoscale4j.model;

import com.exoscale.exoscale4j.model.OpensearchEmailSenderSettings;
import com.exoscale.exoscale4j.model.OpensearchISMHistorySettings;
import com.exoscale.exoscale4j.model.OpensearchSecurityPluginSettings;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;

/**
 * Model tests for JsonSchemaOpensearch
 */
public class JsonSchemaOpensearchTest {
    private final JsonSchemaOpensearch model = new JsonSchemaOpensearch();

    /**
     * Model tests for JsonSchemaOpensearch
     */
    @Test
    public void testJsonSchemaOpensearch() {
        // TODO: test JsonSchemaOpensearch
    }

    /**
     * Test the property 'threadPoolSearchThrottledSize'
     */
    @Test
    public void threadPoolSearchThrottledSizeTest() {
        // TODO: test threadPoolSearchThrottledSize
    }

    /**
     * Test the property 'threadPoolAnalyzeSize'
     */
    @Test
    public void threadPoolAnalyzeSizeTest() {
        // TODO: test threadPoolAnalyzeSize
    }

    /**
     * Test the property 'threadPoolGetSize'
     */
    @Test
    public void threadPoolGetSizeTest() {
        // TODO: test threadPoolGetSize
    }

    /**
     * Test the property 'threadPoolGetQueueSize'
     */
    @Test
    public void threadPoolGetQueueSizeTest() {
        // TODO: test threadPoolGetQueueSize
    }

    /**
     * Test the property 'indicesRecoveryMaxConcurrentFileChunks'
     */
    @Test
    public void indicesRecoveryMaxConcurrentFileChunksTest() {
        // TODO: test indicesRecoveryMaxConcurrentFileChunks
    }

    /**
     * Test the property 'indicesQueriesCacheSize'
     */
    @Test
    public void indicesQueriesCacheSizeTest() {
        // TODO: test indicesQueriesCacheSize
    }

    /**
     * Test the property 'threadPoolSearchSize'
     */
    @Test
    public void threadPoolSearchSizeTest() {
        // TODO: test threadPoolSearchSize
    }

    /**
     * Test the property 'indicesRecoveryMaxBytesPerSec'
     */
    @Test
    public void indicesRecoveryMaxBytesPerSecTest() {
        // TODO: test indicesRecoveryMaxBytesPerSec
    }

    /**
     * Test the property 'httpMaxInitialLineLength'
     */
    @Test
    public void httpMaxInitialLineLengthTest() {
        // TODO: test httpMaxInitialLineLength
    }

    /**
     * Test the property 'threadPoolWriteQueueSize'
     */
    @Test
    public void threadPoolWriteQueueSizeTest() {
        // TODO: test threadPoolWriteQueueSize
    }

    /**
     * Test the property 'scriptMaxCompilationsRate'
     */
    @Test
    public void scriptMaxCompilationsRateTest() {
        // TODO: test scriptMaxCompilationsRate
    }

    /**
     * Test the property 'searchMaxBuckets'
     */
    @Test
    public void searchMaxBucketsTest() {
        // TODO: test searchMaxBuckets
    }

    /**
     * Test the property 'reindexRemoteWhitelist'
     */
    @Test
    public void reindexRemoteWhitelistTest() {
        // TODO: test reindexRemoteWhitelist
    }

    /**
     * Test the property 'overrideMainResponseVersion'
     */
    @Test
    public void overrideMainResponseVersionTest() {
        // TODO: test overrideMainResponseVersion
    }

    /**
     * Test the property 'httpMaxHeaderSize'
     */
    @Test
    public void httpMaxHeaderSizeTest() {
        // TODO: test httpMaxHeaderSize
    }

    /**
     * Test the property 'emailSender'
     */
    @Test
    public void emailSenderTest() {
        // TODO: test emailSender
    }

    /**
     * Test the property 'indicesFielddataCacheSize'
     */
    @Test
    public void indicesFielddataCacheSizeTest() {
        // TODO: test indicesFielddataCacheSize
    }

    /**
     * Test the property 'actionDestructiveRequiresName'
     */
    @Test
    public void actionDestructiveRequiresNameTest() {
        // TODO: test actionDestructiveRequiresName
    }

    /**
     * Test the property 'indicesMemoryIndexBufferSize'
     */
    @Test
    public void indicesMemoryIndexBufferSizeTest() {
        // TODO: test indicesMemoryIndexBufferSize
    }

    /**
     * Test the property 'threadPoolForceMergeSize'
     */
    @Test
    public void threadPoolForceMergeSizeTest() {
        // TODO: test threadPoolForceMergeSize
    }

    /**
     * Test the property 'authFailureListeners'
     */
    @Test
    public void authFailureListenersTest() {
        // TODO: test authFailureListeners
    }

    /**
     * Test the property 'ismHistory'
     */
    @Test
    public void ismHistoryTest() {
        // TODO: test ismHistory
    }

    /**
     * Test the property 'clusterRoutingAllocationNodeConcurrentRecoveries'
     */
    @Test
    public void clusterRoutingAllocationNodeConcurrentRecoveriesTest() {
        // TODO: test clusterRoutingAllocationNodeConcurrentRecoveries
    }

    /**
     * Test the property 'threadPoolAnalyzeQueueSize'
     */
    @Test
    public void threadPoolAnalyzeQueueSizeTest() {
        // TODO: test threadPoolAnalyzeQueueSize
    }

    /**
     * Test the property 'actionAutoCreateIndexEnabled'
     */
    @Test
    public void actionAutoCreateIndexEnabledTest() {
        // TODO: test actionAutoCreateIndexEnabled
    }

    /**
     * Test the property 'httpMaxContentLength'
     */
    @Test
    public void httpMaxContentLengthTest() {
        // TODO: test httpMaxContentLength
    }

    /**
     * Test the property 'threadPoolWriteSize'
     */
    @Test
    public void threadPoolWriteSizeTest() {
        // TODO: test threadPoolWriteSize
    }

    /**
     * Test the property 'threadPoolSearchQueueSize'
     */
    @Test
    public void threadPoolSearchQueueSizeTest() {
        // TODO: test threadPoolSearchQueueSize
    }

    /**
     * Test the property 'indicesQueryBoolMaxClauseCount'
     */
    @Test
    public void indicesQueryBoolMaxClauseCountTest() {
        // TODO: test indicesQueryBoolMaxClauseCount
    }

    /**
     * Test the property 'threadPoolSearchThrottledQueueSize'
     */
    @Test
    public void threadPoolSearchThrottledQueueSizeTest() {
        // TODO: test threadPoolSearchThrottledQueueSize
    }

    /**
     * Test the property 'clusterMaxShardsPerNode'
     */
    @Test
    public void clusterMaxShardsPerNodeTest() {
        // TODO: test clusterMaxShardsPerNode
    }

}
