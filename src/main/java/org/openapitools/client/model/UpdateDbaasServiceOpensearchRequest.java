/*
 * Exoscale Public API
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@exoscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.JsonSchemaOpensearch;
import org.openapitools.client.model.UpdateDbaasServiceMysqlRequestMaintenance;
import org.openapitools.client.model.UpdateDbaasServiceOpensearchRequestIndexPatternsInner;
import org.openapitools.client.model.UpdateDbaasServiceOpensearchRequestIndexTemplate;
import org.openapitools.client.model.UpdateDbaasServiceOpensearchRequestOpensearchDashboards;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UpdateDbaasServiceOpensearchRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-27T17:14:44.205710495Z[Etc/UTC]", comments = "Generator version: 7.5.0-SNAPSHOT")
public class UpdateDbaasServiceOpensearchRequest {
  public static final String SERIALIZED_NAME_MAX_INDEX_COUNT = "max-index-count";
  @SerializedName(SERIALIZED_NAME_MAX_INDEX_COUNT)
  private Long maxIndexCount;

  public static final String SERIALIZED_NAME_KEEP_INDEX_REFRESH_INTERVAL = "keep-index-refresh-interval";
  @SerializedName(SERIALIZED_NAME_KEEP_INDEX_REFRESH_INTERVAL)
  private Boolean keepIndexRefreshInterval;

  public static final String SERIALIZED_NAME_IP_FILTER = "ip-filter";
  @SerializedName(SERIALIZED_NAME_IP_FILTER)
  private List<String> ipFilter = new ArrayList<>();

  public static final String SERIALIZED_NAME_TERMINATION_PROTECTION = "termination-protection";
  @SerializedName(SERIALIZED_NAME_TERMINATION_PROTECTION)
  private Boolean terminationProtection;

  public static final String SERIALIZED_NAME_INDEX_PATTERNS = "index-patterns";
  @SerializedName(SERIALIZED_NAME_INDEX_PATTERNS)
  private List<UpdateDbaasServiceOpensearchRequestIndexPatternsInner> indexPatterns = new ArrayList<>();

  public static final String SERIALIZED_NAME_MAINTENANCE = "maintenance";
  @SerializedName(SERIALIZED_NAME_MAINTENANCE)
  private UpdateDbaasServiceMysqlRequestMaintenance maintenance;

  public static final String SERIALIZED_NAME_INDEX_TEMPLATE = "index-template";
  @SerializedName(SERIALIZED_NAME_INDEX_TEMPLATE)
  private UpdateDbaasServiceOpensearchRequestIndexTemplate indexTemplate;

  public static final String SERIALIZED_NAME_OPENSEARCH_SETTINGS = "opensearch-settings";
  @SerializedName(SERIALIZED_NAME_OPENSEARCH_SETTINGS)
  private JsonSchemaOpensearch opensearchSettings;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private String version;

  public static final String SERIALIZED_NAME_PLAN = "plan";
  @SerializedName(SERIALIZED_NAME_PLAN)
  private String plan;

  public static final String SERIALIZED_NAME_OPENSEARCH_DASHBOARDS = "opensearch-dashboards";
  @SerializedName(SERIALIZED_NAME_OPENSEARCH_DASHBOARDS)
  private UpdateDbaasServiceOpensearchRequestOpensearchDashboards opensearchDashboards;

  public UpdateDbaasServiceOpensearchRequest() {
  }

  public UpdateDbaasServiceOpensearchRequest maxIndexCount(Long maxIndexCount) {
    this.maxIndexCount = maxIndexCount;
    return this;
  }

   /**
   * Maximum number of indexes to keep before deleting the oldest one
   * minimum: 0
   * @return maxIndexCount
  **/
  @javax.annotation.Nullable
  public Long getMaxIndexCount() {
    return maxIndexCount;
  }

  public void setMaxIndexCount(Long maxIndexCount) {
    this.maxIndexCount = maxIndexCount;
  }


  public UpdateDbaasServiceOpensearchRequest keepIndexRefreshInterval(Boolean keepIndexRefreshInterval) {
    this.keepIndexRefreshInterval = keepIndexRefreshInterval;
    return this;
  }

   /**
   * Aiven automation resets index.refresh_interval to default value for every index to be sure that indices are always visible to search. If it doesn&#39;t fit your case, you can disable this by setting up this flag to true.
   * @return keepIndexRefreshInterval
  **/
  @javax.annotation.Nullable
  public Boolean getKeepIndexRefreshInterval() {
    return keepIndexRefreshInterval;
  }

  public void setKeepIndexRefreshInterval(Boolean keepIndexRefreshInterval) {
    this.keepIndexRefreshInterval = keepIndexRefreshInterval;
  }


  public UpdateDbaasServiceOpensearchRequest ipFilter(List<String> ipFilter) {
    this.ipFilter = ipFilter;
    return this;
  }

  public UpdateDbaasServiceOpensearchRequest addIpFilterItem(String ipFilterItem) {
    if (this.ipFilter == null) {
      this.ipFilter = new ArrayList<>();
    }
    this.ipFilter.add(ipFilterItem);
    return this;
  }

   /**
   * Allow incoming connections from CIDR address block, e.g. &#39;10.20.0.0/16&#39;
   * @return ipFilter
  **/
  @javax.annotation.Nullable
  public List<String> getIpFilter() {
    return ipFilter;
  }

  public void setIpFilter(List<String> ipFilter) {
    this.ipFilter = ipFilter;
  }


  public UpdateDbaasServiceOpensearchRequest terminationProtection(Boolean terminationProtection) {
    this.terminationProtection = terminationProtection;
    return this;
  }

   /**
   * Service is protected against termination and powering off
   * @return terminationProtection
  **/
  @javax.annotation.Nullable
  public Boolean getTerminationProtection() {
    return terminationProtection;
  }

  public void setTerminationProtection(Boolean terminationProtection) {
    this.terminationProtection = terminationProtection;
  }


  public UpdateDbaasServiceOpensearchRequest indexPatterns(List<UpdateDbaasServiceOpensearchRequestIndexPatternsInner> indexPatterns) {
    this.indexPatterns = indexPatterns;
    return this;
  }

  public UpdateDbaasServiceOpensearchRequest addIndexPatternsItem(UpdateDbaasServiceOpensearchRequestIndexPatternsInner indexPatternsItem) {
    if (this.indexPatterns == null) {
      this.indexPatterns = new ArrayList<>();
    }
    this.indexPatterns.add(indexPatternsItem);
    return this;
  }

   /**
   * Allows you to create glob style patterns and set a max number of indexes matching this pattern you want to keep. Creating indexes exceeding this value will cause the oldest one to get deleted. You could for example create a pattern looking like &#39;logs.?&#39; and then create index logs.1, logs.2 etc, it will delete logs.1 once you create logs.6. Do note &#39;logs.?&#39; does not apply to logs.10. Note: Setting max_index_count to 0 will do nothing and the pattern gets ignored.
   * @return indexPatterns
  **/
  @javax.annotation.Nullable
  public List<UpdateDbaasServiceOpensearchRequestIndexPatternsInner> getIndexPatterns() {
    return indexPatterns;
  }

  public void setIndexPatterns(List<UpdateDbaasServiceOpensearchRequestIndexPatternsInner> indexPatterns) {
    this.indexPatterns = indexPatterns;
  }


  public UpdateDbaasServiceOpensearchRequest maintenance(UpdateDbaasServiceMysqlRequestMaintenance maintenance) {
    this.maintenance = maintenance;
    return this;
  }

   /**
   * Get maintenance
   * @return maintenance
  **/
  @javax.annotation.Nullable
  public UpdateDbaasServiceMysqlRequestMaintenance getMaintenance() {
    return maintenance;
  }

  public void setMaintenance(UpdateDbaasServiceMysqlRequestMaintenance maintenance) {
    this.maintenance = maintenance;
  }


  public UpdateDbaasServiceOpensearchRequest indexTemplate(UpdateDbaasServiceOpensearchRequestIndexTemplate indexTemplate) {
    this.indexTemplate = indexTemplate;
    return this;
  }

   /**
   * Get indexTemplate
   * @return indexTemplate
  **/
  @javax.annotation.Nullable
  public UpdateDbaasServiceOpensearchRequestIndexTemplate getIndexTemplate() {
    return indexTemplate;
  }

  public void setIndexTemplate(UpdateDbaasServiceOpensearchRequestIndexTemplate indexTemplate) {
    this.indexTemplate = indexTemplate;
  }


  public UpdateDbaasServiceOpensearchRequest opensearchSettings(JsonSchemaOpensearch opensearchSettings) {
    this.opensearchSettings = opensearchSettings;
    return this;
  }

   /**
   * Get opensearchSettings
   * @return opensearchSettings
  **/
  @javax.annotation.Nullable
  public JsonSchemaOpensearch getOpensearchSettings() {
    return opensearchSettings;
  }

  public void setOpensearchSettings(JsonSchemaOpensearch opensearchSettings) {
    this.opensearchSettings = opensearchSettings;
  }


  public UpdateDbaasServiceOpensearchRequest version(String version) {
    this.version = version;
    return this;
  }

   /**
   * Version
   * @return version
  **/
  @javax.annotation.Nullable
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }


  public UpdateDbaasServiceOpensearchRequest plan(String plan) {
    this.plan = plan;
    return this;
  }

   /**
   * Subscription plan
   * @return plan
  **/
  @javax.annotation.Nullable
  public String getPlan() {
    return plan;
  }

  public void setPlan(String plan) {
    this.plan = plan;
  }


  public UpdateDbaasServiceOpensearchRequest opensearchDashboards(UpdateDbaasServiceOpensearchRequestOpensearchDashboards opensearchDashboards) {
    this.opensearchDashboards = opensearchDashboards;
    return this;
  }

   /**
   * Get opensearchDashboards
   * @return opensearchDashboards
  **/
  @javax.annotation.Nullable
  public UpdateDbaasServiceOpensearchRequestOpensearchDashboards getOpensearchDashboards() {
    return opensearchDashboards;
  }

  public void setOpensearchDashboards(UpdateDbaasServiceOpensearchRequestOpensearchDashboards opensearchDashboards) {
    this.opensearchDashboards = opensearchDashboards;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateDbaasServiceOpensearchRequest updateDbaasServiceOpensearchRequest = (UpdateDbaasServiceOpensearchRequest) o;
    return Objects.equals(this.maxIndexCount, updateDbaasServiceOpensearchRequest.maxIndexCount) &&
        Objects.equals(this.keepIndexRefreshInterval, updateDbaasServiceOpensearchRequest.keepIndexRefreshInterval) &&
        Objects.equals(this.ipFilter, updateDbaasServiceOpensearchRequest.ipFilter) &&
        Objects.equals(this.terminationProtection, updateDbaasServiceOpensearchRequest.terminationProtection) &&
        Objects.equals(this.indexPatterns, updateDbaasServiceOpensearchRequest.indexPatterns) &&
        Objects.equals(this.maintenance, updateDbaasServiceOpensearchRequest.maintenance) &&
        Objects.equals(this.indexTemplate, updateDbaasServiceOpensearchRequest.indexTemplate) &&
        Objects.equals(this.opensearchSettings, updateDbaasServiceOpensearchRequest.opensearchSettings) &&
        Objects.equals(this.version, updateDbaasServiceOpensearchRequest.version) &&
        Objects.equals(this.plan, updateDbaasServiceOpensearchRequest.plan) &&
        Objects.equals(this.opensearchDashboards, updateDbaasServiceOpensearchRequest.opensearchDashboards);
  }

  @Override
  public int hashCode() {
    return Objects.hash(maxIndexCount, keepIndexRefreshInterval, ipFilter, terminationProtection, indexPatterns, maintenance, indexTemplate, opensearchSettings, version, plan, opensearchDashboards);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateDbaasServiceOpensearchRequest {\n");
    sb.append("    maxIndexCount: ").append(toIndentedString(maxIndexCount)).append("\n");
    sb.append("    keepIndexRefreshInterval: ").append(toIndentedString(keepIndexRefreshInterval)).append("\n");
    sb.append("    ipFilter: ").append(toIndentedString(ipFilter)).append("\n");
    sb.append("    terminationProtection: ").append(toIndentedString(terminationProtection)).append("\n");
    sb.append("    indexPatterns: ").append(toIndentedString(indexPatterns)).append("\n");
    sb.append("    maintenance: ").append(toIndentedString(maintenance)).append("\n");
    sb.append("    indexTemplate: ").append(toIndentedString(indexTemplate)).append("\n");
    sb.append("    opensearchSettings: ").append(toIndentedString(opensearchSettings)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    plan: ").append(toIndentedString(plan)).append("\n");
    sb.append("    opensearchDashboards: ").append(toIndentedString(opensearchDashboards)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("max-index-count");
    openapiFields.add("keep-index-refresh-interval");
    openapiFields.add("ip-filter");
    openapiFields.add("termination-protection");
    openapiFields.add("index-patterns");
    openapiFields.add("maintenance");
    openapiFields.add("index-template");
    openapiFields.add("opensearch-settings");
    openapiFields.add("version");
    openapiFields.add("plan");
    openapiFields.add("opensearch-dashboards");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to UpdateDbaasServiceOpensearchRequest
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateDbaasServiceOpensearchRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateDbaasServiceOpensearchRequest is not found in the empty JSON string", UpdateDbaasServiceOpensearchRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdateDbaasServiceOpensearchRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateDbaasServiceOpensearchRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("ip-filter") != null && !jsonObj.get("ip-filter").isJsonNull() && !jsonObj.get("ip-filter").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `ip-filter` to be an array in the JSON string but got `%s`", jsonObj.get("ip-filter").toString()));
      }
      if (jsonObj.get("index-patterns") != null && !jsonObj.get("index-patterns").isJsonNull()) {
        JsonArray jsonArrayindexPatterns = jsonObj.getAsJsonArray("index-patterns");
        if (jsonArrayindexPatterns != null) {
          // ensure the json data is an array
          if (!jsonObj.get("index-patterns").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `index-patterns` to be an array in the JSON string but got `%s`", jsonObj.get("index-patterns").toString()));
          }

          // validate the optional field `index-patterns` (array)
          for (int i = 0; i < jsonArrayindexPatterns.size(); i++) {
            UpdateDbaasServiceOpensearchRequestIndexPatternsInner.validateJsonElement(jsonArrayindexPatterns.get(i));
          };
        }
      }
      // validate the optional field `maintenance`
      if (jsonObj.get("maintenance") != null && !jsonObj.get("maintenance").isJsonNull()) {
        UpdateDbaasServiceMysqlRequestMaintenance.validateJsonElement(jsonObj.get("maintenance"));
      }
      // validate the optional field `index-template`
      if (jsonObj.get("index-template") != null && !jsonObj.get("index-template").isJsonNull()) {
        UpdateDbaasServiceOpensearchRequestIndexTemplate.validateJsonElement(jsonObj.get("index-template"));
      }
      // validate the optional field `opensearch-settings`
      if (jsonObj.get("opensearch-settings") != null && !jsonObj.get("opensearch-settings").isJsonNull()) {
        JsonSchemaOpensearch.validateJsonElement(jsonObj.get("opensearch-settings"));
      }
      if ((jsonObj.get("version") != null && !jsonObj.get("version").isJsonNull()) && !jsonObj.get("version").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `version` to be a primitive type in the JSON string but got `%s`", jsonObj.get("version").toString()));
      }
      if ((jsonObj.get("plan") != null && !jsonObj.get("plan").isJsonNull()) && !jsonObj.get("plan").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `plan` to be a primitive type in the JSON string but got `%s`", jsonObj.get("plan").toString()));
      }
      // validate the optional field `opensearch-dashboards`
      if (jsonObj.get("opensearch-dashboards") != null && !jsonObj.get("opensearch-dashboards").isJsonNull()) {
        UpdateDbaasServiceOpensearchRequestOpensearchDashboards.validateJsonElement(jsonObj.get("opensearch-dashboards"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateDbaasServiceOpensearchRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateDbaasServiceOpensearchRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateDbaasServiceOpensearchRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateDbaasServiceOpensearchRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateDbaasServiceOpensearchRequest>() {
           @Override
           public void write(JsonWriter out, UpdateDbaasServiceOpensearchRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateDbaasServiceOpensearchRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of UpdateDbaasServiceOpensearchRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of UpdateDbaasServiceOpensearchRequest
  * @throws IOException if the JSON string is invalid with respect to UpdateDbaasServiceOpensearchRequest
  */
  public static UpdateDbaasServiceOpensearchRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateDbaasServiceOpensearchRequest.class);
  }

 /**
  * Convert an instance of UpdateDbaasServiceOpensearchRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

