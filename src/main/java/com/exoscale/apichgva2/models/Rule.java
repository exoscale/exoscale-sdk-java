/*
 * ExoscalePublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.exoscale.apichgva2.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for Rule type.
 */
public class Rule {
    private String index;
    private EnumOpensearchRulePermissionEnum permission;

    /**
     * Default constructor.
     */
    public Rule() {
    }

    /**
     * Initialization constructor.
     * @param  index  String value for index.
     * @param  permission  EnumOpensearchRulePermissionEnum value for permission.
     */
    public Rule(
            String index,
            EnumOpensearchRulePermissionEnum permission) {
        this.index = index;
        this.permission = permission;
    }

    /**
     * Getter for Index.
     * OpenSearch index pattern
     * @return Returns the String
     */
    @JsonGetter("index")
    public String getIndex() {
        return index;
    }

    /**
     * Setter for Index.
     * OpenSearch index pattern
     * @param index Value for String
     */
    @JsonSetter("index")
    public void setIndex(String index) {
        this.index = index;
    }

    /**
     * Getter for Permission.
     * @return Returns the EnumOpensearchRulePermissionEnum
     */
    @JsonGetter("permission")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public EnumOpensearchRulePermissionEnum getPermission() {
        return permission;
    }

    /**
     * Setter for Permission.
     * @param permission Value for EnumOpensearchRulePermissionEnum
     */
    @JsonSetter("permission")
    public void setPermission(EnumOpensearchRulePermissionEnum permission) {
        this.permission = permission;
    }

    /**
     * Converts this Rule into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Rule [" + "index=" + index + ", permission=" + permission + "]";
    }

    /**
     * Builds a new {@link Rule.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Rule.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(index)
                .permission(getPermission());
        return builder;
    }

    /**
     * Class to build instances of {@link Rule}.
     */
    public static class Builder {
        private String index;
        private EnumOpensearchRulePermissionEnum permission;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  index  String value for index.
         */
        public Builder(String index) {
            this.index = index;
        }

        /**
         * Setter for index.
         * @param  index  String value for index.
         * @return Builder
         */
        public Builder index(String index) {
            this.index = index;
            return this;
        }

        /**
         * Setter for permission.
         * @param  permission  EnumOpensearchRulePermissionEnum value for permission.
         * @return Builder
         */
        public Builder permission(EnumOpensearchRulePermissionEnum permission) {
            this.permission = permission;
            return this;
        }

        /**
         * Builds a new {@link Rule} object using the set fields.
         * @return {@link Rule}
         */
        public Rule build() {
            return new Rule(index, permission);
        }
    }
}
