/*
 * ExoscalePublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.exoscale.apichgva2.models;

import com.exoscale.apichgva2.DateTimeHelper;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.LocalDateTime;
import java.util.List;

/**
 * This is a model class for DbaasServiceCommon type.
 */
public class DbaasServiceCommon {
    private LocalDateTime updatedAt;
    private Long nodeCount;
    private Long nodeCpuCount;
    private List<DbaasIntegration> integrations;
    private String zone;
    private String name;
    private String type;
    private EnumServiceStateEnum state;
    private Boolean terminationProtection;
    private List<DbaasServiceNotification> notifications;
    private Long diskSize;
    private Long nodeMemory;
    private LocalDateTime createdAt;
    private String plan;

    /**
     * Default constructor.
     */
    public DbaasServiceCommon() {
    }

    /**
     * Initialization constructor.
     * @param  name  String value for name.
     * @param  type  String value for type.
     * @param  plan  String value for plan.
     * @param  updatedAt  LocalDateTime value for updatedAt.
     * @param  nodeCount  Long value for nodeCount.
     * @param  nodeCpuCount  Long value for nodeCpuCount.
     * @param  integrations  List of DbaasIntegration value for integrations.
     * @param  zone  String value for zone.
     * @param  state  EnumServiceStateEnum value for state.
     * @param  terminationProtection  Boolean value for terminationProtection.
     * @param  notifications  List of DbaasServiceNotification value for notifications.
     * @param  diskSize  Long value for diskSize.
     * @param  nodeMemory  Long value for nodeMemory.
     * @param  createdAt  LocalDateTime value for createdAt.
     */
    public DbaasServiceCommon(
            String name,
            String type,
            String plan,
            LocalDateTime updatedAt,
            Long nodeCount,
            Long nodeCpuCount,
            List<DbaasIntegration> integrations,
            String zone,
            EnumServiceStateEnum state,
            Boolean terminationProtection,
            List<DbaasServiceNotification> notifications,
            Long diskSize,
            Long nodeMemory,
            LocalDateTime createdAt) {
        this.updatedAt = updatedAt;
        this.nodeCount = nodeCount;
        this.nodeCpuCount = nodeCpuCount;
        this.integrations = integrations;
        this.zone = zone;
        this.name = name;
        this.type = type;
        this.state = state;
        this.terminationProtection = terminationProtection;
        this.notifications = notifications;
        this.diskSize = diskSize;
        this.nodeMemory = nodeMemory;
        this.createdAt = createdAt;
        this.plan = plan;
    }

    /**
     * Getter for UpdatedAt.
     * Service last update timestamp (ISO 8601)
     * @return Returns the LocalDateTime
     */
    @JsonGetter("updated-at")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getUpdatedAt() {
        return updatedAt;
    }

    /**
     * Setter for UpdatedAt.
     * Service last update timestamp (ISO 8601)
     * @param updatedAt Value for LocalDateTime
     */
    @JsonSetter("updated-at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for NodeCount.
     * Number of service nodes in the active plan
     * @return Returns the Long
     */
    @JsonGetter("node-count")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Long getNodeCount() {
        return nodeCount;
    }

    /**
     * Setter for NodeCount.
     * Number of service nodes in the active plan
     * @param nodeCount Value for Long
     */
    @JsonSetter("node-count")
    public void setNodeCount(Long nodeCount) {
        this.nodeCount = nodeCount;
    }

    /**
     * Getter for NodeCpuCount.
     * Number of CPUs for each node
     * @return Returns the Long
     */
    @JsonGetter("node-cpu-count")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Long getNodeCpuCount() {
        return nodeCpuCount;
    }

    /**
     * Setter for NodeCpuCount.
     * Number of CPUs for each node
     * @param nodeCpuCount Value for Long
     */
    @JsonSetter("node-cpu-count")
    public void setNodeCpuCount(Long nodeCpuCount) {
        this.nodeCpuCount = nodeCpuCount;
    }

    /**
     * Getter for Integrations.
     * Service integrations
     * @return Returns the List of DbaasIntegration
     */
    @JsonGetter("integrations")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<DbaasIntegration> getIntegrations() {
        return integrations;
    }

    /**
     * Setter for Integrations.
     * Service integrations
     * @param integrations Value for List of DbaasIntegration
     */
    @JsonSetter("integrations")
    public void setIntegrations(List<DbaasIntegration> integrations) {
        this.integrations = integrations;
    }

    /**
     * Getter for Zone.
     * The zone where the service is running
     * @return Returns the String
     */
    @JsonGetter("zone")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getZone() {
        return zone;
    }

    /**
     * Setter for Zone.
     * The zone where the service is running
     * @param zone Value for String
     */
    @JsonSetter("zone")
    public void setZone(String zone) {
        this.zone = zone;
    }

    /**
     * Getter for Name.
     * @return Returns the String
     */
    @JsonGetter("name")
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for Type.
     * @return Returns the String
     */
    @JsonGetter("type")
    public String getType() {
        return type;
    }

    /**
     * Setter for Type.
     * @param type Value for String
     */
    @JsonSetter("type")
    public void setType(String type) {
        this.type = type;
    }

    /**
     * Getter for State.
     * @return Returns the EnumServiceStateEnum
     */
    @JsonGetter("state")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public EnumServiceStateEnum getState() {
        return state;
    }

    /**
     * Setter for State.
     * @param state Value for EnumServiceStateEnum
     */
    @JsonSetter("state")
    public void setState(EnumServiceStateEnum state) {
        this.state = state;
    }

    /**
     * Getter for TerminationProtection.
     * Service is protected against termination and powering off
     * @return Returns the Boolean
     */
    @JsonGetter("termination-protection")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getTerminationProtection() {
        return terminationProtection;
    }

    /**
     * Setter for TerminationProtection.
     * Service is protected against termination and powering off
     * @param terminationProtection Value for Boolean
     */
    @JsonSetter("termination-protection")
    public void setTerminationProtection(Boolean terminationProtection) {
        this.terminationProtection = terminationProtection;
    }

    /**
     * Getter for Notifications.
     * Service notifications
     * @return Returns the List of DbaasServiceNotification
     */
    @JsonGetter("notifications")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<DbaasServiceNotification> getNotifications() {
        return notifications;
    }

    /**
     * Setter for Notifications.
     * Service notifications
     * @param notifications Value for List of DbaasServiceNotification
     */
    @JsonSetter("notifications")
    public void setNotifications(List<DbaasServiceNotification> notifications) {
        this.notifications = notifications;
    }

    /**
     * Getter for DiskSize.
     * TODO UNIT disk space for data storage
     * @return Returns the Long
     */
    @JsonGetter("disk-size")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Long getDiskSize() {
        return diskSize;
    }

    /**
     * Setter for DiskSize.
     * TODO UNIT disk space for data storage
     * @param diskSize Value for Long
     */
    @JsonSetter("disk-size")
    public void setDiskSize(Long diskSize) {
        this.diskSize = diskSize;
    }

    /**
     * Getter for NodeMemory.
     * TODO UNIT of memory for each node
     * @return Returns the Long
     */
    @JsonGetter("node-memory")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Long getNodeMemory() {
        return nodeMemory;
    }

    /**
     * Setter for NodeMemory.
     * TODO UNIT of memory for each node
     * @param nodeMemory Value for Long
     */
    @JsonSetter("node-memory")
    public void setNodeMemory(Long nodeMemory) {
        this.nodeMemory = nodeMemory;
    }

    /**
     * Getter for CreatedAt.
     * Service creation timestamp (ISO 8601)
     * @return Returns the LocalDateTime
     */
    @JsonGetter("created-at")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getCreatedAt() {
        return createdAt;
    }

    /**
     * Setter for CreatedAt.
     * Service creation timestamp (ISO 8601)
     * @param createdAt Value for LocalDateTime
     */
    @JsonSetter("created-at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Getter for Plan.
     * Subscription plan
     * @return Returns the String
     */
    @JsonGetter("plan")
    public String getPlan() {
        return plan;
    }

    /**
     * Setter for Plan.
     * Subscription plan
     * @param plan Value for String
     */
    @JsonSetter("plan")
    public void setPlan(String plan) {
        this.plan = plan;
    }

    /**
     * Converts this DbaasServiceCommon into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "DbaasServiceCommon [" + "name=" + name + ", type=" + type + ", plan=" + plan
                + ", updatedAt=" + updatedAt + ", nodeCount=" + nodeCount + ", nodeCpuCount="
                + nodeCpuCount + ", integrations=" + integrations + ", zone=" + zone + ", state="
                + state + ", terminationProtection=" + terminationProtection + ", notifications="
                + notifications + ", diskSize=" + diskSize + ", nodeMemory=" + nodeMemory
                + ", createdAt=" + createdAt + "]";
    }

    /**
     * Builds a new {@link DbaasServiceCommon.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link DbaasServiceCommon.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(name, type, plan)
                .updatedAt(getUpdatedAt())
                .nodeCount(getNodeCount())
                .nodeCpuCount(getNodeCpuCount())
                .integrations(getIntegrations())
                .zone(getZone())
                .state(getState())
                .terminationProtection(getTerminationProtection())
                .notifications(getNotifications())
                .diskSize(getDiskSize())
                .nodeMemory(getNodeMemory())
                .createdAt(getCreatedAt());
        return builder;
    }

    /**
     * Class to build instances of {@link DbaasServiceCommon}.
     */
    public static class Builder {
        private String name;
        private String type;
        private String plan;
        private LocalDateTime updatedAt;
        private Long nodeCount;
        private Long nodeCpuCount;
        private List<DbaasIntegration> integrations;
        private String zone;
        private EnumServiceStateEnum state;
        private Boolean terminationProtection;
        private List<DbaasServiceNotification> notifications;
        private Long diskSize;
        private Long nodeMemory;
        private LocalDateTime createdAt;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  name  String value for name.
         * @param  type  String value for type.
         * @param  plan  String value for plan.
         */
        public Builder(String name, String type, String plan) {
            this.name = name;
            this.type = type;
            this.plan = plan;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for type.
         * @param  type  String value for type.
         * @return Builder
         */
        public Builder type(String type) {
            this.type = type;
            return this;
        }

        /**
         * Setter for plan.
         * @param  plan  String value for plan.
         * @return Builder
         */
        public Builder plan(String plan) {
            this.plan = plan;
            return this;
        }

        /**
         * Setter for updatedAt.
         * @param  updatedAt  LocalDateTime value for updatedAt.
         * @return Builder
         */
        public Builder updatedAt(LocalDateTime updatedAt) {
            this.updatedAt = updatedAt;
            return this;
        }

        /**
         * Setter for nodeCount.
         * @param  nodeCount  Long value for nodeCount.
         * @return Builder
         */
        public Builder nodeCount(Long nodeCount) {
            this.nodeCount = nodeCount;
            return this;
        }

        /**
         * Setter for nodeCpuCount.
         * @param  nodeCpuCount  Long value for nodeCpuCount.
         * @return Builder
         */
        public Builder nodeCpuCount(Long nodeCpuCount) {
            this.nodeCpuCount = nodeCpuCount;
            return this;
        }

        /**
         * Setter for integrations.
         * @param  integrations  List of DbaasIntegration value for integrations.
         * @return Builder
         */
        public Builder integrations(List<DbaasIntegration> integrations) {
            this.integrations = integrations;
            return this;
        }

        /**
         * Setter for zone.
         * @param  zone  String value for zone.
         * @return Builder
         */
        public Builder zone(String zone) {
            this.zone = zone;
            return this;
        }

        /**
         * Setter for state.
         * @param  state  EnumServiceStateEnum value for state.
         * @return Builder
         */
        public Builder state(EnumServiceStateEnum state) {
            this.state = state;
            return this;
        }

        /**
         * Setter for terminationProtection.
         * @param  terminationProtection  Boolean value for terminationProtection.
         * @return Builder
         */
        public Builder terminationProtection(Boolean terminationProtection) {
            this.terminationProtection = terminationProtection;
            return this;
        }

        /**
         * Setter for notifications.
         * @param  notifications  List of DbaasServiceNotification value for notifications.
         * @return Builder
         */
        public Builder notifications(List<DbaasServiceNotification> notifications) {
            this.notifications = notifications;
            return this;
        }

        /**
         * Setter for diskSize.
         * @param  diskSize  Long value for diskSize.
         * @return Builder
         */
        public Builder diskSize(Long diskSize) {
            this.diskSize = diskSize;
            return this;
        }

        /**
         * Setter for nodeMemory.
         * @param  nodeMemory  Long value for nodeMemory.
         * @return Builder
         */
        public Builder nodeMemory(Long nodeMemory) {
            this.nodeMemory = nodeMemory;
            return this;
        }

        /**
         * Setter for createdAt.
         * @param  createdAt  LocalDateTime value for createdAt.
         * @return Builder
         */
        public Builder createdAt(LocalDateTime createdAt) {
            this.createdAt = createdAt;
            return this;
        }

        /**
         * Builds a new {@link DbaasServiceCommon} object using the set fields.
         * @return {@link DbaasServiceCommon}
         */
        public DbaasServiceCommon build() {
            return new DbaasServiceCommon(name, type, plan, updatedAt, nodeCount, nodeCpuCount,
                    integrations, zone, state, terminationProtection, notifications, diskSize,
                    nodeMemory, createdAt);
        }
    }
}
