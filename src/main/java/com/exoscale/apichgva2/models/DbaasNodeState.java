/*
 * ExoscalePublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.exoscale.apichgva2.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for DbaasNodeState type.
 */
public class DbaasNodeState {
    private String name;
    private List<DbaasNodeStateProgressUpdate> progressUpdates;
    private RoleEnum role;
    private StateEnum state;

    /**
     * Default constructor.
     */
    public DbaasNodeState() {
    }

    /**
     * Initialization constructor.
     * @param  name  String value for name.
     * @param  state  StateEnum value for state.
     * @param  progressUpdates  List of DbaasNodeStateProgressUpdate value for progressUpdates.
     * @param  role  RoleEnum value for role.
     */
    public DbaasNodeState(
            String name,
            StateEnum state,
            List<DbaasNodeStateProgressUpdate> progressUpdates,
            RoleEnum role) {
        this.name = name;
        this.progressUpdates = progressUpdates;
        this.role = role;
        this.state = state;
    }

    /**
     * Getter for Name.
     * Name of the service node
     * @return Returns the String
     */
    @JsonGetter("name")
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * Name of the service node
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for ProgressUpdates.
     * Extra information regarding the progress for current state
     * @return Returns the List of DbaasNodeStateProgressUpdate
     */
    @JsonGetter("progress-updates")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<DbaasNodeStateProgressUpdate> getProgressUpdates() {
        return progressUpdates;
    }

    /**
     * Setter for ProgressUpdates.
     * Extra information regarding the progress for current state
     * @param progressUpdates Value for List of DbaasNodeStateProgressUpdate
     */
    @JsonSetter("progress-updates")
    public void setProgressUpdates(List<DbaasNodeStateProgressUpdate> progressUpdates) {
        this.progressUpdates = progressUpdates;
    }

    /**
     * Getter for Role.
     * Role of this node. Only returned for a subset of service types
     * @return Returns the RoleEnum
     */
    @JsonGetter("role")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public RoleEnum getRole() {
        return role;
    }

    /**
     * Setter for Role.
     * Role of this node. Only returned for a subset of service types
     * @param role Value for RoleEnum
     */
    @JsonSetter("role")
    public void setRole(RoleEnum role) {
        this.role = role;
    }

    /**
     * Getter for State.
     * Current state of the service node
     * @return Returns the StateEnum
     */
    @JsonGetter("state")
    public StateEnum getState() {
        return state;
    }

    /**
     * Setter for State.
     * Current state of the service node
     * @param state Value for StateEnum
     */
    @JsonSetter("state")
    public void setState(StateEnum state) {
        this.state = state;
    }

    /**
     * Converts this DbaasNodeState into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "DbaasNodeState [" + "name=" + name + ", state=" + state + ", progressUpdates="
                + progressUpdates + ", role=" + role + "]";
    }

    /**
     * Builds a new {@link DbaasNodeState.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link DbaasNodeState.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(name, state)
                .progressUpdates(getProgressUpdates())
                .role(getRole());
        return builder;
    }

    /**
     * Class to build instances of {@link DbaasNodeState}.
     */
    public static class Builder {
        private String name;
        private StateEnum state;
        private List<DbaasNodeStateProgressUpdate> progressUpdates;
        private RoleEnum role;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  name  String value for name.
         * @param  state  StateEnum value for state.
         */
        public Builder(String name, StateEnum state) {
            this.name = name;
            this.state = state;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for state.
         * @param  state  StateEnum value for state.
         * @return Builder
         */
        public Builder state(StateEnum state) {
            this.state = state;
            return this;
        }

        /**
         * Setter for progressUpdates.
         * @param  progressUpdates  List of DbaasNodeStateProgressUpdate value for progressUpdates.
         * @return Builder
         */
        public Builder progressUpdates(List<DbaasNodeStateProgressUpdate> progressUpdates) {
            this.progressUpdates = progressUpdates;
            return this;
        }

        /**
         * Setter for role.
         * @param  role  RoleEnum value for role.
         * @return Builder
         */
        public Builder role(RoleEnum role) {
            this.role = role;
            return this;
        }

        /**
         * Builds a new {@link DbaasNodeState} object using the set fields.
         * @return {@link DbaasNodeState}
         */
        public DbaasNodeState build() {
            return new DbaasNodeState(name, state, progressUpdates, role);
        }
    }
}
