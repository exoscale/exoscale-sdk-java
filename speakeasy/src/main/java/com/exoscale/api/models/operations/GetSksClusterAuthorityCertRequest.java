/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.exoscale.api.models.operations;

import com.exoscale.api.utils.SpeakeasyMetadata;
import com.exoscale.api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;


public class GetSksClusterAuthorityCertRequest {

    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=id")
    private String id;

    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=authority")
    private Authority authority;

    public GetSksClusterAuthorityCertRequest(
            String id,
            Authority authority) {
        Utils.checkNotNull(id, "id");
        Utils.checkNotNull(authority, "authority");
        this.id = id;
        this.authority = authority;
    }

    public String id() {
        return id;
    }

    public Authority authority() {
        return authority;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public GetSksClusterAuthorityCertRequest withId(String id) {
        Utils.checkNotNull(id, "id");
        this.id = id;
        return this;
    }

    public GetSksClusterAuthorityCertRequest withAuthority(Authority authority) {
        Utils.checkNotNull(authority, "authority");
        this.authority = authority;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetSksClusterAuthorityCertRequest other = (GetSksClusterAuthorityCertRequest) o;
        return 
            java.util.Objects.deepEquals(this.id, other.id) &&
            java.util.Objects.deepEquals(this.authority, other.authority);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            id,
            authority);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GetSksClusterAuthorityCertRequest.class,
                "id", id,
                "authority", authority);
    }
    
    public final static class Builder {
 
        private String id;
 
        private Authority authority;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder id(String id) {
            Utils.checkNotNull(id, "id");
            this.id = id;
            return this;
        }

        public Builder authority(Authority authority) {
            Utils.checkNotNull(authority, "authority");
            this.authority = authority;
            return this;
        }
        
        public GetSksClusterAuthorityCertRequest build() {
            return new GetSksClusterAuthorityCertRequest(
                id,
                authority);
        }
    }
}

