/*
 * Exoscale Public API
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@exoscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.exoscale.api;

import com.exoscale.model.AddServiceToLoadBalancerRequest;
import com.exoscale.model.CreateLoadBalancerRequest;
import com.exoscale.model.ListLoadBalancers200Response;
import com.exoscale.model.LoadBalancer;
import com.exoscale.model.LoadBalancerService;
import com.exoscale.model.Operation;
import java.util.UUID;
import com.exoscale.model.UpdateLoadBalancerRequest;
import com.exoscale.model.UpdateLoadBalancerServiceRequest;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

/**
 * API tests for NetworkLoadBalancerApi
 */
@Ignore
public class NetworkLoadBalancerApiTest {

    private final NetworkLoadBalancerApi api = new NetworkLoadBalancerApi();

    
    /**
     * Add a Load Balancer Service
     *
     * 
     */
    @Test
    public void addServiceToLoadBalancerTest()  {
        UUID id = null;
        AddServiceToLoadBalancerRequest addServiceToLoadBalancerRequest = null;
        Operation response = api.addServiceToLoadBalancer(id, addServiceToLoadBalancerRequest).block();

        // TODO: test validations
    }
    
    /**
     * Create a Load Balancer
     *
     * 
     */
    @Test
    public void createLoadBalancerTest()  {
        CreateLoadBalancerRequest createLoadBalancerRequest = null;
        Operation response = api.createLoadBalancer(createLoadBalancerRequest).block();

        // TODO: test validations
    }
    
    /**
     * Delete a Load Balancer
     *
     * 
     */
    @Test
    public void deleteLoadBalancerTest()  {
        UUID id = null;
        Operation response = api.deleteLoadBalancer(id).block();

        // TODO: test validations
    }
    
    /**
     * Delete a Load Balancer Service
     *
     * 
     */
    @Test
    public void deleteLoadBalancerServiceTest()  {
        UUID id = null;
        UUID serviceId = null;
        Operation response = api.deleteLoadBalancerService(id, serviceId).block();

        // TODO: test validations
    }
    
    /**
     * Retrieve Load Balancer details
     *
     * 
     */
    @Test
    public void getLoadBalancerTest()  {
        UUID id = null;
        LoadBalancer response = api.getLoadBalancer(id).block();

        // TODO: test validations
    }
    
    /**
     * Retrieve Load Balancer Service details
     *
     * 
     */
    @Test
    public void getLoadBalancerServiceTest()  {
        UUID id = null;
        UUID serviceId = null;
        LoadBalancerService response = api.getLoadBalancerService(id, serviceId).block();

        // TODO: test validations
    }
    
    /**
     * List Load Balancers
     *
     * 
     */
    @Test
    public void listLoadBalancersTest()  {
        ListLoadBalancers200Response response = api.listLoadBalancers().block();

        // TODO: test validations
    }
    
    /**
     * Reset a Load Balancer field to its default value
     *
     * 
     */
    @Test
    public void resetLoadBalancerFieldTest()  {
        UUID id = null;
        String field = null;
        Operation response = api.resetLoadBalancerField(id, field).block();

        // TODO: test validations
    }
    
    /**
     * Reset a Load Balancer Service field to its default value
     *
     * 
     */
    @Test
    public void resetLoadBalancerServiceFieldTest()  {
        UUID id = null;
        UUID serviceId = null;
        String field = null;
        Operation response = api.resetLoadBalancerServiceField(id, serviceId, field).block();

        // TODO: test validations
    }
    
    /**
     * Update a Load Balancer
     *
     * 
     */
    @Test
    public void updateLoadBalancerTest()  {
        UUID id = null;
        UpdateLoadBalancerRequest updateLoadBalancerRequest = null;
        Operation response = api.updateLoadBalancer(id, updateLoadBalancerRequest).block();

        // TODO: test validations
    }
    
    /**
     * Update a Load Balancer Service
     *
     * 
     */
    @Test
    public void updateLoadBalancerServiceTest()  {
        UUID id = null;
        UUID serviceId = null;
        UpdateLoadBalancerServiceRequest updateLoadBalancerServiceRequest = null;
        Operation response = api.updateLoadBalancerService(id, serviceId, updateLoadBalancerServiceRequest).block();

        // TODO: test validations
    }
    
}
