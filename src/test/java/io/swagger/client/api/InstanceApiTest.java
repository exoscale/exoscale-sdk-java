/*
 * Exoscale Public API
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * OpenAPI spec version: 2.0.0
 * Contact: api@exoscale.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.InlineResponse20038;
import io.swagger.client.model.Instance;
import io.swagger.client.model.InstanceBody;
import io.swagger.client.model.InstanceIdBody1;
import io.swagger.client.model.InstanceIdresetBody;
import io.swagger.client.model.InstanceIdresizediskBody;
import io.swagger.client.model.InstanceIdscaleBody;
import io.swagger.client.model.InstanceIdstartBody;
import io.swagger.client.model.InstanceInstanceidrevertsnapshotBody;
import io.swagger.client.model.InstancePassword;
import io.swagger.client.model.Operation;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for InstanceApi
 */
@Ignore
public class InstanceApiTest {

    private final InstanceApi api = new InstanceApi();

    /**
     * Set instance destruction protection
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addInstanceProtectionTest() {
        UUID id = null;
        Object response = api.addInstanceProtection(id);

        // TODO: test validations
    }
    /**
     * Create a Compute instance
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createInstanceTest() {
        InstanceBody body = null;
        Operation response = api.createInstance(body);

        // TODO: test validations
    }
    /**
     * Create a Snapshot of a Compute instance
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createSnapshotTest() {
        UUID id = null;
        Operation response = api.createSnapshot(id);

        // TODO: test validations
    }
    /**
     * Delete a Compute instance
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteInstanceTest() {
        UUID id = null;
        Operation response = api.deleteInstance(id);

        // TODO: test validations
    }
    /**
     * Retrieve Compute instance details
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getInstanceTest() {
        UUID id = null;
        Instance response = api.getInstance(id);

        // TODO: test validations
    }
    /**
     * List Compute instances
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listInstancesTest() {
        UUID managerId = null;
        String managerType = null;
        String ipAddress = null;
        InlineResponse20038 response = api.listInstances(managerId, managerType, ipAddress);

        // TODO: test validations
    }
    /**
     * Reboot a Compute instance
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void rebootInstanceTest() {
        UUID id = null;
        Operation response = api.rebootInstance(id);

        // TODO: test validations
    }
    /**
     * Remove instance destruction protection
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void removeInstanceProtectionTest() {
        UUID id = null;
        Object response = api.removeInstanceProtection(id);

        // TODO: test validations
    }
    /**
     * Reset a Compute instance to a base/target template
     *
     * This operation re-installs a Compute instance to a base template. If target template is provided it will be used to recreated instance from. Warning: the operation wipes all data stored on the disk.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void resetInstanceTest() {
        InstanceIdresetBody body = null;
        UUID id = null;
        Operation response = api.resetInstance(body, id);

        // TODO: test validations
    }
    /**
     * Reset Instance field
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void resetInstanceFieldTest() {
        UUID id = null;
        String field = null;
        Operation response = api.resetInstanceField(id, field);

        // TODO: test validations
    }
    /**
     * Reset a compute instance password
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void resetInstancePasswordTest() {
        UUID id = null;
        Operation response = api.resetInstancePassword(id);

        // TODO: test validations
    }
    /**
     * Resize a Compute instance disk
     *
     * This operation resizes a Compute instance&#x27;s disk volume. Note: the disk can only grow, cannot be shrunk.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void resizeInstanceDiskTest() {
        InstanceIdresizediskBody body = null;
        UUID id = null;
        Operation response = api.resizeInstanceDisk(body, id);

        // TODO: test validations
    }
    /**
     * Reveal the password used during instance creation or the latest password reset.
     *
     * Reveal the password used during instance creation or the latest password reset.             This is only available for VMs created against templates having the &#x60;password-enabled&#x60;             property set to &#x60;true&#x60;.              Passwords are transiently stored for at most 24 hours and intended to be retrieved shortly after             creation or resets.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void revealInstancePasswordTest() {
        UUID id = null;
        InstancePassword response = api.revealInstancePassword(id);

        // TODO: test validations
    }
    /**
     * Revert a snapshot for an instance
     *
     * This operation reverts the snapshot to the Compute instance volume, restoring stored data as it was at the time of the snapshot. The Compute instance must be previously stopped.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void revertInstanceToSnapshotTest() {
        InstanceInstanceidrevertsnapshotBody body = null;
        UUID instanceId = null;
        Operation response = api.revertInstanceToSnapshot(body, instanceId);

        // TODO: test validations
    }
    /**
     * Scale a Compute instance to a new Instance Type
     *
     * This operation changes the Compute instance&#x27;s type. Note: the new Instance Type must be within the same family (e.g. a standard instance cannot be scaled to gpu2 or storage).
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void scaleInstanceTest() {
        InstanceIdscaleBody body = null;
        UUID id = null;
        Operation response = api.scaleInstance(body, id);

        // TODO: test validations
    }
    /**
     * Start a Compute instance
     *
     * This operation starts a virtual machine, potentially using a rescue profile if specified
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void startInstanceTest() {
        InstanceIdstartBody body = null;
        UUID id = null;
        Operation response = api.startInstance(body, id);

        // TODO: test validations
    }
    /**
     * Stop a Compute instance
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void stopInstanceTest() {
        UUID id = null;
        Operation response = api.stopInstance(id);

        // TODO: test validations
    }
    /**
     * Update a Compute instance
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateInstanceTest() {
        InstanceIdBody1 body = null;
        UUID id = null;
        Operation response = api.updateInstance(body, id);

        // TODO: test validations
    }
}
