/*
 * Exoscale Public API
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@exoscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.exoscale.sdk.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * UpdateDbaasServiceMysqlRequestBackupSchedule
 */
@JsonPropertyOrder({
  UpdateDbaasServiceMysqlRequestBackupSchedule.JSON_PROPERTY_BACKUP_HOUR,
  UpdateDbaasServiceMysqlRequestBackupSchedule.JSON_PROPERTY_BACKUP_MINUTE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.4.0")
public class UpdateDbaasServiceMysqlRequestBackupSchedule {
  public static final String JSON_PROPERTY_BACKUP_HOUR = "backup-hour";
  private JsonNullable<Long> backupHour = JsonNullable.<Long>undefined();

  public static final String JSON_PROPERTY_BACKUP_MINUTE = "backup-minute";
  private JsonNullable<Long> backupMinute = JsonNullable.<Long>undefined();

  public UpdateDbaasServiceMysqlRequestBackupSchedule() { 
  }

  public UpdateDbaasServiceMysqlRequestBackupSchedule backupHour(Long backupHour) {
    this.backupHour = JsonNullable.<Long>of(backupHour);
    return this;
  }

   /**
   * The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed.
   * minimum: 0
   * maximum: 23
   * @return backupHour
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Long getBackupHour() {
        return backupHour.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BACKUP_HOUR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Long> getBackupHour_JsonNullable() {
    return backupHour;
  }
  
  @JsonProperty(JSON_PROPERTY_BACKUP_HOUR)
  public void setBackupHour_JsonNullable(JsonNullable<Long> backupHour) {
    this.backupHour = backupHour;
  }

  public void setBackupHour(Long backupHour) {
    this.backupHour = JsonNullable.<Long>of(backupHour);
  }


  public UpdateDbaasServiceMysqlRequestBackupSchedule backupMinute(Long backupMinute) {
    this.backupMinute = JsonNullable.<Long>of(backupMinute);
    return this;
  }

   /**
   * The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed.
   * minimum: 0
   * maximum: 59
   * @return backupMinute
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Long getBackupMinute() {
        return backupMinute.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BACKUP_MINUTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Long> getBackupMinute_JsonNullable() {
    return backupMinute;
  }
  
  @JsonProperty(JSON_PROPERTY_BACKUP_MINUTE)
  public void setBackupMinute_JsonNullable(JsonNullable<Long> backupMinute) {
    this.backupMinute = backupMinute;
  }

  public void setBackupMinute(Long backupMinute) {
    this.backupMinute = JsonNullable.<Long>of(backupMinute);
  }


  /**
   * Return true if this update_dbaas_service_mysql_request_backup_schedule object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateDbaasServiceMysqlRequestBackupSchedule updateDbaasServiceMysqlRequestBackupSchedule = (UpdateDbaasServiceMysqlRequestBackupSchedule) o;
    return equalsNullable(this.backupHour, updateDbaasServiceMysqlRequestBackupSchedule.backupHour) &&
        equalsNullable(this.backupMinute, updateDbaasServiceMysqlRequestBackupSchedule.backupMinute);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(backupHour), hashCodeNullable(backupMinute));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateDbaasServiceMysqlRequestBackupSchedule {\n");
    sb.append("    backupHour: ").append(toIndentedString(backupHour)).append("\n");
    sb.append("    backupMinute: ").append(toIndentedString(backupMinute)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `backup-hour` to the URL query string
    if (getBackupHour() != null) {
      joiner.add(String.format("%sbackup-hour%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getBackupHour()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `backup-minute` to the URL query string
    if (getBackupMinute() != null) {
      joiner.add(String.format("%sbackup-minute%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getBackupMinute()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

