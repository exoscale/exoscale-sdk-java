/*
 * ExoscalePublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.exoscale.apichgva2.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for ConnectionInfo type.
 */
public class ConnectionInfo {
    private List<String> uri;
    private List<String> params;
    private List<String> standby;

    /**
     * Default constructor.
     */
    public ConnectionInfo() {
    }

    /**
     * Initialization constructor.
     * @param  uri  List of String value for uri.
     * @param  params  List of String value for params.
     * @param  standby  List of String value for standby.
     */
    public ConnectionInfo(
            List<String> uri,
            List<String> params,
            List<String> standby) {
        this.uri = uri;
        this.params = params;
        this.standby = standby;
    }

    /**
     * Getter for Uri.
     * @return Returns the List of String
     */
    @JsonGetter("uri")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<String> getUri() {
        return uri;
    }

    /**
     * Setter for Uri.
     * @param uri Value for List of String
     */
    @JsonSetter("uri")
    public void setUri(List<String> uri) {
        this.uri = uri;
    }

    /**
     * Getter for Params.
     * @return Returns the List of String
     */
    @JsonGetter("params")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<String> getParams() {
        return params;
    }

    /**
     * Setter for Params.
     * @param params Value for List of String
     */
    @JsonSetter("params")
    public void setParams(List<String> params) {
        this.params = params;
    }

    /**
     * Getter for Standby.
     * @return Returns the List of String
     */
    @JsonGetter("standby")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<String> getStandby() {
        return standby;
    }

    /**
     * Setter for Standby.
     * @param standby Value for List of String
     */
    @JsonSetter("standby")
    public void setStandby(List<String> standby) {
        this.standby = standby;
    }

    /**
     * Converts this ConnectionInfo into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ConnectionInfo [" + "uri=" + uri + ", params=" + params + ", standby=" + standby
                + "]";
    }

    /**
     * Builds a new {@link ConnectionInfo.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ConnectionInfo.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .uri(getUri())
                .params(getParams())
                .standby(getStandby());
        return builder;
    }

    /**
     * Class to build instances of {@link ConnectionInfo}.
     */
    public static class Builder {
        private List<String> uri;
        private List<String> params;
        private List<String> standby;



        /**
         * Setter for uri.
         * @param  uri  List of String value for uri.
         * @return Builder
         */
        public Builder uri(List<String> uri) {
            this.uri = uri;
            return this;
        }

        /**
         * Setter for params.
         * @param  params  List of String value for params.
         * @return Builder
         */
        public Builder params(List<String> params) {
            this.params = params;
            return this;
        }

        /**
         * Setter for standby.
         * @param  standby  List of String value for standby.
         * @return Builder
         */
        public Builder standby(List<String> standby) {
            this.standby = standby;
            return this;
        }

        /**
         * Builds a new {@link ConnectionInfo} object using the set fields.
         * @return {@link ConnectionInfo}
         */
        public ConnectionInfo build() {
            return new ConnectionInfo(uri, params, standby);
        }
    }
}
