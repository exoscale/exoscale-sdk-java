/*
 * Exoscale Public API
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@exoscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GetDbaasSettingsPg200ResponseSettingsPg;
import org.openapitools.client.model.GetDbaasSettingsPg200ResponseSettingsPgbouncer;
import org.openapitools.client.model.GetDbaasSettingsPg200ResponseSettingsPglookout;
import org.openapitools.client.model.GetDbaasSettingsPg200ResponseSettingsTimescaledb;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetDbaasSettingsPg200ResponseSettings
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-27T17:14:44.205710495Z[Etc/UTC]", comments = "Generator version: 7.5.0-SNAPSHOT")
public class GetDbaasSettingsPg200ResponseSettings {
  public static final String SERIALIZED_NAME_PG = "pg";
  @SerializedName(SERIALIZED_NAME_PG)
  private GetDbaasSettingsPg200ResponseSettingsPg pg;

  public static final String SERIALIZED_NAME_PGLOOKOUT = "pglookout";
  @SerializedName(SERIALIZED_NAME_PGLOOKOUT)
  private GetDbaasSettingsPg200ResponseSettingsPglookout pglookout;

  public static final String SERIALIZED_NAME_PGBOUNCER = "pgbouncer";
  @SerializedName(SERIALIZED_NAME_PGBOUNCER)
  private GetDbaasSettingsPg200ResponseSettingsPgbouncer pgbouncer;

  public static final String SERIALIZED_NAME_TIMESCALEDB = "timescaledb";
  @SerializedName(SERIALIZED_NAME_TIMESCALEDB)
  private GetDbaasSettingsPg200ResponseSettingsTimescaledb timescaledb;

  public GetDbaasSettingsPg200ResponseSettings() {
  }

  public GetDbaasSettingsPg200ResponseSettings pg(GetDbaasSettingsPg200ResponseSettingsPg pg) {
    this.pg = pg;
    return this;
  }

   /**
   * Get pg
   * @return pg
  **/
  @javax.annotation.Nullable
  public GetDbaasSettingsPg200ResponseSettingsPg getPg() {
    return pg;
  }

  public void setPg(GetDbaasSettingsPg200ResponseSettingsPg pg) {
    this.pg = pg;
  }


  public GetDbaasSettingsPg200ResponseSettings pglookout(GetDbaasSettingsPg200ResponseSettingsPglookout pglookout) {
    this.pglookout = pglookout;
    return this;
  }

   /**
   * Get pglookout
   * @return pglookout
  **/
  @javax.annotation.Nullable
  public GetDbaasSettingsPg200ResponseSettingsPglookout getPglookout() {
    return pglookout;
  }

  public void setPglookout(GetDbaasSettingsPg200ResponseSettingsPglookout pglookout) {
    this.pglookout = pglookout;
  }


  public GetDbaasSettingsPg200ResponseSettings pgbouncer(GetDbaasSettingsPg200ResponseSettingsPgbouncer pgbouncer) {
    this.pgbouncer = pgbouncer;
    return this;
  }

   /**
   * Get pgbouncer
   * @return pgbouncer
  **/
  @javax.annotation.Nullable
  public GetDbaasSettingsPg200ResponseSettingsPgbouncer getPgbouncer() {
    return pgbouncer;
  }

  public void setPgbouncer(GetDbaasSettingsPg200ResponseSettingsPgbouncer pgbouncer) {
    this.pgbouncer = pgbouncer;
  }


  public GetDbaasSettingsPg200ResponseSettings timescaledb(GetDbaasSettingsPg200ResponseSettingsTimescaledb timescaledb) {
    this.timescaledb = timescaledb;
    return this;
  }

   /**
   * Get timescaledb
   * @return timescaledb
  **/
  @javax.annotation.Nullable
  public GetDbaasSettingsPg200ResponseSettingsTimescaledb getTimescaledb() {
    return timescaledb;
  }

  public void setTimescaledb(GetDbaasSettingsPg200ResponseSettingsTimescaledb timescaledb) {
    this.timescaledb = timescaledb;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetDbaasSettingsPg200ResponseSettings getDbaasSettingsPg200ResponseSettings = (GetDbaasSettingsPg200ResponseSettings) o;
    return Objects.equals(this.pg, getDbaasSettingsPg200ResponseSettings.pg) &&
        Objects.equals(this.pglookout, getDbaasSettingsPg200ResponseSettings.pglookout) &&
        Objects.equals(this.pgbouncer, getDbaasSettingsPg200ResponseSettings.pgbouncer) &&
        Objects.equals(this.timescaledb, getDbaasSettingsPg200ResponseSettings.timescaledb);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pg, pglookout, pgbouncer, timescaledb);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetDbaasSettingsPg200ResponseSettings {\n");
    sb.append("    pg: ").append(toIndentedString(pg)).append("\n");
    sb.append("    pglookout: ").append(toIndentedString(pglookout)).append("\n");
    sb.append("    pgbouncer: ").append(toIndentedString(pgbouncer)).append("\n");
    sb.append("    timescaledb: ").append(toIndentedString(timescaledb)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("pg");
    openapiFields.add("pglookout");
    openapiFields.add("pgbouncer");
    openapiFields.add("timescaledb");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to GetDbaasSettingsPg200ResponseSettings
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetDbaasSettingsPg200ResponseSettings.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetDbaasSettingsPg200ResponseSettings is not found in the empty JSON string", GetDbaasSettingsPg200ResponseSettings.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetDbaasSettingsPg200ResponseSettings.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetDbaasSettingsPg200ResponseSettings` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `pg`
      if (jsonObj.get("pg") != null && !jsonObj.get("pg").isJsonNull()) {
        GetDbaasSettingsPg200ResponseSettingsPg.validateJsonElement(jsonObj.get("pg"));
      }
      // validate the optional field `pglookout`
      if (jsonObj.get("pglookout") != null && !jsonObj.get("pglookout").isJsonNull()) {
        GetDbaasSettingsPg200ResponseSettingsPglookout.validateJsonElement(jsonObj.get("pglookout"));
      }
      // validate the optional field `pgbouncer`
      if (jsonObj.get("pgbouncer") != null && !jsonObj.get("pgbouncer").isJsonNull()) {
        GetDbaasSettingsPg200ResponseSettingsPgbouncer.validateJsonElement(jsonObj.get("pgbouncer"));
      }
      // validate the optional field `timescaledb`
      if (jsonObj.get("timescaledb") != null && !jsonObj.get("timescaledb").isJsonNull()) {
        GetDbaasSettingsPg200ResponseSettingsTimescaledb.validateJsonElement(jsonObj.get("timescaledb"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetDbaasSettingsPg200ResponseSettings.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetDbaasSettingsPg200ResponseSettings' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetDbaasSettingsPg200ResponseSettings> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetDbaasSettingsPg200ResponseSettings.class));

       return (TypeAdapter<T>) new TypeAdapter<GetDbaasSettingsPg200ResponseSettings>() {
           @Override
           public void write(JsonWriter out, GetDbaasSettingsPg200ResponseSettings value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetDbaasSettingsPg200ResponseSettings read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of GetDbaasSettingsPg200ResponseSettings given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of GetDbaasSettingsPg200ResponseSettings
  * @throws IOException if the JSON string is invalid with respect to GetDbaasSettingsPg200ResponseSettings
  */
  public static GetDbaasSettingsPg200ResponseSettings fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetDbaasSettingsPg200ResponseSettings.class);
  }

 /**
  * Convert an instance of GetDbaasSettingsPg200ResponseSettings to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

