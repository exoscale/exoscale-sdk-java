/*
 * ExoscalePublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.exoscale.apichgva2.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for DbaasNodeStateProgressUpdate type.
 */
public class DbaasNodeStateProgressUpdate {
    private boolean completed;
    private Long current;
    private Long max;
    private Long min;
    private PhaseEnum phase;
    private String unit;

    /**
     * Default constructor.
     */
    public DbaasNodeStateProgressUpdate() {
    }

    /**
     * Initialization constructor.
     * @param  completed  boolean value for completed.
     * @param  phase  PhaseEnum value for phase.
     * @param  current  Long value for current.
     * @param  max  Long value for max.
     * @param  min  Long value for min.
     * @param  unit  String value for unit.
     */
    public DbaasNodeStateProgressUpdate(
            boolean completed,
            PhaseEnum phase,
            Long current,
            Long max,
            Long min,
            String unit) {
        this.completed = completed;
        this.current = current;
        this.max = max;
        this.min = min;
        this.phase = phase;
        this.unit = unit;
    }

    /**
     * Getter for Completed.
     * Indicates whether this phase has been completed or not
     * @return Returns the boolean
     */
    @JsonGetter("completed")
    public boolean getCompleted() {
        return completed;
    }

    /**
     * Setter for Completed.
     * Indicates whether this phase has been completed or not
     * @param completed Value for boolean
     */
    @JsonSetter("completed")
    public void setCompleted(boolean completed) {
        this.completed = completed;
    }

    /**
     * Getter for Current.
     * Current progress for this phase. May be missing or null.
     * @return Returns the Long
     */
    @JsonGetter("current")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Long getCurrent() {
        return current;
    }

    /**
     * Setter for Current.
     * Current progress for this phase. May be missing or null.
     * @param current Value for Long
     */
    @JsonSetter("current")
    public void setCurrent(Long current) {
        this.current = current;
    }

    /**
     * Getter for Max.
     * Maximum progress value for this phase. May be missing or null. May change.
     * @return Returns the Long
     */
    @JsonGetter("max")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Long getMax() {
        return max;
    }

    /**
     * Setter for Max.
     * Maximum progress value for this phase. May be missing or null. May change.
     * @param max Value for Long
     */
    @JsonSetter("max")
    public void setMax(Long max) {
        this.max = max;
    }

    /**
     * Getter for Min.
     * Minimum progress value for this phase. May be missing or null.
     * @return Returns the Long
     */
    @JsonGetter("min")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Long getMin() {
        return min;
    }

    /**
     * Setter for Min.
     * Minimum progress value for this phase. May be missing or null.
     * @param min Value for Long
     */
    @JsonSetter("min")
    public void setMin(Long min) {
        this.min = min;
    }

    /**
     * Getter for Phase.
     * Key identifying this phase
     * @return Returns the PhaseEnum
     */
    @JsonGetter("phase")
    public PhaseEnum getPhase() {
        return phase;
    }

    /**
     * Setter for Phase.
     * Key identifying this phase
     * @param phase Value for PhaseEnum
     */
    @JsonSetter("phase")
    public void setPhase(PhaseEnum phase) {
        this.phase = phase;
    }

    /**
     * Getter for Unit.
     * Unit for current/min/max values. New units may be added. If null should be treated as generic
     * unit
     * @return Returns the String
     */
    @JsonGetter("unit")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getUnit() {
        return unit;
    }

    /**
     * Setter for Unit.
     * Unit for current/min/max values. New units may be added. If null should be treated as generic
     * unit
     * @param unit Value for String
     */
    @JsonSetter("unit")
    public void setUnit(String unit) {
        this.unit = unit;
    }

    /**
     * Converts this DbaasNodeStateProgressUpdate into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "DbaasNodeStateProgressUpdate [" + "completed=" + completed + ", phase=" + phase
                + ", current=" + current + ", max=" + max + ", min=" + min + ", unit=" + unit + "]";
    }

    /**
     * Builds a new {@link DbaasNodeStateProgressUpdate.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link DbaasNodeStateProgressUpdate.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(completed, phase)
                .current(getCurrent())
                .max(getMax())
                .min(getMin())
                .unit(getUnit());
        return builder;
    }

    /**
     * Class to build instances of {@link DbaasNodeStateProgressUpdate}.
     */
    public static class Builder {
        private boolean completed;
        private PhaseEnum phase;
        private Long current;
        private Long max;
        private Long min;
        private String unit;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  completed  boolean value for completed.
         * @param  phase  PhaseEnum value for phase.
         */
        public Builder(boolean completed, PhaseEnum phase) {
            this.completed = completed;
            this.phase = phase;
        }

        /**
         * Setter for completed.
         * @param  completed  boolean value for completed.
         * @return Builder
         */
        public Builder completed(boolean completed) {
            this.completed = completed;
            return this;
        }

        /**
         * Setter for phase.
         * @param  phase  PhaseEnum value for phase.
         * @return Builder
         */
        public Builder phase(PhaseEnum phase) {
            this.phase = phase;
            return this;
        }

        /**
         * Setter for current.
         * @param  current  Long value for current.
         * @return Builder
         */
        public Builder current(Long current) {
            this.current = current;
            return this;
        }

        /**
         * Setter for max.
         * @param  max  Long value for max.
         * @return Builder
         */
        public Builder max(Long max) {
            this.max = max;
            return this;
        }

        /**
         * Setter for min.
         * @param  min  Long value for min.
         * @return Builder
         */
        public Builder min(Long min) {
            this.min = min;
            return this;
        }

        /**
         * Setter for unit.
         * @param  unit  String value for unit.
         * @return Builder
         */
        public Builder unit(String unit) {
            this.unit = unit;
            return this;
        }

        /**
         * Builds a new {@link DbaasNodeStateProgressUpdate} object using the set fields.
         * @return {@link DbaasNodeStateProgressUpdate}
         */
        public DbaasNodeStateProgressUpdate build() {
            return new DbaasNodeStateProgressUpdate(completed, phase, current, max, min, unit);
        }
    }
}
