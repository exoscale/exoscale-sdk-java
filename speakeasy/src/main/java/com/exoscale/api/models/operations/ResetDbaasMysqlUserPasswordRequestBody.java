/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.exoscale.api.models.operations;

import com.exoscale.api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Optional;


public class ResetDbaasMysqlUserPasswordRequestBody {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("password")
    private Optional<? extends String> password;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("authentication")
    private Optional<? extends com.exoscale.api.models.components.EnumMysqlAuthenticationPlugin> authentication;

    public ResetDbaasMysqlUserPasswordRequestBody(
            @JsonProperty("password") Optional<? extends String> password,
            @JsonProperty("authentication") Optional<? extends com.exoscale.api.models.components.EnumMysqlAuthenticationPlugin> authentication) {
        Utils.checkNotNull(password, "password");
        Utils.checkNotNull(authentication, "authentication");
        this.password = password;
        this.authentication = authentication;
    }

    public Optional<? extends String> password() {
        return password;
    }

    public Optional<? extends com.exoscale.api.models.components.EnumMysqlAuthenticationPlugin> authentication() {
        return authentication;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public ResetDbaasMysqlUserPasswordRequestBody withPassword(String password) {
        Utils.checkNotNull(password, "password");
        this.password = Optional.ofNullable(password);
        return this;
    }

    public ResetDbaasMysqlUserPasswordRequestBody withPassword(Optional<? extends String> password) {
        Utils.checkNotNull(password, "password");
        this.password = password;
        return this;
    }

    public ResetDbaasMysqlUserPasswordRequestBody withAuthentication(com.exoscale.api.models.components.EnumMysqlAuthenticationPlugin authentication) {
        Utils.checkNotNull(authentication, "authentication");
        this.authentication = Optional.ofNullable(authentication);
        return this;
    }

    public ResetDbaasMysqlUserPasswordRequestBody withAuthentication(Optional<? extends com.exoscale.api.models.components.EnumMysqlAuthenticationPlugin> authentication) {
        Utils.checkNotNull(authentication, "authentication");
        this.authentication = authentication;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ResetDbaasMysqlUserPasswordRequestBody other = (ResetDbaasMysqlUserPasswordRequestBody) o;
        return 
            java.util.Objects.deepEquals(this.password, other.password) &&
            java.util.Objects.deepEquals(this.authentication, other.authentication);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            password,
            authentication);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ResetDbaasMysqlUserPasswordRequestBody.class,
                "password", password,
                "authentication", authentication);
    }
    
    public final static class Builder {
 
        private Optional<? extends String> password = Optional.empty();
 
        private Optional<? extends com.exoscale.api.models.components.EnumMysqlAuthenticationPlugin> authentication = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder password(String password) {
            Utils.checkNotNull(password, "password");
            this.password = Optional.ofNullable(password);
            return this;
        }

        public Builder password(Optional<? extends String> password) {
            Utils.checkNotNull(password, "password");
            this.password = password;
            return this;
        }

        public Builder authentication(com.exoscale.api.models.components.EnumMysqlAuthenticationPlugin authentication) {
            Utils.checkNotNull(authentication, "authentication");
            this.authentication = Optional.ofNullable(authentication);
            return this;
        }

        public Builder authentication(Optional<? extends com.exoscale.api.models.components.EnumMysqlAuthenticationPlugin> authentication) {
            Utils.checkNotNull(authentication, "authentication");
            this.authentication = authentication;
            return this;
        }
        
        public ResetDbaasMysqlUserPasswordRequestBody build() {
            return new ResetDbaasMysqlUserPasswordRequestBody(
                password,
                authentication);
        }
    }
}

