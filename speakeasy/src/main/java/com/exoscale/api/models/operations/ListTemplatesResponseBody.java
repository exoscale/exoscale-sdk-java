/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.exoscale.api.models.operations;

import com.exoscale.api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Optional;

/**
 * ListTemplatesResponseBody - 200
 */

public class ListTemplatesResponseBody {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("templates")
    private Optional<? extends java.util.List<com.exoscale.api.models.components.Template>> templates;

    public ListTemplatesResponseBody(
            @JsonProperty("templates") Optional<? extends java.util.List<com.exoscale.api.models.components.Template>> templates) {
        Utils.checkNotNull(templates, "templates");
        this.templates = templates;
    }

    public Optional<? extends java.util.List<com.exoscale.api.models.components.Template>> templates() {
        return templates;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public ListTemplatesResponseBody withTemplates(java.util.List<com.exoscale.api.models.components.Template> templates) {
        Utils.checkNotNull(templates, "templates");
        this.templates = Optional.ofNullable(templates);
        return this;
    }

    public ListTemplatesResponseBody withTemplates(Optional<? extends java.util.List<com.exoscale.api.models.components.Template>> templates) {
        Utils.checkNotNull(templates, "templates");
        this.templates = templates;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ListTemplatesResponseBody other = (ListTemplatesResponseBody) o;
        return 
            java.util.Objects.deepEquals(this.templates, other.templates);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            templates);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ListTemplatesResponseBody.class,
                "templates", templates);
    }
    
    public final static class Builder {
 
        private Optional<? extends java.util.List<com.exoscale.api.models.components.Template>> templates = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder templates(java.util.List<com.exoscale.api.models.components.Template> templates) {
            Utils.checkNotNull(templates, "templates");
            this.templates = Optional.ofNullable(templates);
            return this;
        }

        public Builder templates(Optional<? extends java.util.List<com.exoscale.api.models.components.Template>> templates) {
            Utils.checkNotNull(templates, "templates");
            this.templates = templates;
            return this;
        }
        
        public ListTemplatesResponseBody build() {
            return new ListTemplatesResponseBody(
                templates);
        }
    }
}

