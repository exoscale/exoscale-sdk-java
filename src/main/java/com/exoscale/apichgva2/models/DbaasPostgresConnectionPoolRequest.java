/*
 * ExoscalePublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.exoscale.apichgva2.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for DbaasPostgresConnectionPoolRequest type.
 */
public class DbaasPostgresConnectionPoolRequest {
    private String name;
    private String databaseName;
    private EnumPgPoolModeEnum mode;
    private Long size;
    private String username;

    /**
     * Default constructor.
     */
    public DbaasPostgresConnectionPoolRequest() {
    }

    /**
     * Initialization constructor.
     * @param  name  String value for name.
     * @param  databaseName  String value for databaseName.
     * @param  mode  EnumPgPoolModeEnum value for mode.
     * @param  size  Long value for size.
     * @param  username  String value for username.
     */
    public DbaasPostgresConnectionPoolRequest(
            String name,
            String databaseName,
            EnumPgPoolModeEnum mode,
            Long size,
            String username) {
        this.name = name;
        this.databaseName = databaseName;
        this.mode = mode;
        this.size = size;
        this.username = username;
    }

    /**
     * Getter for Name.
     * @return Returns the String
     */
    @JsonGetter("name")
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for DatabaseName.
     * @return Returns the String
     */
    @JsonGetter("database-name")
    public String getDatabaseName() {
        return databaseName;
    }

    /**
     * Setter for DatabaseName.
     * @param databaseName Value for String
     */
    @JsonSetter("database-name")
    public void setDatabaseName(String databaseName) {
        this.databaseName = databaseName;
    }

    /**
     * Getter for Mode.
     * @return Returns the EnumPgPoolModeEnum
     */
    @JsonGetter("mode")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public EnumPgPoolModeEnum getMode() {
        return mode;
    }

    /**
     * Setter for Mode.
     * @param mode Value for EnumPgPoolModeEnum
     */
    @JsonSetter("mode")
    public void setMode(EnumPgPoolModeEnum mode) {
        this.mode = mode;
    }

    /**
     * Getter for Size.
     * @return Returns the Long
     */
    @JsonGetter("size")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Long getSize() {
        return size;
    }

    /**
     * Setter for Size.
     * @param size Value for Long
     */
    @JsonSetter("size")
    public void setSize(Long size) {
        this.size = size;
    }

    /**
     * Getter for Username.
     * @return Returns the String
     */
    @JsonGetter("username")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getUsername() {
        return username;
    }

    /**
     * Setter for Username.
     * @param username Value for String
     */
    @JsonSetter("username")
    public void setUsername(String username) {
        this.username = username;
    }

    /**
     * Converts this DbaasPostgresConnectionPoolRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "DbaasPostgresConnectionPoolRequest [" + "name=" + name + ", databaseName="
                + databaseName + ", mode=" + mode + ", size=" + size + ", username=" + username
                + "]";
    }

    /**
     * Builds a new {@link DbaasPostgresConnectionPoolRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link DbaasPostgresConnectionPoolRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(name, databaseName)
                .mode(getMode())
                .size(getSize())
                .username(getUsername());
        return builder;
    }

    /**
     * Class to build instances of {@link DbaasPostgresConnectionPoolRequest}.
     */
    public static class Builder {
        private String name;
        private String databaseName;
        private EnumPgPoolModeEnum mode;
        private Long size;
        private String username;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  name  String value for name.
         * @param  databaseName  String value for databaseName.
         */
        public Builder(String name, String databaseName) {
            this.name = name;
            this.databaseName = databaseName;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for databaseName.
         * @param  databaseName  String value for databaseName.
         * @return Builder
         */
        public Builder databaseName(String databaseName) {
            this.databaseName = databaseName;
            return this;
        }

        /**
         * Setter for mode.
         * @param  mode  EnumPgPoolModeEnum value for mode.
         * @return Builder
         */
        public Builder mode(EnumPgPoolModeEnum mode) {
            this.mode = mode;
            return this;
        }

        /**
         * Setter for size.
         * @param  size  Long value for size.
         * @return Builder
         */
        public Builder size(Long size) {
            this.size = size;
            return this;
        }

        /**
         * Setter for username.
         * @param  username  String value for username.
         * @return Builder
         */
        public Builder username(String username) {
            this.username = username;
            return this;
        }

        /**
         * Builds a new {@link DbaasPostgresConnectionPoolRequest} object using the set fields.
         * @return {@link DbaasPostgresConnectionPoolRequest}
         */
        public DbaasPostgresConnectionPoolRequest build() {
            return new DbaasPostgresConnectionPoolRequest(name, databaseName, mode, size, username);
        }
    }
}
