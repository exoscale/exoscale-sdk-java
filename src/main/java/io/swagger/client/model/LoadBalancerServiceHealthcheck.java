/*
 * Exoscale Public API
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * OpenAPI spec version: 2.0.0
 * Contact: api@exoscale.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * Load Balancer Service healthcheck
 */
@Schema(description = "Load Balancer Service healthcheck")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-03-08T17:23:40.261901+01:00[Europe/Vienna]")

public class LoadBalancerServiceHealthcheck {
  /**
   * Healthcheck mode
   */
  public enum ModeEnum {
    TCP("tcp"),
    HTTP("http"),
    HTTPS("https");

    private String value;

    ModeEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static ModeEnum fromValue(String input) {
      for (ModeEnum b : ModeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("mode")
  private ModeEnum mode = null;

  @JsonProperty("interval")
  private Long interval = null;

  @JsonProperty("uri")
  private String uri = null;

  @JsonProperty("port")
  private Long port = null;

  @JsonProperty("timeout")
  private Long timeout = null;

  @JsonProperty("retries")
  private Long retries = null;

  @JsonProperty("tls-sni")
  private String tlsSni = null;

  public LoadBalancerServiceHealthcheck mode(ModeEnum mode) {
    this.mode = mode;
    return this;
  }

   /**
   * Healthcheck mode
   * @return mode
  **/
  @Schema(description = "Healthcheck mode")
  public ModeEnum getMode() {
    return mode;
  }

  public void setMode(ModeEnum mode) {
    this.mode = mode;
  }

  public LoadBalancerServiceHealthcheck interval(Long interval) {
    this.interval = interval;
    return this;
  }

   /**
   * Healthcheck interval (default: 10). Must be greater than or equal to Timeout
   * minimum: 5
   * maximum: 300
   * @return interval
  **/
  @Schema(description = "Healthcheck interval (default: 10). Must be greater than or equal to Timeout")
  public Long getInterval() {
    return interval;
  }

  public void setInterval(Long interval) {
    this.interval = interval;
  }

  public LoadBalancerServiceHealthcheck uri(String uri) {
    this.uri = uri;
    return this;
  }

   /**
   * An endpoint to use for the HTTP healthcheck, e.g. &#x27;/status&#x27;
   * @return uri
  **/
  @Schema(description = "An endpoint to use for the HTTP healthcheck, e.g. '/status'")
  public String getUri() {
    return uri;
  }

  public void setUri(String uri) {
    this.uri = uri;
  }

  public LoadBalancerServiceHealthcheck port(Long port) {
    this.port = port;
    return this;
  }

   /**
   * Healthcheck port
   * minimum: 1
   * maximum: 65535
   * @return port
  **/
  @Schema(description = "Healthcheck port")
  public Long getPort() {
    return port;
  }

  public void setPort(Long port) {
    this.port = port;
  }

  public LoadBalancerServiceHealthcheck timeout(Long timeout) {
    this.timeout = timeout;
    return this;
  }

   /**
   * Healthcheck timeout value (default: 2). Must be lower than or equal to Interval
   * minimum: 2
   * maximum: 60
   * @return timeout
  **/
  @Schema(description = "Healthcheck timeout value (default: 2). Must be lower than or equal to Interval")
  public Long getTimeout() {
    return timeout;
  }

  public void setTimeout(Long timeout) {
    this.timeout = timeout;
  }

  public LoadBalancerServiceHealthcheck retries(Long retries) {
    this.retries = retries;
    return this;
  }

   /**
   * Number of retries before considering a Service failed
   * minimum: 1
   * maximum: 20
   * @return retries
  **/
  @Schema(description = "Number of retries before considering a Service failed")
  public Long getRetries() {
    return retries;
  }

  public void setRetries(Long retries) {
    this.retries = retries;
  }

  public LoadBalancerServiceHealthcheck tlsSni(String tlsSni) {
    this.tlsSni = tlsSni;
    return this;
  }

   /**
   * SNI domain for HTTPS healthchecks
   * @return tlsSni
  **/
  @Schema(description = "SNI domain for HTTPS healthchecks")
  public String getTlsSni() {
    return tlsSni;
  }

  public void setTlsSni(String tlsSni) {
    this.tlsSni = tlsSni;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LoadBalancerServiceHealthcheck loadBalancerServiceHealthcheck = (LoadBalancerServiceHealthcheck) o;
    return Objects.equals(this.mode, loadBalancerServiceHealthcheck.mode) &&
        Objects.equals(this.interval, loadBalancerServiceHealthcheck.interval) &&
        Objects.equals(this.uri, loadBalancerServiceHealthcheck.uri) &&
        Objects.equals(this.port, loadBalancerServiceHealthcheck.port) &&
        Objects.equals(this.timeout, loadBalancerServiceHealthcheck.timeout) &&
        Objects.equals(this.retries, loadBalancerServiceHealthcheck.retries) &&
        Objects.equals(this.tlsSni, loadBalancerServiceHealthcheck.tlsSni);
  }

  @Override
  public int hashCode() {
    return Objects.hash(mode, interval, uri, port, timeout, retries, tlsSni);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LoadBalancerServiceHealthcheck {\n");
    
    sb.append("    mode: ").append(toIndentedString(mode)).append("\n");
    sb.append("    interval: ").append(toIndentedString(interval)).append("\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    timeout: ").append(toIndentedString(timeout)).append("\n");
    sb.append("    retries: ").append(toIndentedString(retries)).append("\n");
    sb.append("    tlsSni: ").append(toIndentedString(tlsSni)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
