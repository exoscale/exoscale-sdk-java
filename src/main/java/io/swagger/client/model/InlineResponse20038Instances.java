/*
 * Exoscale Public API
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * OpenAPI spec version: 2.0.0
 * Contact: api@exoscale.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.client.model.InstanceState;
import io.swagger.client.model.InstanceType;
import io.swagger.client.model.Labels;
import io.swagger.client.model.Manager;
import io.swagger.client.model.PrivateNetwork;
import io.swagger.client.model.PublicIpAssignment;
import io.swagger.client.model.SecurityGroup;
import io.swagger.client.model.SshKey;
import io.swagger.client.model.Template;
import io.swagger.v3.oas.annotations.media.Schema;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
/**
 * Instance
 */
@Schema(description = "Instance")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-03-08T17:23:40.261901+01:00[Europe/Vienna]")

public class InlineResponse20038Instances {
  @JsonProperty("public-ip-assignment")
  private PublicIpAssignment publicIpAssignment = null;

  @JsonProperty("labels")
  private Labels labels = null;

  @JsonProperty("security-groups")
  private List<SecurityGroup> securityGroups = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("instance-type")
  private InstanceType instanceType = null;

  @JsonProperty("private-networks")
  private List<PrivateNetwork> privateNetworks = null;

  @JsonProperty("template")
  private Template template = null;

  @JsonProperty("state")
  private InstanceState state = null;

  @JsonProperty("ssh-key")
  private SshKey sshKey = null;

  @JsonProperty("manager")
  private Manager manager = null;

  @JsonProperty("ipv6-address")
  private String ipv6Address = null;

  @JsonProperty("id")
  private UUID id = null;

  @JsonProperty("ssh-keys")
  private List<SshKey> sshKeys = null;

  @JsonProperty("created-at")
  private OffsetDateTime createdAt = null;

  @JsonProperty("public-ip")
  private String publicIp = null;

  public InlineResponse20038Instances publicIpAssignment(PublicIpAssignment publicIpAssignment) {
    this.publicIpAssignment = publicIpAssignment;
    return this;
  }

   /**
   * Get publicIpAssignment
   * @return publicIpAssignment
  **/
  @Schema(description = "")
  public PublicIpAssignment getPublicIpAssignment() {
    return publicIpAssignment;
  }

  public void setPublicIpAssignment(PublicIpAssignment publicIpAssignment) {
    this.publicIpAssignment = publicIpAssignment;
  }

  public InlineResponse20038Instances labels(Labels labels) {
    this.labels = labels;
    return this;
  }

   /**
   * Get labels
   * @return labels
  **/
  @Schema(description = "")
  public Labels getLabels() {
    return labels;
  }

  public void setLabels(Labels labels) {
    this.labels = labels;
  }

  public InlineResponse20038Instances securityGroups(List<SecurityGroup> securityGroups) {
    this.securityGroups = securityGroups;
    return this;
  }

  public InlineResponse20038Instances addSecurityGroupsItem(SecurityGroup securityGroupsItem) {
    if (this.securityGroups == null) {
      this.securityGroups = new ArrayList<>();
    }
    this.securityGroups.add(securityGroupsItem);
    return this;
  }

   /**
   * Instance Security Groups
   * @return securityGroups
  **/
  @Schema(description = "Instance Security Groups")
  public List<SecurityGroup> getSecurityGroups() {
    return securityGroups;
  }

  public void setSecurityGroups(List<SecurityGroup> securityGroups) {
    this.securityGroups = securityGroups;
  }

  public InlineResponse20038Instances name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Instance name
   * @return name
  **/
  @Schema(description = "Instance name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public InlineResponse20038Instances instanceType(InstanceType instanceType) {
    this.instanceType = instanceType;
    return this;
  }

   /**
   * Get instanceType
   * @return instanceType
  **/
  @Schema(description = "")
  public InstanceType getInstanceType() {
    return instanceType;
  }

  public void setInstanceType(InstanceType instanceType) {
    this.instanceType = instanceType;
  }

  public InlineResponse20038Instances privateNetworks(List<PrivateNetwork> privateNetworks) {
    this.privateNetworks = privateNetworks;
    return this;
  }

  public InlineResponse20038Instances addPrivateNetworksItem(PrivateNetwork privateNetworksItem) {
    if (this.privateNetworks == null) {
      this.privateNetworks = new ArrayList<>();
    }
    this.privateNetworks.add(privateNetworksItem);
    return this;
  }

   /**
   * Instance Private Networks
   * @return privateNetworks
  **/
  @Schema(description = "Instance Private Networks")
  public List<PrivateNetwork> getPrivateNetworks() {
    return privateNetworks;
  }

  public void setPrivateNetworks(List<PrivateNetwork> privateNetworks) {
    this.privateNetworks = privateNetworks;
  }

  public InlineResponse20038Instances template(Template template) {
    this.template = template;
    return this;
  }

   /**
   * Get template
   * @return template
  **/
  @Schema(description = "")
  public Template getTemplate() {
    return template;
  }

  public void setTemplate(Template template) {
    this.template = template;
  }

  public InlineResponse20038Instances state(InstanceState state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @Schema(description = "")
  public InstanceState getState() {
    return state;
  }

  public void setState(InstanceState state) {
    this.state = state;
  }

  public InlineResponse20038Instances sshKey(SshKey sshKey) {
    this.sshKey = sshKey;
    return this;
  }

   /**
   * Get sshKey
   * @return sshKey
  **/
  @Schema(description = "")
  public SshKey getSshKey() {
    return sshKey;
  }

  public void setSshKey(SshKey sshKey) {
    this.sshKey = sshKey;
  }

  public InlineResponse20038Instances manager(Manager manager) {
    this.manager = manager;
    return this;
  }

   /**
   * Get manager
   * @return manager
  **/
  @Schema(description = "")
  public Manager getManager() {
    return manager;
  }

  public void setManager(Manager manager) {
    this.manager = manager;
  }

  public InlineResponse20038Instances ipv6Address(String ipv6Address) {
    this.ipv6Address = ipv6Address;
    return this;
  }

   /**
   * Instance IPv6 address
   * @return ipv6Address
  **/
  @Schema(description = "Instance IPv6 address")
  public String getIpv6Address() {
    return ipv6Address;
  }

  public void setIpv6Address(String ipv6Address) {
    this.ipv6Address = ipv6Address;
  }

  public InlineResponse20038Instances id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Instance ID
   * @return id
  **/
  @Schema(description = "Instance ID")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public InlineResponse20038Instances sshKeys(List<SshKey> sshKeys) {
    this.sshKeys = sshKeys;
    return this;
  }

  public InlineResponse20038Instances addSshKeysItem(SshKey sshKeysItem) {
    if (this.sshKeys == null) {
      this.sshKeys = new ArrayList<>();
    }
    this.sshKeys.add(sshKeysItem);
    return this;
  }

   /**
   * Instance SSH Keys
   * @return sshKeys
  **/
  @Schema(description = "Instance SSH Keys")
  public List<SshKey> getSshKeys() {
    return sshKeys;
  }

  public void setSshKeys(List<SshKey> sshKeys) {
    this.sshKeys = sshKeys;
  }

  public InlineResponse20038Instances createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Instance creation date
   * @return createdAt
  **/
  @Schema(description = "Instance creation date")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public InlineResponse20038Instances publicIp(String publicIp) {
    this.publicIp = publicIp;
    return this;
  }

   /**
   * Instance public IPv4 address
   * @return publicIp
  **/
  @Schema(description = "Instance public IPv4 address")
  public String getPublicIp() {
    return publicIp;
  }

  public void setPublicIp(String publicIp) {
    this.publicIp = publicIp;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse20038Instances inlineResponse20038Instances = (InlineResponse20038Instances) o;
    return Objects.equals(this.publicIpAssignment, inlineResponse20038Instances.publicIpAssignment) &&
        Objects.equals(this.labels, inlineResponse20038Instances.labels) &&
        Objects.equals(this.securityGroups, inlineResponse20038Instances.securityGroups) &&
        Objects.equals(this.name, inlineResponse20038Instances.name) &&
        Objects.equals(this.instanceType, inlineResponse20038Instances.instanceType) &&
        Objects.equals(this.privateNetworks, inlineResponse20038Instances.privateNetworks) &&
        Objects.equals(this.template, inlineResponse20038Instances.template) &&
        Objects.equals(this.state, inlineResponse20038Instances.state) &&
        Objects.equals(this.sshKey, inlineResponse20038Instances.sshKey) &&
        Objects.equals(this.manager, inlineResponse20038Instances.manager) &&
        Objects.equals(this.ipv6Address, inlineResponse20038Instances.ipv6Address) &&
        Objects.equals(this.id, inlineResponse20038Instances.id) &&
        Objects.equals(this.sshKeys, inlineResponse20038Instances.sshKeys) &&
        Objects.equals(this.createdAt, inlineResponse20038Instances.createdAt) &&
        Objects.equals(this.publicIp, inlineResponse20038Instances.publicIp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(publicIpAssignment, labels, securityGroups, name, instanceType, privateNetworks, template, state, sshKey, manager, ipv6Address, id, sshKeys, createdAt, publicIp);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse20038Instances {\n");
    
    sb.append("    publicIpAssignment: ").append(toIndentedString(publicIpAssignment)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    securityGroups: ").append(toIndentedString(securityGroups)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    instanceType: ").append(toIndentedString(instanceType)).append("\n");
    sb.append("    privateNetworks: ").append(toIndentedString(privateNetworks)).append("\n");
    sb.append("    template: ").append(toIndentedString(template)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    sshKey: ").append(toIndentedString(sshKey)).append("\n");
    sb.append("    manager: ").append(toIndentedString(manager)).append("\n");
    sb.append("    ipv6Address: ").append(toIndentedString(ipv6Address)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    sshKeys: ").append(toIndentedString(sshKeys)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    publicIp: ").append(toIndentedString(publicIp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
