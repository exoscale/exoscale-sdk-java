/*
 * ExoscalePublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.exoscale.apichgva2.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for Detail type.
 */
public class Detail {
    private String dbname;
    private String error;
    private String method;
    private EnumMigrationStatusEnum status;

    /**
     * Default constructor.
     */
    public Detail() {
    }

    /**
     * Initialization constructor.
     * @param  dbname  String value for dbname.
     * @param  error  String value for error.
     * @param  method  String value for method.
     * @param  status  EnumMigrationStatusEnum value for status.
     */
    public Detail(
            String dbname,
            String error,
            String method,
            EnumMigrationStatusEnum status) {
        this.dbname = dbname;
        this.error = error;
        this.method = method;
        this.status = status;
    }

    /**
     * Getter for Dbname.
     * Migrated db name (PG) or number (Redis)
     * @return Returns the String
     */
    @JsonGetter("dbname")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDbname() {
        return dbname;
    }

    /**
     * Setter for Dbname.
     * Migrated db name (PG) or number (Redis)
     * @param dbname Value for String
     */
    @JsonSetter("dbname")
    public void setDbname(String dbname) {
        this.dbname = dbname;
    }

    /**
     * Getter for Error.
     * Error message in case that migration has failed
     * @return Returns the String
     */
    @JsonGetter("error")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getError() {
        return error;
    }

    /**
     * Setter for Error.
     * Error message in case that migration has failed
     * @param error Value for String
     */
    @JsonSetter("error")
    public void setError(String error) {
        this.error = error;
    }

    /**
     * Getter for Method.
     * Migration method
     * @return Returns the String
     */
    @JsonGetter("method")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getMethod() {
        return method;
    }

    /**
     * Setter for Method.
     * Migration method
     * @param method Value for String
     */
    @JsonSetter("method")
    public void setMethod(String method) {
        this.method = method;
    }

    /**
     * Getter for Status.
     * @return Returns the EnumMigrationStatusEnum
     */
    @JsonGetter("status")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public EnumMigrationStatusEnum getStatus() {
        return status;
    }

    /**
     * Setter for Status.
     * @param status Value for EnumMigrationStatusEnum
     */
    @JsonSetter("status")
    public void setStatus(EnumMigrationStatusEnum status) {
        this.status = status;
    }

    /**
     * Converts this Detail into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Detail [" + "dbname=" + dbname + ", error=" + error + ", method=" + method
                + ", status=" + status + "]";
    }

    /**
     * Builds a new {@link Detail.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Detail.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .dbname(getDbname())
                .error(getError())
                .method(getMethod())
                .status(getStatus());
        return builder;
    }

    /**
     * Class to build instances of {@link Detail}.
     */
    public static class Builder {
        private String dbname;
        private String error;
        private String method;
        private EnumMigrationStatusEnum status;



        /**
         * Setter for dbname.
         * @param  dbname  String value for dbname.
         * @return Builder
         */
        public Builder dbname(String dbname) {
            this.dbname = dbname;
            return this;
        }

        /**
         * Setter for error.
         * @param  error  String value for error.
         * @return Builder
         */
        public Builder error(String error) {
            this.error = error;
            return this;
        }

        /**
         * Setter for method.
         * @param  method  String value for method.
         * @return Builder
         */
        public Builder method(String method) {
            this.method = method;
            return this;
        }

        /**
         * Setter for status.
         * @param  status  EnumMigrationStatusEnum value for status.
         * @return Builder
         */
        public Builder status(EnumMigrationStatusEnum status) {
            this.status = status;
            return this;
        }

        /**
         * Builds a new {@link Detail} object using the set fields.
         * @return {@link Detail}
         */
        public Detail build() {
            return new Detail(dbname, error, method, status);
        }
    }
}
