/*
 * ExoscalePublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.exoscale.apichgva2.models;

import com.exoscale.apichgva2.DateTimeHelper;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.LocalDateTime;
import java.util.List;
import java.util.Map;
import java.util.UUID;

/**
 * This is a model class for Instance3 type.
 */
public class Instance3 {
    private PublicIpAssignmentEnum publicIpAssignment;
    private Map<String, String> labels;
    private List<SecurityGroup> securityGroups;
    private String name;
    private InstanceType instanceType;
    private List<PrivateNetwork> privateNetworks;
    private Template template;
    private InstanceStateEnum state;
    private SshKey sshKey;
    private Manager manager;
    private String ipv6Address;
    private UUID id;
    private List<SshKey> sshKeys;
    private LocalDateTime createdAt;
    private String publicIp;

    /**
     * Default constructor.
     */
    public Instance3() {
    }

    /**
     * Initialization constructor.
     * @param  publicIpAssignment  PublicIpAssignmentEnum value for publicIpAssignment.
     * @param  labels  Map of String, value for labels.
     * @param  securityGroups  List of SecurityGroup value for securityGroups.
     * @param  name  String value for name.
     * @param  instanceType  InstanceType value for instanceType.
     * @param  privateNetworks  List of PrivateNetwork value for privateNetworks.
     * @param  template  Template value for template.
     * @param  state  InstanceStateEnum value for state.
     * @param  sshKey  SshKey value for sshKey.
     * @param  manager  Manager value for manager.
     * @param  ipv6Address  String value for ipv6Address.
     * @param  id  UUID value for id.
     * @param  sshKeys  List of SshKey value for sshKeys.
     * @param  createdAt  LocalDateTime value for createdAt.
     * @param  publicIp  String value for publicIp.
     */
    public Instance3(
            PublicIpAssignmentEnum publicIpAssignment,
            Map<String, String> labels,
            List<SecurityGroup> securityGroups,
            String name,
            InstanceType instanceType,
            List<PrivateNetwork> privateNetworks,
            Template template,
            InstanceStateEnum state,
            SshKey sshKey,
            Manager manager,
            String ipv6Address,
            UUID id,
            List<SshKey> sshKeys,
            LocalDateTime createdAt,
            String publicIp) {
        this.publicIpAssignment = publicIpAssignment;
        this.labels = labels;
        this.securityGroups = securityGroups;
        this.name = name;
        this.instanceType = instanceType;
        this.privateNetworks = privateNetworks;
        this.template = template;
        this.state = state;
        this.sshKey = sshKey;
        this.manager = manager;
        this.ipv6Address = ipv6Address;
        this.id = id;
        this.sshKeys = sshKeys;
        this.createdAt = createdAt;
        this.publicIp = publicIp;
    }

    /**
     * Getter for PublicIpAssignment.
     * @return Returns the PublicIpAssignmentEnum
     */
    @JsonGetter("public-ip-assignment")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public PublicIpAssignmentEnum getPublicIpAssignment() {
        return publicIpAssignment;
    }

    /**
     * Setter for PublicIpAssignment.
     * @param publicIpAssignment Value for PublicIpAssignmentEnum
     */
    @JsonSetter("public-ip-assignment")
    public void setPublicIpAssignment(PublicIpAssignmentEnum publicIpAssignment) {
        this.publicIpAssignment = publicIpAssignment;
    }

    /**
     * Getter for Labels.
     * @return Returns the Map of String, String
     */
    @JsonGetter("labels")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Map<String, String> getLabels() {
        return labels;
    }

    /**
     * Setter for Labels.
     * @param labels Value for Map of String, String
     */
    @JsonSetter("labels")
    public void setLabels(Map<String, String> labels) {
        this.labels = labels;
    }

    /**
     * Getter for SecurityGroups.
     * Instance Security Groups
     * @return Returns the List of SecurityGroup
     */
    @JsonGetter("security-groups")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<SecurityGroup> getSecurityGroups() {
        return securityGroups;
    }

    /**
     * Setter for SecurityGroups.
     * Instance Security Groups
     * @param securityGroups Value for List of SecurityGroup
     */
    @JsonSetter("security-groups")
    public void setSecurityGroups(List<SecurityGroup> securityGroups) {
        this.securityGroups = securityGroups;
    }

    /**
     * Getter for Name.
     * Instance name
     * @return Returns the String
     */
    @JsonGetter("name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * Instance name
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for InstanceType.
     * Compute instance type
     * @return Returns the InstanceType
     */
    @JsonGetter("instance-type")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public InstanceType getInstanceType() {
        return instanceType;
    }

    /**
     * Setter for InstanceType.
     * Compute instance type
     * @param instanceType Value for InstanceType
     */
    @JsonSetter("instance-type")
    public void setInstanceType(InstanceType instanceType) {
        this.instanceType = instanceType;
    }

    /**
     * Getter for PrivateNetworks.
     * Instance Private Networks
     * @return Returns the List of PrivateNetwork
     */
    @JsonGetter("private-networks")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<PrivateNetwork> getPrivateNetworks() {
        return privateNetworks;
    }

    /**
     * Setter for PrivateNetworks.
     * Instance Private Networks
     * @param privateNetworks Value for List of PrivateNetwork
     */
    @JsonSetter("private-networks")
    public void setPrivateNetworks(List<PrivateNetwork> privateNetworks) {
        this.privateNetworks = privateNetworks;
    }

    /**
     * Getter for Template.
     * Instance template
     * @return Returns the Template
     */
    @JsonGetter("template")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Template getTemplate() {
        return template;
    }

    /**
     * Setter for Template.
     * Instance template
     * @param template Value for Template
     */
    @JsonSetter("template")
    public void setTemplate(Template template) {
        this.template = template;
    }

    /**
     * Getter for State.
     * @return Returns the InstanceStateEnum
     */
    @JsonGetter("state")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public InstanceStateEnum getState() {
        return state;
    }

    /**
     * Setter for State.
     * @param state Value for InstanceStateEnum
     */
    @JsonSetter("state")
    public void setState(InstanceStateEnum state) {
        this.state = state;
    }

    /**
     * Getter for SshKey.
     * SSH key
     * @return Returns the SshKey
     */
    @JsonGetter("ssh-key")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public SshKey getSshKey() {
        return sshKey;
    }

    /**
     * Setter for SshKey.
     * SSH key
     * @param sshKey Value for SshKey
     */
    @JsonSetter("ssh-key")
    public void setSshKey(SshKey sshKey) {
        this.sshKey = sshKey;
    }

    /**
     * Getter for Manager.
     * Resource manager
     * @return Returns the Manager
     */
    @JsonGetter("manager")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Manager getManager() {
        return manager;
    }

    /**
     * Setter for Manager.
     * Resource manager
     * @param manager Value for Manager
     */
    @JsonSetter("manager")
    public void setManager(Manager manager) {
        this.manager = manager;
    }

    /**
     * Getter for Ipv6Address.
     * Instance IPv6 address
     * @return Returns the String
     */
    @JsonGetter("ipv6-address")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getIpv6Address() {
        return ipv6Address;
    }

    /**
     * Setter for Ipv6Address.
     * Instance IPv6 address
     * @param ipv6Address Value for String
     */
    @JsonSetter("ipv6-address")
    public void setIpv6Address(String ipv6Address) {
        this.ipv6Address = ipv6Address;
    }

    /**
     * Getter for Id.
     * Instance ID
     * @return Returns the UUID
     */
    @JsonGetter("id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public UUID getId() {
        return id;
    }

    /**
     * Setter for Id.
     * Instance ID
     * @param id Value for UUID
     */
    @JsonSetter("id")
    public void setId(UUID id) {
        this.id = id;
    }

    /**
     * Getter for SshKeys.
     * Instance SSH Keys
     * @return Returns the List of SshKey
     */
    @JsonGetter("ssh-keys")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<SshKey> getSshKeys() {
        return sshKeys;
    }

    /**
     * Setter for SshKeys.
     * Instance SSH Keys
     * @param sshKeys Value for List of SshKey
     */
    @JsonSetter("ssh-keys")
    public void setSshKeys(List<SshKey> sshKeys) {
        this.sshKeys = sshKeys;
    }

    /**
     * Getter for CreatedAt.
     * Instance creation date
     * @return Returns the LocalDateTime
     */
    @JsonGetter("created-at")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getCreatedAt() {
        return createdAt;
    }

    /**
     * Setter for CreatedAt.
     * Instance creation date
     * @param createdAt Value for LocalDateTime
     */
    @JsonSetter("created-at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Getter for PublicIp.
     * Instance public IPv4 address
     * @return Returns the String
     */
    @JsonGetter("public-ip")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPublicIp() {
        return publicIp;
    }

    /**
     * Setter for PublicIp.
     * Instance public IPv4 address
     * @param publicIp Value for String
     */
    @JsonSetter("public-ip")
    public void setPublicIp(String publicIp) {
        this.publicIp = publicIp;
    }

    /**
     * Converts this Instance3 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Instance3 [" + "publicIpAssignment=" + publicIpAssignment + ", labels=" + labels
                + ", securityGroups=" + securityGroups + ", name=" + name + ", instanceType="
                + instanceType + ", privateNetworks=" + privateNetworks + ", template=" + template
                + ", state=" + state + ", sshKey=" + sshKey + ", manager=" + manager
                + ", ipv6Address=" + ipv6Address + ", id=" + id + ", sshKeys=" + sshKeys
                + ", createdAt=" + createdAt + ", publicIp=" + publicIp + "]";
    }

    /**
     * Builds a new {@link Instance3.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Instance3.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .publicIpAssignment(getPublicIpAssignment())
                .labels(getLabels())
                .securityGroups(getSecurityGroups())
                .name(getName())
                .instanceType(getInstanceType())
                .privateNetworks(getPrivateNetworks())
                .template(getTemplate())
                .state(getState())
                .sshKey(getSshKey())
                .manager(getManager())
                .ipv6Address(getIpv6Address())
                .id(getId())
                .sshKeys(getSshKeys())
                .createdAt(getCreatedAt())
                .publicIp(getPublicIp());
        return builder;
    }

    /**
     * Class to build instances of {@link Instance3}.
     */
    public static class Builder {
        private PublicIpAssignmentEnum publicIpAssignment;
        private Map<String, String> labels;
        private List<SecurityGroup> securityGroups;
        private String name;
        private InstanceType instanceType;
        private List<PrivateNetwork> privateNetworks;
        private Template template;
        private InstanceStateEnum state;
        private SshKey sshKey;
        private Manager manager;
        private String ipv6Address;
        private UUID id;
        private List<SshKey> sshKeys;
        private LocalDateTime createdAt;
        private String publicIp;



        /**
         * Setter for publicIpAssignment.
         * @param  publicIpAssignment  PublicIpAssignmentEnum value for publicIpAssignment.
         * @return Builder
         */
        public Builder publicIpAssignment(PublicIpAssignmentEnum publicIpAssignment) {
            this.publicIpAssignment = publicIpAssignment;
            return this;
        }

        /**
         * Setter for labels.
         * @param  labels  Map of String, value for labels.
         * @return Builder
         */
        public Builder labels(Map<String, String> labels) {
            this.labels = labels;
            return this;
        }

        /**
         * Setter for securityGroups.
         * @param  securityGroups  List of SecurityGroup value for securityGroups.
         * @return Builder
         */
        public Builder securityGroups(List<SecurityGroup> securityGroups) {
            this.securityGroups = securityGroups;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for instanceType.
         * @param  instanceType  InstanceType value for instanceType.
         * @return Builder
         */
        public Builder instanceType(InstanceType instanceType) {
            this.instanceType = instanceType;
            return this;
        }

        /**
         * Setter for privateNetworks.
         * @param  privateNetworks  List of PrivateNetwork value for privateNetworks.
         * @return Builder
         */
        public Builder privateNetworks(List<PrivateNetwork> privateNetworks) {
            this.privateNetworks = privateNetworks;
            return this;
        }

        /**
         * Setter for template.
         * @param  template  Template value for template.
         * @return Builder
         */
        public Builder template(Template template) {
            this.template = template;
            return this;
        }

        /**
         * Setter for state.
         * @param  state  InstanceStateEnum value for state.
         * @return Builder
         */
        public Builder state(InstanceStateEnum state) {
            this.state = state;
            return this;
        }

        /**
         * Setter for sshKey.
         * @param  sshKey  SshKey value for sshKey.
         * @return Builder
         */
        public Builder sshKey(SshKey sshKey) {
            this.sshKey = sshKey;
            return this;
        }

        /**
         * Setter for manager.
         * @param  manager  Manager value for manager.
         * @return Builder
         */
        public Builder manager(Manager manager) {
            this.manager = manager;
            return this;
        }

        /**
         * Setter for ipv6Address.
         * @param  ipv6Address  String value for ipv6Address.
         * @return Builder
         */
        public Builder ipv6Address(String ipv6Address) {
            this.ipv6Address = ipv6Address;
            return this;
        }

        /**
         * Setter for id.
         * @param  id  UUID value for id.
         * @return Builder
         */
        public Builder id(UUID id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for sshKeys.
         * @param  sshKeys  List of SshKey value for sshKeys.
         * @return Builder
         */
        public Builder sshKeys(List<SshKey> sshKeys) {
            this.sshKeys = sshKeys;
            return this;
        }

        /**
         * Setter for createdAt.
         * @param  createdAt  LocalDateTime value for createdAt.
         * @return Builder
         */
        public Builder createdAt(LocalDateTime createdAt) {
            this.createdAt = createdAt;
            return this;
        }

        /**
         * Setter for publicIp.
         * @param  publicIp  String value for publicIp.
         * @return Builder
         */
        public Builder publicIp(String publicIp) {
            this.publicIp = publicIp;
            return this;
        }

        /**
         * Builds a new {@link Instance3} object using the set fields.
         * @return {@link Instance3}
         */
        public Instance3 build() {
            return new Instance3(publicIpAssignment, labels, securityGroups, name, instanceType,
                    privateNetworks, template, state, sshKey, manager, ipv6Address, id, sshKeys,
                    createdAt, publicIp);
        }
    }
}
