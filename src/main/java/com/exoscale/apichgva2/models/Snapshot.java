/*
 * ExoscalePublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.exoscale.apichgva2.models;

import com.exoscale.apichgva2.DateTimeHelper;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.LocalDateTime;
import java.util.UUID;

/**
 * This is a model class for Snapshot type.
 */
public class Snapshot {
    private UUID id;
    private String name;
    private LocalDateTime createdAt;
    private State3Enum state;
    private Long size;
    private Export export;
    private Instance instance;

    /**
     * Default constructor.
     */
    public Snapshot() {
    }

    /**
     * Initialization constructor.
     * @param  id  UUID value for id.
     * @param  name  String value for name.
     * @param  createdAt  LocalDateTime value for createdAt.
     * @param  state  State3Enum value for state.
     * @param  size  Long value for size.
     * @param  export  Export value for export.
     * @param  instance  Instance value for instance.
     */
    public Snapshot(
            UUID id,
            String name,
            LocalDateTime createdAt,
            State3Enum state,
            Long size,
            Export export,
            Instance instance) {
        this.id = id;
        this.name = name;
        this.createdAt = createdAt;
        this.state = state;
        this.size = size;
        this.export = export;
        this.instance = instance;
    }

    /**
     * Getter for Id.
     * Snapshot ID
     * @return Returns the UUID
     */
    @JsonGetter("id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public UUID getId() {
        return id;
    }

    /**
     * Setter for Id.
     * Snapshot ID
     * @param id Value for UUID
     */
    @JsonSetter("id")
    public void setId(UUID id) {
        this.id = id;
    }

    /**
     * Getter for Name.
     * Snapshot name
     * @return Returns the String
     */
    @JsonGetter("name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * Snapshot name
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for CreatedAt.
     * Snapshot creation date
     * @return Returns the LocalDateTime
     */
    @JsonGetter("created-at")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getCreatedAt() {
        return createdAt;
    }

    /**
     * Setter for CreatedAt.
     * Snapshot creation date
     * @param createdAt Value for LocalDateTime
     */
    @JsonSetter("created-at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Getter for State.
     * Snapshot state
     * @return Returns the State3Enum
     */
    @JsonGetter("state")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public State3Enum getState() {
        return state;
    }

    /**
     * Setter for State.
     * Snapshot state
     * @param state Value for State3Enum
     */
    @JsonSetter("state")
    public void setState(State3Enum state) {
        this.state = state;
    }

    /**
     * Getter for Size.
     * Snapshot size in GB
     * @return Returns the Long
     */
    @JsonGetter("size")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Long getSize() {
        return size;
    }

    /**
     * Setter for Size.
     * Snapshot size in GB
     * @param size Value for Long
     */
    @JsonSetter("size")
    public void setSize(Long size) {
        this.size = size;
    }

    /**
     * Getter for Export.
     * Exported snapshot information
     * @return Returns the Export
     */
    @JsonGetter("export")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Export getExport() {
        return export;
    }

    /**
     * Setter for Export.
     * Exported snapshot information
     * @param export Value for Export
     */
    @JsonSetter("export")
    public void setExport(Export export) {
        this.export = export;
    }

    /**
     * Getter for Instance.
     * Instance
     * @return Returns the Instance
     */
    @JsonGetter("instance")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Instance getInstance() {
        return instance;
    }

    /**
     * Setter for Instance.
     * Instance
     * @param instance Value for Instance
     */
    @JsonSetter("instance")
    public void setInstance(Instance instance) {
        this.instance = instance;
    }

    /**
     * Converts this Snapshot into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Snapshot [" + "id=" + id + ", name=" + name + ", createdAt=" + createdAt
                + ", state=" + state + ", size=" + size + ", export=" + export + ", instance="
                + instance + "]";
    }

    /**
     * Builds a new {@link Snapshot.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Snapshot.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .id(getId())
                .name(getName())
                .createdAt(getCreatedAt())
                .state(getState())
                .size(getSize())
                .export(getExport())
                .instance(getInstance());
        return builder;
    }

    /**
     * Class to build instances of {@link Snapshot}.
     */
    public static class Builder {
        private UUID id;
        private String name;
        private LocalDateTime createdAt;
        private State3Enum state;
        private Long size;
        private Export export;
        private Instance instance;



        /**
         * Setter for id.
         * @param  id  UUID value for id.
         * @return Builder
         */
        public Builder id(UUID id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for createdAt.
         * @param  createdAt  LocalDateTime value for createdAt.
         * @return Builder
         */
        public Builder createdAt(LocalDateTime createdAt) {
            this.createdAt = createdAt;
            return this;
        }

        /**
         * Setter for state.
         * @param  state  State3Enum value for state.
         * @return Builder
         */
        public Builder state(State3Enum state) {
            this.state = state;
            return this;
        }

        /**
         * Setter for size.
         * @param  size  Long value for size.
         * @return Builder
         */
        public Builder size(Long size) {
            this.size = size;
            return this;
        }

        /**
         * Setter for export.
         * @param  export  Export value for export.
         * @return Builder
         */
        public Builder export(Export export) {
            this.export = export;
            return this;
        }

        /**
         * Setter for instance.
         * @param  instance  Instance value for instance.
         * @return Builder
         */
        public Builder instance(Instance instance) {
            this.instance = instance;
            return this;
        }

        /**
         * Builds a new {@link Snapshot} object using the set fields.
         * @return {@link Snapshot}
         */
        public Snapshot build() {
            return new Snapshot(id, name, createdAt, state, size, export, instance);
        }
    }
}
