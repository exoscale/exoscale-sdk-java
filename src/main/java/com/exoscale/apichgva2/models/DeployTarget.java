/*
 * ExoscalePublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.exoscale.apichgva2.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.UUID;

/**
 * This is a model class for DeployTarget type.
 */
public class DeployTarget {
    private UUID id;
    private String name;
    private Type1Enum type;
    private String description;

    /**
     * Default constructor.
     */
    public DeployTarget() {
    }

    /**
     * Initialization constructor.
     * @param  id  UUID value for id.
     * @param  name  String value for name.
     * @param  type  Type1Enum value for type.
     * @param  description  String value for description.
     */
    public DeployTarget(
            UUID id,
            String name,
            Type1Enum type,
            String description) {
        this.id = id;
        this.name = name;
        this.type = type;
        this.description = description;
    }

    /**
     * Getter for Id.
     * Deploy Target ID
     * @return Returns the UUID
     */
    @JsonGetter("id")
    public UUID getId() {
        return id;
    }

    /**
     * Setter for Id.
     * Deploy Target ID
     * @param id Value for UUID
     */
    @JsonSetter("id")
    public void setId(UUID id) {
        this.id = id;
    }

    /**
     * Getter for Name.
     * Deploy Target name
     * @return Returns the String
     */
    @JsonGetter("name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * Deploy Target name
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for Type.
     * Deploy Target type
     * @return Returns the Type1Enum
     */
    @JsonGetter("type")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Type1Enum getType() {
        return type;
    }

    /**
     * Setter for Type.
     * Deploy Target type
     * @param type Value for Type1Enum
     */
    @JsonSetter("type")
    public void setType(Type1Enum type) {
        this.type = type;
    }

    /**
     * Getter for Description.
     * Deploy Target description
     * @return Returns the String
     */
    @JsonGetter("description")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDescription() {
        return description;
    }

    /**
     * Setter for Description.
     * Deploy Target description
     * @param description Value for String
     */
    @JsonSetter("description")
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Converts this DeployTarget into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "DeployTarget [" + "id=" + id + ", name=" + name + ", type=" + type
                + ", description=" + description + "]";
    }

    /**
     * Builds a new {@link DeployTarget.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link DeployTarget.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(id)
                .name(getName())
                .type(getType())
                .description(getDescription());
        return builder;
    }

    /**
     * Class to build instances of {@link DeployTarget}.
     */
    public static class Builder {
        private UUID id;
        private String name;
        private Type1Enum type;
        private String description;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  id  UUID value for id.
         */
        public Builder(UUID id) {
            this.id = id;
        }

        /**
         * Setter for id.
         * @param  id  UUID value for id.
         * @return Builder
         */
        public Builder id(UUID id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for type.
         * @param  type  Type1Enum value for type.
         * @return Builder
         */
        public Builder type(Type1Enum type) {
            this.type = type;
            return this;
        }

        /**
         * Setter for description.
         * @param  description  String value for description.
         * @return Builder
         */
        public Builder description(String description) {
            this.description = description;
            return this;
        }

        /**
         * Builds a new {@link DeployTarget} object using the set fields.
         * @return {@link DeployTarget}
         */
        public DeployTarget build() {
            return new DeployTarget(id, name, type, description);
        }
    }
}
