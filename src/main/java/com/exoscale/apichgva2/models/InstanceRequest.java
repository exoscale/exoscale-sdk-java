/*
 * ExoscalePublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.exoscale.apichgva2.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.Map;

/**
 * This is a model class for InstanceRequest type.
 */
public class InstanceRequest {
    private String name;
    private String userData;
    private PublicIpAssignmentEnum publicIpAssignment;
    private Map<String, String> labels;

    /**
     * Default constructor.
     */
    public InstanceRequest() {
    }

    /**
     * Initialization constructor.
     * @param  name  String value for name.
     * @param  userData  String value for userData.
     * @param  publicIpAssignment  PublicIpAssignmentEnum value for publicIpAssignment.
     * @param  labels  Map of String, value for labels.
     */
    public InstanceRequest(
            String name,
            String userData,
            PublicIpAssignmentEnum publicIpAssignment,
            Map<String, String> labels) {
        this.name = name;
        this.userData = userData;
        this.publicIpAssignment = publicIpAssignment;
        this.labels = labels;
    }

    /**
     * Getter for Name.
     * Instance name
     * @return Returns the String
     */
    @JsonGetter("name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * Instance name
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for UserData.
     * Instance Cloud-init user-data
     * @return Returns the String
     */
    @JsonGetter("user-data")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getUserData() {
        return userData;
    }

    /**
     * Setter for UserData.
     * Instance Cloud-init user-data
     * @param userData Value for String
     */
    @JsonSetter("user-data")
    public void setUserData(String userData) {
        this.userData = userData;
    }

    /**
     * Getter for PublicIpAssignment.
     * @return Returns the PublicIpAssignmentEnum
     */
    @JsonGetter("public-ip-assignment")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public PublicIpAssignmentEnum getPublicIpAssignment() {
        return publicIpAssignment;
    }

    /**
     * Setter for PublicIpAssignment.
     * @param publicIpAssignment Value for PublicIpAssignmentEnum
     */
    @JsonSetter("public-ip-assignment")
    public void setPublicIpAssignment(PublicIpAssignmentEnum publicIpAssignment) {
        this.publicIpAssignment = publicIpAssignment;
    }

    /**
     * Getter for Labels.
     * @return Returns the Map of String, String
     */
    @JsonGetter("labels")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Map<String, String> getLabels() {
        return labels;
    }

    /**
     * Setter for Labels.
     * @param labels Value for Map of String, String
     */
    @JsonSetter("labels")
    public void setLabels(Map<String, String> labels) {
        this.labels = labels;
    }

    /**
     * Converts this InstanceRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "InstanceRequest [" + "name=" + name + ", userData=" + userData
                + ", publicIpAssignment=" + publicIpAssignment + ", labels=" + labels + "]";
    }

    /**
     * Builds a new {@link InstanceRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link InstanceRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .name(getName())
                .userData(getUserData())
                .publicIpAssignment(getPublicIpAssignment())
                .labels(getLabels());
        return builder;
    }

    /**
     * Class to build instances of {@link InstanceRequest}.
     */
    public static class Builder {
        private String name;
        private String userData;
        private PublicIpAssignmentEnum publicIpAssignment;
        private Map<String, String> labels;



        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for userData.
         * @param  userData  String value for userData.
         * @return Builder
         */
        public Builder userData(String userData) {
            this.userData = userData;
            return this;
        }

        /**
         * Setter for publicIpAssignment.
         * @param  publicIpAssignment  PublicIpAssignmentEnum value for publicIpAssignment.
         * @return Builder
         */
        public Builder publicIpAssignment(PublicIpAssignmentEnum publicIpAssignment) {
            this.publicIpAssignment = publicIpAssignment;
            return this;
        }

        /**
         * Setter for labels.
         * @param  labels  Map of String, value for labels.
         * @return Builder
         */
        public Builder labels(Map<String, String> labels) {
            this.labels = labels;
            return this;
        }

        /**
         * Builds a new {@link InstanceRequest} object using the set fields.
         * @return {@link InstanceRequest}
         */
        public InstanceRequest build() {
            return new InstanceRequest(name, userData, publicIpAssignment, labels);
        }
    }
}
