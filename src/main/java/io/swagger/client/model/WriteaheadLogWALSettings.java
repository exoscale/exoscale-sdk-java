/*
 * Exoscale Public API
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * OpenAPI spec version: 2.0.0
 * Contact: api@exoscale.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * WriteaheadLogWALSettings
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-03-08T17:23:40.261901+01:00[Europe/Vienna]")

public class WriteaheadLogWALSettings {
  @JsonProperty("wal_writer_delay")
  private Integer walWriterDelay = null;

  @JsonProperty("wal_sender_timeout")
  private AnyOfWriteaheadLogWALSettingsWalSenderTimeout walSenderTimeout = null;

  @JsonProperty("max_wal_senders")
  private Integer maxWalSenders = null;

  @JsonProperty("max_slot_wal_keep_size")
  private Integer maxSlotWalKeepSize = null;

  public WriteaheadLogWALSettings walWriterDelay(Integer walWriterDelay) {
    this.walWriterDelay = walWriterDelay;
    return this;
  }

   /**
   * WAL flush interval in milliseconds. Note that setting this value to lower than the default 200ms may negatively impact performance
   * minimum: 10
   * maximum: 200
   * @return walWriterDelay
  **/
  @Schema(example = "50", description = "WAL flush interval in milliseconds. Note that setting this value to lower than the default 200ms may negatively impact performance")
  public Integer getWalWriterDelay() {
    return walWriterDelay;
  }

  public void setWalWriterDelay(Integer walWriterDelay) {
    this.walWriterDelay = walWriterDelay;
  }

  public WriteaheadLogWALSettings walSenderTimeout(AnyOfWriteaheadLogWALSettingsWalSenderTimeout walSenderTimeout) {
    this.walSenderTimeout = walSenderTimeout;
    return this;
  }

   /**
   * Terminate replication connections that are inactive for longer than this amount of time, in milliseconds. Setting this value to zero disables the timeout.
   * @return walSenderTimeout
  **/
  @Schema(example = "60000", description = "Terminate replication connections that are inactive for longer than this amount of time, in milliseconds. Setting this value to zero disables the timeout.")
  public AnyOfWriteaheadLogWALSettingsWalSenderTimeout getWalSenderTimeout() {
    return walSenderTimeout;
  }

  public void setWalSenderTimeout(AnyOfWriteaheadLogWALSettingsWalSenderTimeout walSenderTimeout) {
    this.walSenderTimeout = walSenderTimeout;
  }

  public WriteaheadLogWALSettings maxWalSenders(Integer maxWalSenders) {
    this.maxWalSenders = maxWalSenders;
    return this;
  }

   /**
   * PostgreSQL maximum WAL senders
   * minimum: 20
   * maximum: 64
   * @return maxWalSenders
  **/
  @Schema(description = "PostgreSQL maximum WAL senders")
  public Integer getMaxWalSenders() {
    return maxWalSenders;
  }

  public void setMaxWalSenders(Integer maxWalSenders) {
    this.maxWalSenders = maxWalSenders;
  }

  public WriteaheadLogWALSettings maxSlotWalKeepSize(Integer maxSlotWalKeepSize) {
    this.maxSlotWalKeepSize = maxSlotWalKeepSize;
    return this;
  }

   /**
   * PostgreSQL maximum WAL size (MB) reserved for replication slots. Default is -1 (unlimited). wal_keep_size minimum WAL size setting takes precedence over this.
   * minimum: -1
   * maximum: 2147483647
   * @return maxSlotWalKeepSize
  **/
  @Schema(description = "PostgreSQL maximum WAL size (MB) reserved for replication slots. Default is -1 (unlimited). wal_keep_size minimum WAL size setting takes precedence over this.")
  public Integer getMaxSlotWalKeepSize() {
    return maxSlotWalKeepSize;
  }

  public void setMaxSlotWalKeepSize(Integer maxSlotWalKeepSize) {
    this.maxSlotWalKeepSize = maxSlotWalKeepSize;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WriteaheadLogWALSettings writeaheadLogWALSettings = (WriteaheadLogWALSettings) o;
    return Objects.equals(this.walWriterDelay, writeaheadLogWALSettings.walWriterDelay) &&
        Objects.equals(this.walSenderTimeout, writeaheadLogWALSettings.walSenderTimeout) &&
        Objects.equals(this.maxWalSenders, writeaheadLogWALSettings.maxWalSenders) &&
        Objects.equals(this.maxSlotWalKeepSize, writeaheadLogWALSettings.maxSlotWalKeepSize);
  }

  @Override
  public int hashCode() {
    return Objects.hash(walWriterDelay, walSenderTimeout, maxWalSenders, maxSlotWalKeepSize);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WriteaheadLogWALSettings {\n");
    
    sb.append("    walWriterDelay: ").append(toIndentedString(walWriterDelay)).append("\n");
    sb.append("    walSenderTimeout: ").append(toIndentedString(walSenderTimeout)).append("\n");
    sb.append("    maxWalSenders: ").append(toIndentedString(maxWalSenders)).append("\n");
    sb.append("    maxSlotWalKeepSize: ").append(toIndentedString(maxSlotWalKeepSize)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
