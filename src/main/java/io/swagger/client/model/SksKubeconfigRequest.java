/*
 * Exoscale Public API
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * OpenAPI spec version: 2.0.0
 * Contact: api@exoscale.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * Kubeconfig request for a SKS cluster
 */
@Schema(description = "Kubeconfig request for a SKS cluster")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-03-08T17:23:40.261901+01:00[Europe/Vienna]")

public class SksKubeconfigRequest {
  @JsonProperty("ttl")
  private Long ttl = null;

  @JsonProperty("user")
  private String user = null;

  @JsonProperty("groups")
  private List<String> groups = null;

  public SksKubeconfigRequest ttl(Long ttl) {
    this.ttl = ttl;
    return this;
  }

   /**
   * Validity in seconds of the Kubeconfig user certificate (default: 30 days)
   * minimum: 0
   * @return ttl
  **/
  @Schema(description = "Validity in seconds of the Kubeconfig user certificate (default: 30 days)")
  public Long getTtl() {
    return ttl;
  }

  public void setTtl(Long ttl) {
    this.ttl = ttl;
  }

  public SksKubeconfigRequest user(String user) {
    this.user = user;
    return this;
  }

   /**
   * User name in the generated Kubeconfig. The certificate present in the Kubeconfig will also have this name set for the CN field.
   * @return user
  **/
  @Schema(description = "User name in the generated Kubeconfig. The certificate present in the Kubeconfig will also have this name set for the CN field.")
  public String getUser() {
    return user;
  }

  public void setUser(String user) {
    this.user = user;
  }

  public SksKubeconfigRequest groups(List<String> groups) {
    this.groups = groups;
    return this;
  }

  public SksKubeconfigRequest addGroupsItem(String groupsItem) {
    if (this.groups == null) {
      this.groups = new ArrayList<>();
    }
    this.groups.add(groupsItem);
    return this;
  }

   /**
   * List of roles. The certificate present in the Kubeconfig will have these roles set in the Org field.
   * @return groups
  **/
  @Schema(description = "List of roles. The certificate present in the Kubeconfig will have these roles set in the Org field.")
  public List<String> getGroups() {
    return groups;
  }

  public void setGroups(List<String> groups) {
    this.groups = groups;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SksKubeconfigRequest sksKubeconfigRequest = (SksKubeconfigRequest) o;
    return Objects.equals(this.ttl, sksKubeconfigRequest.ttl) &&
        Objects.equals(this.user, sksKubeconfigRequest.user) &&
        Objects.equals(this.groups, sksKubeconfigRequest.groups);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ttl, user, groups);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SksKubeconfigRequest {\n");
    
    sb.append("    ttl: ").append(toIndentedString(ttl)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    groups: ").append(toIndentedString(groups)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
