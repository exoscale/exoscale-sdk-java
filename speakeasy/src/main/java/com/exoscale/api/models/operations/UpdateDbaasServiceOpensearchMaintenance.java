/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.exoscale.api.models.operations;

import com.exoscale.api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;

/**
 * UpdateDbaasServiceOpensearchMaintenance - Automatic maintenance settings
 */

public class UpdateDbaasServiceOpensearchMaintenance {

    /**
     * Day of week for installing updates
     */
    @JsonProperty("dow")
    private UpdateDbaasServiceOpensearchDow dow;

    /**
     * Time for installing updates, UTC
     */
    @JsonProperty("time")
    private String time;

    public UpdateDbaasServiceOpensearchMaintenance(
            @JsonProperty("dow") UpdateDbaasServiceOpensearchDow dow,
            @JsonProperty("time") String time) {
        Utils.checkNotNull(dow, "dow");
        Utils.checkNotNull(time, "time");
        this.dow = dow;
        this.time = time;
    }

    /**
     * Day of week for installing updates
     */
    public UpdateDbaasServiceOpensearchDow dow() {
        return dow;
    }

    /**
     * Time for installing updates, UTC
     */
    public String time() {
        return time;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * Day of week for installing updates
     */
    public UpdateDbaasServiceOpensearchMaintenance withDow(UpdateDbaasServiceOpensearchDow dow) {
        Utils.checkNotNull(dow, "dow");
        this.dow = dow;
        return this;
    }

    /**
     * Time for installing updates, UTC
     */
    public UpdateDbaasServiceOpensearchMaintenance withTime(String time) {
        Utils.checkNotNull(time, "time");
        this.time = time;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        UpdateDbaasServiceOpensearchMaintenance other = (UpdateDbaasServiceOpensearchMaintenance) o;
        return 
            java.util.Objects.deepEquals(this.dow, other.dow) &&
            java.util.Objects.deepEquals(this.time, other.time);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            dow,
            time);
    }
    
    @Override
    public String toString() {
        return Utils.toString(UpdateDbaasServiceOpensearchMaintenance.class,
                "dow", dow,
                "time", time);
    }
    
    public final static class Builder {
 
        private UpdateDbaasServiceOpensearchDow dow;
 
        private String time;  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * Day of week for installing updates
         */
        public Builder dow(UpdateDbaasServiceOpensearchDow dow) {
            Utils.checkNotNull(dow, "dow");
            this.dow = dow;
            return this;
        }

        /**
         * Time for installing updates, UTC
         */
        public Builder time(String time) {
            Utils.checkNotNull(time, "time");
            this.time = time;
            return this;
        }
        
        public UpdateDbaasServiceOpensearchMaintenance build() {
            return new UpdateDbaasServiceOpensearchMaintenance(
                dow,
                time);
        }
    }
}

