/*
 * ExoscalePublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.exoscale.apichgva2.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for DbaasOpensearchRequest type.
 */
public class DbaasOpensearchRequest {
    private Long maxIndexCount;
    private Boolean keepIndexRefreshInterval;
    private List<String> ipFilter;
    private Boolean terminationProtection;
    private String forkFromService;
    private List<IndexPattern> indexPatterns;
    private Maintenance maintenance;
    private IndexTemplate indexTemplate;
    private OpenSearchSettings opensearchSettings;
    private String version;
    private String recoveryBackupName;
    private String plan;
    private OpensearchDashboards opensearchDashboards;

    /**
     * Default constructor.
     */
    public DbaasOpensearchRequest() {
    }

    /**
     * Initialization constructor.
     * @param  plan  String value for plan.
     * @param  maxIndexCount  Long value for maxIndexCount.
     * @param  keepIndexRefreshInterval  Boolean value for keepIndexRefreshInterval.
     * @param  ipFilter  List of String value for ipFilter.
     * @param  terminationProtection  Boolean value for terminationProtection.
     * @param  forkFromService  String value for forkFromService.
     * @param  indexPatterns  List of IndexPattern value for indexPatterns.
     * @param  maintenance  Maintenance value for maintenance.
     * @param  indexTemplate  IndexTemplate value for indexTemplate.
     * @param  opensearchSettings  OpenSearchSettings value for opensearchSettings.
     * @param  version  String value for version.
     * @param  recoveryBackupName  String value for recoveryBackupName.
     * @param  opensearchDashboards  OpensearchDashboards value for opensearchDashboards.
     */
    public DbaasOpensearchRequest(
            String plan,
            Long maxIndexCount,
            Boolean keepIndexRefreshInterval,
            List<String> ipFilter,
            Boolean terminationProtection,
            String forkFromService,
            List<IndexPattern> indexPatterns,
            Maintenance maintenance,
            IndexTemplate indexTemplate,
            OpenSearchSettings opensearchSettings,
            String version,
            String recoveryBackupName,
            OpensearchDashboards opensearchDashboards) {
        this.maxIndexCount = maxIndexCount;
        this.keepIndexRefreshInterval = keepIndexRefreshInterval;
        this.ipFilter = ipFilter;
        this.terminationProtection = terminationProtection;
        this.forkFromService = forkFromService;
        this.indexPatterns = indexPatterns;
        this.maintenance = maintenance;
        this.indexTemplate = indexTemplate;
        this.opensearchSettings = opensearchSettings;
        this.version = version;
        this.recoveryBackupName = recoveryBackupName;
        this.plan = plan;
        this.opensearchDashboards = opensearchDashboards;
    }

    /**
     * Getter for MaxIndexCount.
     * Maximum number of indexes to keep before deleting the oldest one
     * @return Returns the Long
     */
    @JsonGetter("max-index-count")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Long getMaxIndexCount() {
        return maxIndexCount;
    }

    /**
     * Setter for MaxIndexCount.
     * Maximum number of indexes to keep before deleting the oldest one
     * @param maxIndexCount Value for Long
     */
    @JsonSetter("max-index-count")
    public void setMaxIndexCount(Long maxIndexCount) {
        this.maxIndexCount = maxIndexCount;
    }

    /**
     * Getter for KeepIndexRefreshInterval.
     * Aiven automation resets index.refresh_interval to default value for every index to be sure
     * that indices are always visible to search. If it doesn't fit your case, you can disable this
     * by setting up this flag to true.
     * @return Returns the Boolean
     */
    @JsonGetter("keep-index-refresh-interval")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getKeepIndexRefreshInterval() {
        return keepIndexRefreshInterval;
    }

    /**
     * Setter for KeepIndexRefreshInterval.
     * Aiven automation resets index.refresh_interval to default value for every index to be sure
     * that indices are always visible to search. If it doesn't fit your case, you can disable this
     * by setting up this flag to true.
     * @param keepIndexRefreshInterval Value for Boolean
     */
    @JsonSetter("keep-index-refresh-interval")
    public void setKeepIndexRefreshInterval(Boolean keepIndexRefreshInterval) {
        this.keepIndexRefreshInterval = keepIndexRefreshInterval;
    }

    /**
     * Getter for IpFilter.
     * Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'
     * @return Returns the List of String
     */
    @JsonGetter("ip-filter")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<String> getIpFilter() {
        return ipFilter;
    }

    /**
     * Setter for IpFilter.
     * Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'
     * @param ipFilter Value for List of String
     */
    @JsonSetter("ip-filter")
    public void setIpFilter(List<String> ipFilter) {
        this.ipFilter = ipFilter;
    }

    /**
     * Getter for TerminationProtection.
     * Service is protected against termination and powering off
     * @return Returns the Boolean
     */
    @JsonGetter("termination-protection")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getTerminationProtection() {
        return terminationProtection;
    }

    /**
     * Setter for TerminationProtection.
     * Service is protected against termination and powering off
     * @param terminationProtection Value for Boolean
     */
    @JsonSetter("termination-protection")
    public void setTerminationProtection(Boolean terminationProtection) {
        this.terminationProtection = terminationProtection;
    }

    /**
     * Getter for ForkFromService.
     * @return Returns the String
     */
    @JsonGetter("fork-from-service")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getForkFromService() {
        return forkFromService;
    }

    /**
     * Setter for ForkFromService.
     * @param forkFromService Value for String
     */
    @JsonSetter("fork-from-service")
    public void setForkFromService(String forkFromService) {
        this.forkFromService = forkFromService;
    }

    /**
     * Getter for IndexPatterns.
     * Allows you to create glob style patterns and set a max number of indexes matching this
     * pattern you want to keep. Creating indexes exceeding this value will cause the oldest one to
     * get deleted. You could for example create a pattern looking like 'logs.?' and then create
     * index logs.1, logs.2 etc, it will delete logs.1 once you create logs.6. Do note 'logs.?' does
     * not apply to logs.10. Note: Setting max_index_count to 0 will do nothing and the pattern gets
     * ignored.
     * @return Returns the List of IndexPattern
     */
    @JsonGetter("index-patterns")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<IndexPattern> getIndexPatterns() {
        return indexPatterns;
    }

    /**
     * Setter for IndexPatterns.
     * Allows you to create glob style patterns and set a max number of indexes matching this
     * pattern you want to keep. Creating indexes exceeding this value will cause the oldest one to
     * get deleted. You could for example create a pattern looking like 'logs.?' and then create
     * index logs.1, logs.2 etc, it will delete logs.1 once you create logs.6. Do note 'logs.?' does
     * not apply to logs.10. Note: Setting max_index_count to 0 will do nothing and the pattern gets
     * ignored.
     * @param indexPatterns Value for List of IndexPattern
     */
    @JsonSetter("index-patterns")
    public void setIndexPatterns(List<IndexPattern> indexPatterns) {
        this.indexPatterns = indexPatterns;
    }

    /**
     * Getter for Maintenance.
     * Automatic maintenance settings
     * @return Returns the Maintenance
     */
    @JsonGetter("maintenance")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Maintenance getMaintenance() {
        return maintenance;
    }

    /**
     * Setter for Maintenance.
     * Automatic maintenance settings
     * @param maintenance Value for Maintenance
     */
    @JsonSetter("maintenance")
    public void setMaintenance(Maintenance maintenance) {
        this.maintenance = maintenance;
    }

    /**
     * Getter for IndexTemplate.
     * Template settings for all new indexes
     * @return Returns the IndexTemplate
     */
    @JsonGetter("index-template")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public IndexTemplate getIndexTemplate() {
        return indexTemplate;
    }

    /**
     * Setter for IndexTemplate.
     * Template settings for all new indexes
     * @param indexTemplate Value for IndexTemplate
     */
    @JsonSetter("index-template")
    public void setIndexTemplate(IndexTemplate indexTemplate) {
        this.indexTemplate = indexTemplate;
    }

    /**
     * Getter for OpensearchSettings.
     * @return Returns the OpenSearchSettings
     */
    @JsonGetter("opensearch-settings")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public OpenSearchSettings getOpensearchSettings() {
        return opensearchSettings;
    }

    /**
     * Setter for OpensearchSettings.
     * @param opensearchSettings Value for OpenSearchSettings
     */
    @JsonSetter("opensearch-settings")
    public void setOpensearchSettings(OpenSearchSettings opensearchSettings) {
        this.opensearchSettings = opensearchSettings;
    }

    /**
     * Getter for Version.
     * OpenSearch major version
     * @return Returns the String
     */
    @JsonGetter("version")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getVersion() {
        return version;
    }

    /**
     * Setter for Version.
     * OpenSearch major version
     * @param version Value for String
     */
    @JsonSetter("version")
    public void setVersion(String version) {
        this.version = version;
    }

    /**
     * Getter for RecoveryBackupName.
     * Name of a backup to recover from for services that support backup names
     * @return Returns the String
     */
    @JsonGetter("recovery-backup-name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getRecoveryBackupName() {
        return recoveryBackupName;
    }

    /**
     * Setter for RecoveryBackupName.
     * Name of a backup to recover from for services that support backup names
     * @param recoveryBackupName Value for String
     */
    @JsonSetter("recovery-backup-name")
    public void setRecoveryBackupName(String recoveryBackupName) {
        this.recoveryBackupName = recoveryBackupName;
    }

    /**
     * Getter for Plan.
     * Subscription plan
     * @return Returns the String
     */
    @JsonGetter("plan")
    public String getPlan() {
        return plan;
    }

    /**
     * Setter for Plan.
     * Subscription plan
     * @param plan Value for String
     */
    @JsonSetter("plan")
    public void setPlan(String plan) {
        this.plan = plan;
    }

    /**
     * Getter for OpensearchDashboards.
     * OpenSearch Dashboards settings
     * @return Returns the OpensearchDashboards
     */
    @JsonGetter("opensearch-dashboards")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public OpensearchDashboards getOpensearchDashboards() {
        return opensearchDashboards;
    }

    /**
     * Setter for OpensearchDashboards.
     * OpenSearch Dashboards settings
     * @param opensearchDashboards Value for OpensearchDashboards
     */
    @JsonSetter("opensearch-dashboards")
    public void setOpensearchDashboards(OpensearchDashboards opensearchDashboards) {
        this.opensearchDashboards = opensearchDashboards;
    }

    /**
     * Converts this DbaasOpensearchRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "DbaasOpensearchRequest [" + "plan=" + plan + ", maxIndexCount=" + maxIndexCount
                + ", keepIndexRefreshInterval=" + keepIndexRefreshInterval + ", ipFilter="
                + ipFilter + ", terminationProtection=" + terminationProtection
                + ", forkFromService=" + forkFromService + ", indexPatterns=" + indexPatterns
                + ", maintenance=" + maintenance + ", indexTemplate=" + indexTemplate
                + ", opensearchSettings=" + opensearchSettings + ", version=" + version
                + ", recoveryBackupName=" + recoveryBackupName + ", opensearchDashboards="
                + opensearchDashboards + "]";
    }

    /**
     * Builds a new {@link DbaasOpensearchRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link DbaasOpensearchRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(plan)
                .maxIndexCount(getMaxIndexCount())
                .keepIndexRefreshInterval(getKeepIndexRefreshInterval())
                .ipFilter(getIpFilter())
                .terminationProtection(getTerminationProtection())
                .forkFromService(getForkFromService())
                .indexPatterns(getIndexPatterns())
                .maintenance(getMaintenance())
                .indexTemplate(getIndexTemplate())
                .opensearchSettings(getOpensearchSettings())
                .version(getVersion())
                .recoveryBackupName(getRecoveryBackupName())
                .opensearchDashboards(getOpensearchDashboards());
        return builder;
    }

    /**
     * Class to build instances of {@link DbaasOpensearchRequest}.
     */
    public static class Builder {
        private String plan;
        private Long maxIndexCount;
        private Boolean keepIndexRefreshInterval;
        private List<String> ipFilter;
        private Boolean terminationProtection;
        private String forkFromService;
        private List<IndexPattern> indexPatterns;
        private Maintenance maintenance;
        private IndexTemplate indexTemplate;
        private OpenSearchSettings opensearchSettings;
        private String version;
        private String recoveryBackupName;
        private OpensearchDashboards opensearchDashboards;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  plan  String value for plan.
         */
        public Builder(String plan) {
            this.plan = plan;
        }

        /**
         * Setter for plan.
         * @param  plan  String value for plan.
         * @return Builder
         */
        public Builder plan(String plan) {
            this.plan = plan;
            return this;
        }

        /**
         * Setter for maxIndexCount.
         * @param  maxIndexCount  Long value for maxIndexCount.
         * @return Builder
         */
        public Builder maxIndexCount(Long maxIndexCount) {
            this.maxIndexCount = maxIndexCount;
            return this;
        }

        /**
         * Setter for keepIndexRefreshInterval.
         * @param  keepIndexRefreshInterval  Boolean value for keepIndexRefreshInterval.
         * @return Builder
         */
        public Builder keepIndexRefreshInterval(Boolean keepIndexRefreshInterval) {
            this.keepIndexRefreshInterval = keepIndexRefreshInterval;
            return this;
        }

        /**
         * Setter for ipFilter.
         * @param  ipFilter  List of String value for ipFilter.
         * @return Builder
         */
        public Builder ipFilter(List<String> ipFilter) {
            this.ipFilter = ipFilter;
            return this;
        }

        /**
         * Setter for terminationProtection.
         * @param  terminationProtection  Boolean value for terminationProtection.
         * @return Builder
         */
        public Builder terminationProtection(Boolean terminationProtection) {
            this.terminationProtection = terminationProtection;
            return this;
        }

        /**
         * Setter for forkFromService.
         * @param  forkFromService  String value for forkFromService.
         * @return Builder
         */
        public Builder forkFromService(String forkFromService) {
            this.forkFromService = forkFromService;
            return this;
        }

        /**
         * Setter for indexPatterns.
         * @param  indexPatterns  List of IndexPattern value for indexPatterns.
         * @return Builder
         */
        public Builder indexPatterns(List<IndexPattern> indexPatterns) {
            this.indexPatterns = indexPatterns;
            return this;
        }

        /**
         * Setter for maintenance.
         * @param  maintenance  Maintenance value for maintenance.
         * @return Builder
         */
        public Builder maintenance(Maintenance maintenance) {
            this.maintenance = maintenance;
            return this;
        }

        /**
         * Setter for indexTemplate.
         * @param  indexTemplate  IndexTemplate value for indexTemplate.
         * @return Builder
         */
        public Builder indexTemplate(IndexTemplate indexTemplate) {
            this.indexTemplate = indexTemplate;
            return this;
        }

        /**
         * Setter for opensearchSettings.
         * @param  opensearchSettings  OpenSearchSettings value for opensearchSettings.
         * @return Builder
         */
        public Builder opensearchSettings(OpenSearchSettings opensearchSettings) {
            this.opensearchSettings = opensearchSettings;
            return this;
        }

        /**
         * Setter for version.
         * @param  version  String value for version.
         * @return Builder
         */
        public Builder version(String version) {
            this.version = version;
            return this;
        }

        /**
         * Setter for recoveryBackupName.
         * @param  recoveryBackupName  String value for recoveryBackupName.
         * @return Builder
         */
        public Builder recoveryBackupName(String recoveryBackupName) {
            this.recoveryBackupName = recoveryBackupName;
            return this;
        }

        /**
         * Setter for opensearchDashboards.
         * @param  opensearchDashboards  OpensearchDashboards value for opensearchDashboards.
         * @return Builder
         */
        public Builder opensearchDashboards(OpensearchDashboards opensearchDashboards) {
            this.opensearchDashboards = opensearchDashboards;
            return this;
        }

        /**
         * Builds a new {@link DbaasOpensearchRequest} object using the set fields.
         * @return {@link DbaasOpensearchRequest}
         */
        public DbaasOpensearchRequest build() {
            return new DbaasOpensearchRequest(plan, maxIndexCount, keepIndexRefreshInterval,
                    ipFilter, terminationProtection, forkFromService, indexPatterns, maintenance,
                    indexTemplate, opensearchSettings, version, recoveryBackupName,
                    opensearchDashboards);
        }
    }
}
