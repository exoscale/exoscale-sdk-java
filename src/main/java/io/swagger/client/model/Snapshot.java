/*
 * Exoscale Public API
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * OpenAPI spec version: 2.0.0
 * Contact: api@exoscale.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.client.model.Instance;
import io.swagger.client.model.SnapshotExport;
import io.swagger.v3.oas.annotations.media.Schema;
import java.time.OffsetDateTime;
import java.util.UUID;
/**
 * Snapshot
 */
@Schema(description = "Snapshot")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-03-08T17:23:40.261901+01:00[Europe/Vienna]")

public class Snapshot {
  @JsonProperty("id")
  private UUID id = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("created-at")
  private OffsetDateTime createdAt = null;

  /**
   * Snapshot state
   */
  public enum StateEnum {
    SNAPSHOTTING("snapshotting"),
    DELETED("deleted"),
    EXPORTING("exporting"),
    READY("ready"),
    DELETING("deleting"),
    ERROR("error"),
    EXPORTED("exported");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static StateEnum fromValue(String input) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("state")
  private StateEnum state = null;

  @JsonProperty("size")
  private Long size = null;

  @JsonProperty("export")
  private SnapshotExport export = null;

  @JsonProperty("instance")
  private Instance instance = null;

   /**
   * Snapshot ID
   * @return id
  **/
  @Schema(description = "Snapshot ID")
  public UUID getId() {
    return id;
  }

  public Snapshot name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Snapshot name
   * @return name
  **/
  @Schema(description = "Snapshot name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

   /**
   * Snapshot creation date
   * @return createdAt
  **/
  @Schema(description = "Snapshot creation date")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public Snapshot state(StateEnum state) {
    this.state = state;
    return this;
  }

   /**
   * Snapshot state
   * @return state
  **/
  @Schema(description = "Snapshot state")
  public StateEnum getState() {
    return state;
  }

  public void setState(StateEnum state) {
    this.state = state;
  }

   /**
   * Snapshot size in GB
   * minimum: 10
   * maximum: 50000
   * @return size
  **/
  @Schema(description = "Snapshot size in GB")
  public Long getSize() {
    return size;
  }

  public Snapshot export(SnapshotExport export) {
    this.export = export;
    return this;
  }

   /**
   * Get export
   * @return export
  **/
  @Schema(description = "")
  public SnapshotExport getExport() {
    return export;
  }

  public void setExport(SnapshotExport export) {
    this.export = export;
  }

  public Snapshot instance(Instance instance) {
    this.instance = instance;
    return this;
  }

   /**
   * Get instance
   * @return instance
  **/
  @Schema(description = "")
  public Instance getInstance() {
    return instance;
  }

  public void setInstance(Instance instance) {
    this.instance = instance;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Snapshot snapshot = (Snapshot) o;
    return Objects.equals(this.id, snapshot.id) &&
        Objects.equals(this.name, snapshot.name) &&
        Objects.equals(this.createdAt, snapshot.createdAt) &&
        Objects.equals(this.state, snapshot.state) &&
        Objects.equals(this.size, snapshot.size) &&
        Objects.equals(this.export, snapshot.export) &&
        Objects.equals(this.instance, snapshot.instance);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, createdAt, state, size, export, instance);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Snapshot {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    export: ").append(toIndentedString(export)).append("\n");
    sb.append("    instance: ").append(toIndentedString(instance)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
