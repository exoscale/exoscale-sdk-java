/*
 * Exoscale Public API
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * OpenAPI spec version: 2.0.0
 * Contact: api@exoscale.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.client.model.ZoneName;
import io.swagger.v3.oas.annotations.media.Schema;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
/**
 * Instance template
 */
@Schema(description = "Instance template")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-03-08T17:23:40.261901+01:00[Europe/Vienna]")

public class Template {
  @JsonProperty("maintainer")
  private String maintainer = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("ssh-key-enabled")
  private Boolean sshKeyEnabled = null;

  @JsonProperty("family")
  private String family = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("default-user")
  private String defaultUser = null;

  @JsonProperty("size")
  private Long size = null;

  @JsonProperty("password-enabled")
  private Boolean passwordEnabled = null;

  @JsonProperty("build")
  private String build = null;

  @JsonProperty("checksum")
  private String checksum = null;

  /**
   * Boot mode (default: legacy)
   */
  public enum BootModeEnum {
    LEGACY("legacy"),
    UEFI("uefi");

    private String value;

    BootModeEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static BootModeEnum fromValue(String input) {
      for (BootModeEnum b : BootModeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("boot-mode")
  private BootModeEnum bootMode = null;

  @JsonProperty("id")
  private UUID id = null;

  @JsonProperty("zones")
  private List<ZoneName> zones = null;

  @JsonProperty("url")
  private String url = null;

  @JsonProperty("version")
  private String version = null;

  @JsonProperty("created-at")
  private OffsetDateTime createdAt = null;

  /**
   * Template visibility
   */
  public enum VisibilityEnum {
    PRIVATE("private"),
    PUBLIC("public");

    private String value;

    VisibilityEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static VisibilityEnum fromValue(String input) {
      for (VisibilityEnum b : VisibilityEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("visibility")
  private VisibilityEnum visibility = null;

   /**
   * Template maintainer
   * @return maintainer
  **/
  @Schema(description = "Template maintainer")
  public String getMaintainer() {
    return maintainer;
  }

  public Template description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Template description
   * @return description
  **/
  @Schema(description = "Template description")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Template sshKeyEnabled(Boolean sshKeyEnabled) {
    this.sshKeyEnabled = sshKeyEnabled;
    return this;
  }

   /**
   * Enable SSH key-based login
   * @return sshKeyEnabled
  **/
  @Schema(description = "Enable SSH key-based login")
  public Boolean isSshKeyEnabled() {
    return sshKeyEnabled;
  }

  public void setSshKeyEnabled(Boolean sshKeyEnabled) {
    this.sshKeyEnabled = sshKeyEnabled;
  }

   /**
   * Template family
   * @return family
  **/
  @Schema(description = "Template family")
  public String getFamily() {
    return family;
  }

  public Template name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Template name
   * @return name
  **/
  @Schema(description = "Template name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Template defaultUser(String defaultUser) {
    this.defaultUser = defaultUser;
    return this;
  }

   /**
   * Template default user
   * @return defaultUser
  **/
  @Schema(description = "Template default user")
  public String getDefaultUser() {
    return defaultUser;
  }

  public void setDefaultUser(String defaultUser) {
    this.defaultUser = defaultUser;
  }

  public Template size(Long size) {
    this.size = size;
    return this;
  }

   /**
   * Template size
   * minimum: 0
   * @return size
  **/
  @Schema(description = "Template size")
  public Long getSize() {
    return size;
  }

  public void setSize(Long size) {
    this.size = size;
  }

  public Template passwordEnabled(Boolean passwordEnabled) {
    this.passwordEnabled = passwordEnabled;
    return this;
  }

   /**
   * Enable password-based login
   * @return passwordEnabled
  **/
  @Schema(description = "Enable password-based login")
  public Boolean isPasswordEnabled() {
    return passwordEnabled;
  }

  public void setPasswordEnabled(Boolean passwordEnabled) {
    this.passwordEnabled = passwordEnabled;
  }

   /**
   * Template build
   * @return build
  **/
  @Schema(description = "Template build")
  public String getBuild() {
    return build;
  }

  public Template checksum(String checksum) {
    this.checksum = checksum;
    return this;
  }

   /**
   * Template MD5 checksum
   * @return checksum
  **/
  @Schema(description = "Template MD5 checksum")
  public String getChecksum() {
    return checksum;
  }

  public void setChecksum(String checksum) {
    this.checksum = checksum;
  }

  public Template bootMode(BootModeEnum bootMode) {
    this.bootMode = bootMode;
    return this;
  }

   /**
   * Boot mode (default: legacy)
   * @return bootMode
  **/
  @Schema(description = "Boot mode (default: legacy)")
  public BootModeEnum getBootMode() {
    return bootMode;
  }

  public void setBootMode(BootModeEnum bootMode) {
    this.bootMode = bootMode;
  }

   /**
   * Template ID
   * @return id
  **/
  @Schema(description = "Template ID")
  public UUID getId() {
    return id;
  }

  public Template zones(List<ZoneName> zones) {
    this.zones = zones;
    return this;
  }

  public Template addZonesItem(ZoneName zonesItem) {
    if (this.zones == null) {
      this.zones = new ArrayList<>();
    }
    this.zones.add(zonesItem);
    return this;
  }

   /**
   * Zones availability
   * @return zones
  **/
  @Schema(description = "Zones availability")
  public List<ZoneName> getZones() {
    return zones;
  }

  public void setZones(List<ZoneName> zones) {
    this.zones = zones;
  }

  public Template url(String url) {
    this.url = url;
    return this;
  }

   /**
   * Template source URL
   * @return url
  **/
  @Schema(description = "Template source URL")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

   /**
   * Template version
   * @return version
  **/
  @Schema(description = "Template version")
  public String getVersion() {
    return version;
  }

   /**
   * Template creation date
   * @return createdAt
  **/
  @Schema(description = "Template creation date")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

   /**
   * Template visibility
   * @return visibility
  **/
  @Schema(description = "Template visibility")
  public VisibilityEnum getVisibility() {
    return visibility;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Template template = (Template) o;
    return Objects.equals(this.maintainer, template.maintainer) &&
        Objects.equals(this.description, template.description) &&
        Objects.equals(this.sshKeyEnabled, template.sshKeyEnabled) &&
        Objects.equals(this.family, template.family) &&
        Objects.equals(this.name, template.name) &&
        Objects.equals(this.defaultUser, template.defaultUser) &&
        Objects.equals(this.size, template.size) &&
        Objects.equals(this.passwordEnabled, template.passwordEnabled) &&
        Objects.equals(this.build, template.build) &&
        Objects.equals(this.checksum, template.checksum) &&
        Objects.equals(this.bootMode, template.bootMode) &&
        Objects.equals(this.id, template.id) &&
        Objects.equals(this.zones, template.zones) &&
        Objects.equals(this.url, template.url) &&
        Objects.equals(this.version, template.version) &&
        Objects.equals(this.createdAt, template.createdAt) &&
        Objects.equals(this.visibility, template.visibility);
  }

  @Override
  public int hashCode() {
    return Objects.hash(maintainer, description, sshKeyEnabled, family, name, defaultUser, size, passwordEnabled, build, checksum, bootMode, id, zones, url, version, createdAt, visibility);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Template {\n");
    
    sb.append("    maintainer: ").append(toIndentedString(maintainer)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    sshKeyEnabled: ").append(toIndentedString(sshKeyEnabled)).append("\n");
    sb.append("    family: ").append(toIndentedString(family)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    defaultUser: ").append(toIndentedString(defaultUser)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    passwordEnabled: ").append(toIndentedString(passwordEnabled)).append("\n");
    sb.append("    build: ").append(toIndentedString(build)).append("\n");
    sb.append("    checksum: ").append(toIndentedString(checksum)).append("\n");
    sb.append("    bootMode: ").append(toIndentedString(bootMode)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    zones: ").append(toIndentedString(zones)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    visibility: ").append(toIndentedString(visibility)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
