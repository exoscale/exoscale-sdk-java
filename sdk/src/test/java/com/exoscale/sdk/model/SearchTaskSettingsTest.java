/*
 * Exoscale Public API
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@exoscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.exoscale.sdk.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import java.util.Arrays;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;

/**
 * Model tests for SearchTaskSettings
 */
public class SearchTaskSettingsTest {
    private final SearchTaskSettings model = new SearchTaskSettings();

    /**
     * Model tests for SearchTaskSettings
     */
    @Test
    public void testSearchTaskSettings() {
        // TODO: test SearchTaskSettings
    }

    /**
     * Test the property 'totalHeapPercentThreshold'
     */
    @Test
    public void totalHeapPercentThresholdTest() {
        // TODO: test totalHeapPercentThreshold
    }

    /**
     * Test the property 'elapsedTimeMillisThreshold'
     */
    @Test
    public void elapsedTimeMillisThresholdTest() {
        // TODO: test elapsedTimeMillisThreshold
    }

    /**
     * Test the property 'cancellationRate'
     */
    @Test
    public void cancellationRateTest() {
        // TODO: test cancellationRate
    }

    /**
     * Test the property 'heapVariance'
     */
    @Test
    public void heapVarianceTest() {
        // TODO: test heapVariance
    }

    /**
     * Test the property 'heapMovingAverageWindowSize'
     */
    @Test
    public void heapMovingAverageWindowSizeTest() {
        // TODO: test heapMovingAverageWindowSize
    }

    /**
     * Test the property 'cancellationRatio'
     */
    @Test
    public void cancellationRatioTest() {
        // TODO: test cancellationRatio
    }

    /**
     * Test the property 'heapPercentThreshold'
     */
    @Test
    public void heapPercentThresholdTest() {
        // TODO: test heapPercentThreshold
    }

    /**
     * Test the property 'cpuTimeMillisThreshold'
     */
    @Test
    public void cpuTimeMillisThresholdTest() {
        // TODO: test cpuTimeMillisThreshold
    }

    /**
     * Test the property 'cancellationBurst'
     */
    @Test
    public void cancellationBurstTest() {
        // TODO: test cancellationBurst
    }

}
