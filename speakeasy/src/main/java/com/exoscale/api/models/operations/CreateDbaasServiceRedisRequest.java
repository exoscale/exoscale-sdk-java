/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.exoscale.api.models.operations;

import com.exoscale.api.utils.SpeakeasyMetadata;
import com.exoscale.api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;


public class CreateDbaasServiceRedisRequest {

    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=name")
    private String name;

    @SpeakeasyMetadata("request:mediaType=application/json")
    private CreateDbaasServiceRedisRequestBody requestBody;

    public CreateDbaasServiceRedisRequest(
            String name,
            CreateDbaasServiceRedisRequestBody requestBody) {
        Utils.checkNotNull(name, "name");
        Utils.checkNotNull(requestBody, "requestBody");
        this.name = name;
        this.requestBody = requestBody;
    }

    public String name() {
        return name;
    }

    public CreateDbaasServiceRedisRequestBody requestBody() {
        return requestBody;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public CreateDbaasServiceRedisRequest withName(String name) {
        Utils.checkNotNull(name, "name");
        this.name = name;
        return this;
    }

    public CreateDbaasServiceRedisRequest withRequestBody(CreateDbaasServiceRedisRequestBody requestBody) {
        Utils.checkNotNull(requestBody, "requestBody");
        this.requestBody = requestBody;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CreateDbaasServiceRedisRequest other = (CreateDbaasServiceRedisRequest) o;
        return 
            java.util.Objects.deepEquals(this.name, other.name) &&
            java.util.Objects.deepEquals(this.requestBody, other.requestBody);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            name,
            requestBody);
    }
    
    @Override
    public String toString() {
        return Utils.toString(CreateDbaasServiceRedisRequest.class,
                "name", name,
                "requestBody", requestBody);
    }
    
    public final static class Builder {
 
        private String name;
 
        private CreateDbaasServiceRedisRequestBody requestBody;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder name(String name) {
            Utils.checkNotNull(name, "name");
            this.name = name;
            return this;
        }

        public Builder requestBody(CreateDbaasServiceRedisRequestBody requestBody) {
            Utils.checkNotNull(requestBody, "requestBody");
            this.requestBody = requestBody;
            return this;
        }
        
        public CreateDbaasServiceRedisRequest build() {
            return new CreateDbaasServiceRedisRequest(
                name,
                requestBody);
        }
    }
}

