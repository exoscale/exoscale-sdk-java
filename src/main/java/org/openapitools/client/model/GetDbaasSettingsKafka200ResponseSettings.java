/*
 * Exoscale Public API
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@exoscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GetDbaasSettingsKafka200ResponseSettingsKafka;
import org.openapitools.client.model.GetDbaasSettingsKafka200ResponseSettingsKafkaConnect;
import org.openapitools.client.model.GetDbaasSettingsKafka200ResponseSettingsKafkaRest;
import org.openapitools.client.model.GetDbaasSettingsKafka200ResponseSettingsSchemaRegistry;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetDbaasSettingsKafka200ResponseSettings
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-27T17:14:44.205710495Z[Etc/UTC]", comments = "Generator version: 7.5.0-SNAPSHOT")
public class GetDbaasSettingsKafka200ResponseSettings {
  public static final String SERIALIZED_NAME_KAFKA = "kafka";
  @SerializedName(SERIALIZED_NAME_KAFKA)
  private GetDbaasSettingsKafka200ResponseSettingsKafka kafka;

  public static final String SERIALIZED_NAME_KAFKA_CONNECT = "kafka-connect";
  @SerializedName(SERIALIZED_NAME_KAFKA_CONNECT)
  private GetDbaasSettingsKafka200ResponseSettingsKafkaConnect kafkaConnect;

  public static final String SERIALIZED_NAME_KAFKA_REST = "kafka-rest";
  @SerializedName(SERIALIZED_NAME_KAFKA_REST)
  private GetDbaasSettingsKafka200ResponseSettingsKafkaRest kafkaRest;

  public static final String SERIALIZED_NAME_SCHEMA_REGISTRY = "schema-registry";
  @SerializedName(SERIALIZED_NAME_SCHEMA_REGISTRY)
  private GetDbaasSettingsKafka200ResponseSettingsSchemaRegistry schemaRegistry;

  public GetDbaasSettingsKafka200ResponseSettings() {
  }

  public GetDbaasSettingsKafka200ResponseSettings kafka(GetDbaasSettingsKafka200ResponseSettingsKafka kafka) {
    this.kafka = kafka;
    return this;
  }

   /**
   * Get kafka
   * @return kafka
  **/
  @javax.annotation.Nullable
  public GetDbaasSettingsKafka200ResponseSettingsKafka getKafka() {
    return kafka;
  }

  public void setKafka(GetDbaasSettingsKafka200ResponseSettingsKafka kafka) {
    this.kafka = kafka;
  }


  public GetDbaasSettingsKafka200ResponseSettings kafkaConnect(GetDbaasSettingsKafka200ResponseSettingsKafkaConnect kafkaConnect) {
    this.kafkaConnect = kafkaConnect;
    return this;
  }

   /**
   * Get kafkaConnect
   * @return kafkaConnect
  **/
  @javax.annotation.Nullable
  public GetDbaasSettingsKafka200ResponseSettingsKafkaConnect getKafkaConnect() {
    return kafkaConnect;
  }

  public void setKafkaConnect(GetDbaasSettingsKafka200ResponseSettingsKafkaConnect kafkaConnect) {
    this.kafkaConnect = kafkaConnect;
  }


  public GetDbaasSettingsKafka200ResponseSettings kafkaRest(GetDbaasSettingsKafka200ResponseSettingsKafkaRest kafkaRest) {
    this.kafkaRest = kafkaRest;
    return this;
  }

   /**
   * Get kafkaRest
   * @return kafkaRest
  **/
  @javax.annotation.Nullable
  public GetDbaasSettingsKafka200ResponseSettingsKafkaRest getKafkaRest() {
    return kafkaRest;
  }

  public void setKafkaRest(GetDbaasSettingsKafka200ResponseSettingsKafkaRest kafkaRest) {
    this.kafkaRest = kafkaRest;
  }


  public GetDbaasSettingsKafka200ResponseSettings schemaRegistry(GetDbaasSettingsKafka200ResponseSettingsSchemaRegistry schemaRegistry) {
    this.schemaRegistry = schemaRegistry;
    return this;
  }

   /**
   * Get schemaRegistry
   * @return schemaRegistry
  **/
  @javax.annotation.Nullable
  public GetDbaasSettingsKafka200ResponseSettingsSchemaRegistry getSchemaRegistry() {
    return schemaRegistry;
  }

  public void setSchemaRegistry(GetDbaasSettingsKafka200ResponseSettingsSchemaRegistry schemaRegistry) {
    this.schemaRegistry = schemaRegistry;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetDbaasSettingsKafka200ResponseSettings getDbaasSettingsKafka200ResponseSettings = (GetDbaasSettingsKafka200ResponseSettings) o;
    return Objects.equals(this.kafka, getDbaasSettingsKafka200ResponseSettings.kafka) &&
        Objects.equals(this.kafkaConnect, getDbaasSettingsKafka200ResponseSettings.kafkaConnect) &&
        Objects.equals(this.kafkaRest, getDbaasSettingsKafka200ResponseSettings.kafkaRest) &&
        Objects.equals(this.schemaRegistry, getDbaasSettingsKafka200ResponseSettings.schemaRegistry);
  }

  @Override
  public int hashCode() {
    return Objects.hash(kafka, kafkaConnect, kafkaRest, schemaRegistry);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetDbaasSettingsKafka200ResponseSettings {\n");
    sb.append("    kafka: ").append(toIndentedString(kafka)).append("\n");
    sb.append("    kafkaConnect: ").append(toIndentedString(kafkaConnect)).append("\n");
    sb.append("    kafkaRest: ").append(toIndentedString(kafkaRest)).append("\n");
    sb.append("    schemaRegistry: ").append(toIndentedString(schemaRegistry)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("kafka");
    openapiFields.add("kafka-connect");
    openapiFields.add("kafka-rest");
    openapiFields.add("schema-registry");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to GetDbaasSettingsKafka200ResponseSettings
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetDbaasSettingsKafka200ResponseSettings.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetDbaasSettingsKafka200ResponseSettings is not found in the empty JSON string", GetDbaasSettingsKafka200ResponseSettings.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetDbaasSettingsKafka200ResponseSettings.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetDbaasSettingsKafka200ResponseSettings` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `kafka`
      if (jsonObj.get("kafka") != null && !jsonObj.get("kafka").isJsonNull()) {
        GetDbaasSettingsKafka200ResponseSettingsKafka.validateJsonElement(jsonObj.get("kafka"));
      }
      // validate the optional field `kafka-connect`
      if (jsonObj.get("kafka-connect") != null && !jsonObj.get("kafka-connect").isJsonNull()) {
        GetDbaasSettingsKafka200ResponseSettingsKafkaConnect.validateJsonElement(jsonObj.get("kafka-connect"));
      }
      // validate the optional field `kafka-rest`
      if (jsonObj.get("kafka-rest") != null && !jsonObj.get("kafka-rest").isJsonNull()) {
        GetDbaasSettingsKafka200ResponseSettingsKafkaRest.validateJsonElement(jsonObj.get("kafka-rest"));
      }
      // validate the optional field `schema-registry`
      if (jsonObj.get("schema-registry") != null && !jsonObj.get("schema-registry").isJsonNull()) {
        GetDbaasSettingsKafka200ResponseSettingsSchemaRegistry.validateJsonElement(jsonObj.get("schema-registry"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetDbaasSettingsKafka200ResponseSettings.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetDbaasSettingsKafka200ResponseSettings' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetDbaasSettingsKafka200ResponseSettings> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetDbaasSettingsKafka200ResponseSettings.class));

       return (TypeAdapter<T>) new TypeAdapter<GetDbaasSettingsKafka200ResponseSettings>() {
           @Override
           public void write(JsonWriter out, GetDbaasSettingsKafka200ResponseSettings value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetDbaasSettingsKafka200ResponseSettings read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of GetDbaasSettingsKafka200ResponseSettings given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of GetDbaasSettingsKafka200ResponseSettings
  * @throws IOException if the JSON string is invalid with respect to GetDbaasSettingsKafka200ResponseSettings
  */
  public static GetDbaasSettingsKafka200ResponseSettings fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetDbaasSettingsKafka200ResponseSettings.class);
  }

 /**
  * Convert an instance of GetDbaasSettingsKafka200ResponseSettings to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

