/*
 * Exoscale Public API
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * OpenAPI spec version: 2.0.0
 * Contact: api@exoscale.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.client.model.EnumIntegrationTypes;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * DbaasintegrationBody
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-03-08T17:23:40.261901+01:00[Europe/Vienna]")

public class DbaasintegrationBody {
  @JsonProperty("integration-type")
  private EnumIntegrationTypes integrationType = null;

  @JsonProperty("source-service")
  private String sourceService = null;

  @JsonProperty("dest-service")
  private String destService = null;

  @JsonProperty("settings")
  private Object settings = null;

  public DbaasintegrationBody integrationType(EnumIntegrationTypes integrationType) {
    this.integrationType = integrationType;
    return this;
  }

   /**
   * Get integrationType
   * @return integrationType
  **/
  @Schema(required = true, description = "")
  public EnumIntegrationTypes getIntegrationType() {
    return integrationType;
  }

  public void setIntegrationType(EnumIntegrationTypes integrationType) {
    this.integrationType = integrationType;
  }

  public DbaasintegrationBody sourceService(String sourceService) {
    this.sourceService = sourceService;
    return this;
  }

   /**
   * Get sourceService
   * @return sourceService
  **/
  @Schema(required = true, description = "")
  public String getSourceService() {
    return sourceService;
  }

  public void setSourceService(String sourceService) {
    this.sourceService = sourceService;
  }

  public DbaasintegrationBody destService(String destService) {
    this.destService = destService;
    return this;
  }

   /**
   * Get destService
   * @return destService
  **/
  @Schema(required = true, description = "")
  public String getDestService() {
    return destService;
  }

  public void setDestService(String destService) {
    this.destService = destService;
  }

  public DbaasintegrationBody settings(Object settings) {
    this.settings = settings;
    return this;
  }

   /**
   * Integration settings
   * @return settings
  **/
  @Schema(description = "Integration settings")
  public Object getSettings() {
    return settings;
  }

  public void setSettings(Object settings) {
    this.settings = settings;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DbaasintegrationBody dbaasintegrationBody = (DbaasintegrationBody) o;
    return Objects.equals(this.integrationType, dbaasintegrationBody.integrationType) &&
        Objects.equals(this.sourceService, dbaasintegrationBody.sourceService) &&
        Objects.equals(this.destService, dbaasintegrationBody.destService) &&
        Objects.equals(this.settings, dbaasintegrationBody.settings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(integrationType, sourceService, destService, settings);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DbaasintegrationBody {\n");
    
    sb.append("    integrationType: ").append(toIndentedString(integrationType)).append("\n");
    sb.append("    sourceService: ").append(toIndentedString(sourceService)).append("\n");
    sb.append("    destService: ").append(toIndentedString(destService)).append("\n");
    sb.append("    settings: ").append(toIndentedString(settings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
