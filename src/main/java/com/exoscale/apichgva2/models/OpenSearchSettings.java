/*
 * ExoscalePublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.exoscale.apichgva2.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.OptionalNullable;
import java.util.List;

/**
 * This is a model class for OpenSearchSettings type.
 */
public class OpenSearchSettings {
    private Integer threadPoolSearchThrottledSize;
    private Integer threadPoolAnalyzeSize;
    private Integer threadPoolGetSize;
    private Integer threadPoolGetQueueSize;
    private Integer indicesRecoveryMaxConcurrentFileChunks;
    private Integer indicesQueriesCacheSize;
    private Integer threadPoolSearchSize;
    private Integer indicesRecoveryMaxBytesPerSec;
    private Integer httpMaxInitialLineLength;
    private Integer threadPoolWriteQueueSize;
    private String scriptMaxCompilationsRate;
    private OptionalNullable<Integer> searchMaxBuckets;
    private OptionalNullable<List<String>> reindexRemoteWhitelist;
    private Boolean overrideMainResponseVersion;
    private Integer httpMaxHeaderSize;
    private OpensearchEmailSenderSettings emailSender;
    private OptionalNullable<Integer> indicesFielddataCacheSize;
    private OptionalNullable<Boolean> actionDestructiveRequiresName;
    private Integer indicesMemoryIndexBufferSize;
    private Integer threadPoolForceMergeSize;
    private OpensearchSecurityPluginSettings authFailureListeners;
    private OpensearchISMHistorySettings ismHistory;
    private Integer clusterRoutingAllocationNodeConcurrentRecoveries;
    private Integer threadPoolAnalyzeQueueSize;
    private Boolean actionAutoCreateIndexEnabled;
    private Integer httpMaxContentLength;
    private Integer threadPoolWriteSize;
    private Integer threadPoolSearchQueueSize;
    private Integer indicesQueryBoolMaxClauseCount;
    private Integer threadPoolSearchThrottledQueueSize;
    private Integer clusterMaxShardsPerNode;

    /**
     * Default constructor.
     */
    public OpenSearchSettings() {
    }

    /**
     * Initialization constructor.
     * @param  threadPoolSearchThrottledSize  Integer value for threadPoolSearchThrottledSize.
     * @param  threadPoolAnalyzeSize  Integer value for threadPoolAnalyzeSize.
     * @param  threadPoolGetSize  Integer value for threadPoolGetSize.
     * @param  threadPoolGetQueueSize  Integer value for threadPoolGetQueueSize.
     * @param  indicesRecoveryMaxConcurrentFileChunks  Integer value for
     *         indicesRecoveryMaxConcurrentFileChunks.
     * @param  indicesQueriesCacheSize  Integer value for indicesQueriesCacheSize.
     * @param  threadPoolSearchSize  Integer value for threadPoolSearchSize.
     * @param  indicesRecoveryMaxBytesPerSec  Integer value for indicesRecoveryMaxBytesPerSec.
     * @param  httpMaxInitialLineLength  Integer value for httpMaxInitialLineLength.
     * @param  threadPoolWriteQueueSize  Integer value for threadPoolWriteQueueSize.
     * @param  scriptMaxCompilationsRate  String value for scriptMaxCompilationsRate.
     * @param  searchMaxBuckets  Integer value for searchMaxBuckets.
     * @param  reindexRemoteWhitelist  List of String value for reindexRemoteWhitelist.
     * @param  overrideMainResponseVersion  Boolean value for overrideMainResponseVersion.
     * @param  httpMaxHeaderSize  Integer value for httpMaxHeaderSize.
     * @param  emailSender  OpensearchEmailSenderSettings value for emailSender.
     * @param  indicesFielddataCacheSize  Integer value for indicesFielddataCacheSize.
     * @param  actionDestructiveRequiresName  Boolean value for actionDestructiveRequiresName.
     * @param  indicesMemoryIndexBufferSize  Integer value for indicesMemoryIndexBufferSize.
     * @param  threadPoolForceMergeSize  Integer value for threadPoolForceMergeSize.
     * @param  authFailureListeners  OpensearchSecurityPluginSettings value for
     *         authFailureListeners.
     * @param  ismHistory  OpensearchISMHistorySettings value for ismHistory.
     * @param  clusterRoutingAllocationNodeConcurrentRecoveries  Integer value for
     *         clusterRoutingAllocationNodeConcurrentRecoveries.
     * @param  threadPoolAnalyzeQueueSize  Integer value for threadPoolAnalyzeQueueSize.
     * @param  actionAutoCreateIndexEnabled  Boolean value for actionAutoCreateIndexEnabled.
     * @param  httpMaxContentLength  Integer value for httpMaxContentLength.
     * @param  threadPoolWriteSize  Integer value for threadPoolWriteSize.
     * @param  threadPoolSearchQueueSize  Integer value for threadPoolSearchQueueSize.
     * @param  indicesQueryBoolMaxClauseCount  Integer value for indicesQueryBoolMaxClauseCount.
     * @param  threadPoolSearchThrottledQueueSize  Integer value for
     *         threadPoolSearchThrottledQueueSize.
     * @param  clusterMaxShardsPerNode  Integer value for clusterMaxShardsPerNode.
     */
    public OpenSearchSettings(
            Integer threadPoolSearchThrottledSize,
            Integer threadPoolAnalyzeSize,
            Integer threadPoolGetSize,
            Integer threadPoolGetQueueSize,
            Integer indicesRecoveryMaxConcurrentFileChunks,
            Integer indicesQueriesCacheSize,
            Integer threadPoolSearchSize,
            Integer indicesRecoveryMaxBytesPerSec,
            Integer httpMaxInitialLineLength,
            Integer threadPoolWriteQueueSize,
            String scriptMaxCompilationsRate,
            Integer searchMaxBuckets,
            List<String> reindexRemoteWhitelist,
            Boolean overrideMainResponseVersion,
            Integer httpMaxHeaderSize,
            OpensearchEmailSenderSettings emailSender,
            Integer indicesFielddataCacheSize,
            Boolean actionDestructiveRequiresName,
            Integer indicesMemoryIndexBufferSize,
            Integer threadPoolForceMergeSize,
            OpensearchSecurityPluginSettings authFailureListeners,
            OpensearchISMHistorySettings ismHistory,
            Integer clusterRoutingAllocationNodeConcurrentRecoveries,
            Integer threadPoolAnalyzeQueueSize,
            Boolean actionAutoCreateIndexEnabled,
            Integer httpMaxContentLength,
            Integer threadPoolWriteSize,
            Integer threadPoolSearchQueueSize,
            Integer indicesQueryBoolMaxClauseCount,
            Integer threadPoolSearchThrottledQueueSize,
            Integer clusterMaxShardsPerNode) {
        this.threadPoolSearchThrottledSize = threadPoolSearchThrottledSize;
        this.threadPoolAnalyzeSize = threadPoolAnalyzeSize;
        this.threadPoolGetSize = threadPoolGetSize;
        this.threadPoolGetQueueSize = threadPoolGetQueueSize;
        this.indicesRecoveryMaxConcurrentFileChunks = indicesRecoveryMaxConcurrentFileChunks;
        this.indicesQueriesCacheSize = indicesQueriesCacheSize;
        this.threadPoolSearchSize = threadPoolSearchSize;
        this.indicesRecoveryMaxBytesPerSec = indicesRecoveryMaxBytesPerSec;
        this.httpMaxInitialLineLength = httpMaxInitialLineLength;
        this.threadPoolWriteQueueSize = threadPoolWriteQueueSize;
        this.scriptMaxCompilationsRate = scriptMaxCompilationsRate;
        this.searchMaxBuckets = OptionalNullable.of(searchMaxBuckets);
        this.reindexRemoteWhitelist = OptionalNullable.of(reindexRemoteWhitelist);
        this.overrideMainResponseVersion = overrideMainResponseVersion;
        this.httpMaxHeaderSize = httpMaxHeaderSize;
        this.emailSender = emailSender;
        this.indicesFielddataCacheSize = OptionalNullable.of(indicesFielddataCacheSize);
        this.actionDestructiveRequiresName = OptionalNullable.of(actionDestructiveRequiresName);
        this.indicesMemoryIndexBufferSize = indicesMemoryIndexBufferSize;
        this.threadPoolForceMergeSize = threadPoolForceMergeSize;
        this.authFailureListeners = authFailureListeners;
        this.ismHistory = ismHistory;
        this.clusterRoutingAllocationNodeConcurrentRecoveries =
                clusterRoutingAllocationNodeConcurrentRecoveries;
        this.threadPoolAnalyzeQueueSize = threadPoolAnalyzeQueueSize;
        this.actionAutoCreateIndexEnabled = actionAutoCreateIndexEnabled;
        this.httpMaxContentLength = httpMaxContentLength;
        this.threadPoolWriteSize = threadPoolWriteSize;
        this.threadPoolSearchQueueSize = threadPoolSearchQueueSize;
        this.indicesQueryBoolMaxClauseCount = indicesQueryBoolMaxClauseCount;
        this.threadPoolSearchThrottledQueueSize = threadPoolSearchThrottledQueueSize;
        this.clusterMaxShardsPerNode = clusterMaxShardsPerNode;
    }

    /**
     * Initialization constructor.
     * @param  threadPoolSearchThrottledSize  Integer value for threadPoolSearchThrottledSize.
     * @param  threadPoolAnalyzeSize  Integer value for threadPoolAnalyzeSize.
     * @param  threadPoolGetSize  Integer value for threadPoolGetSize.
     * @param  threadPoolGetQueueSize  Integer value for threadPoolGetQueueSize.
     * @param  indicesRecoveryMaxConcurrentFileChunks  Integer value for
     *         indicesRecoveryMaxConcurrentFileChunks.
     * @param  indicesQueriesCacheSize  Integer value for indicesQueriesCacheSize.
     * @param  threadPoolSearchSize  Integer value for threadPoolSearchSize.
     * @param  indicesRecoveryMaxBytesPerSec  Integer value for indicesRecoveryMaxBytesPerSec.
     * @param  httpMaxInitialLineLength  Integer value for httpMaxInitialLineLength.
     * @param  threadPoolWriteQueueSize  Integer value for threadPoolWriteQueueSize.
     * @param  scriptMaxCompilationsRate  String value for scriptMaxCompilationsRate.
     * @param  searchMaxBuckets  Integer value for searchMaxBuckets.
     * @param  reindexRemoteWhitelist  List of String value for reindexRemoteWhitelist.
     * @param  overrideMainResponseVersion  Boolean value for overrideMainResponseVersion.
     * @param  httpMaxHeaderSize  Integer value for httpMaxHeaderSize.
     * @param  emailSender  OpensearchEmailSenderSettings value for emailSender.
     * @param  indicesFielddataCacheSize  Integer value for indicesFielddataCacheSize.
     * @param  actionDestructiveRequiresName  Boolean value for actionDestructiveRequiresName.
     * @param  indicesMemoryIndexBufferSize  Integer value for indicesMemoryIndexBufferSize.
     * @param  threadPoolForceMergeSize  Integer value for threadPoolForceMergeSize.
     * @param  authFailureListeners  OpensearchSecurityPluginSettings value for
     *         authFailureListeners.
     * @param  ismHistory  OpensearchISMHistorySettings value for ismHistory.
     * @param  clusterRoutingAllocationNodeConcurrentRecoveries  Integer value for
     *         clusterRoutingAllocationNodeConcurrentRecoveries.
     * @param  threadPoolAnalyzeQueueSize  Integer value for threadPoolAnalyzeQueueSize.
     * @param  actionAutoCreateIndexEnabled  Boolean value for actionAutoCreateIndexEnabled.
     * @param  httpMaxContentLength  Integer value for httpMaxContentLength.
     * @param  threadPoolWriteSize  Integer value for threadPoolWriteSize.
     * @param  threadPoolSearchQueueSize  Integer value for threadPoolSearchQueueSize.
     * @param  indicesQueryBoolMaxClauseCount  Integer value for indicesQueryBoolMaxClauseCount.
     * @param  threadPoolSearchThrottledQueueSize  Integer value for
     *         threadPoolSearchThrottledQueueSize.
     * @param  clusterMaxShardsPerNode  Integer value for clusterMaxShardsPerNode.
     */

    protected OpenSearchSettings(Integer threadPoolSearchThrottledSize,
            Integer threadPoolAnalyzeSize, Integer threadPoolGetSize,
            Integer threadPoolGetQueueSize, Integer indicesRecoveryMaxConcurrentFileChunks,
            Integer indicesQueriesCacheSize, Integer threadPoolSearchSize,
            Integer indicesRecoveryMaxBytesPerSec, Integer httpMaxInitialLineLength,
            Integer threadPoolWriteQueueSize, String scriptMaxCompilationsRate,
            OptionalNullable<Integer> searchMaxBuckets,
            OptionalNullable<List<String>> reindexRemoteWhitelist,
            Boolean overrideMainResponseVersion, Integer httpMaxHeaderSize,
            OpensearchEmailSenderSettings emailSender,
            OptionalNullable<Integer> indicesFielddataCacheSize,
            OptionalNullable<Boolean> actionDestructiveRequiresName,
            Integer indicesMemoryIndexBufferSize, Integer threadPoolForceMergeSize,
            OpensearchSecurityPluginSettings authFailureListeners,
            OpensearchISMHistorySettings ismHistory,
            Integer clusterRoutingAllocationNodeConcurrentRecoveries,
            Integer threadPoolAnalyzeQueueSize, Boolean actionAutoCreateIndexEnabled,
            Integer httpMaxContentLength, Integer threadPoolWriteSize,
            Integer threadPoolSearchQueueSize, Integer indicesQueryBoolMaxClauseCount,
            Integer threadPoolSearchThrottledQueueSize, Integer clusterMaxShardsPerNode) {
        this.threadPoolSearchThrottledSize = threadPoolSearchThrottledSize;
        this.threadPoolAnalyzeSize = threadPoolAnalyzeSize;
        this.threadPoolGetSize = threadPoolGetSize;
        this.threadPoolGetQueueSize = threadPoolGetQueueSize;
        this.indicesRecoveryMaxConcurrentFileChunks = indicesRecoveryMaxConcurrentFileChunks;
        this.indicesQueriesCacheSize = indicesQueriesCacheSize;
        this.threadPoolSearchSize = threadPoolSearchSize;
        this.indicesRecoveryMaxBytesPerSec = indicesRecoveryMaxBytesPerSec;
        this.httpMaxInitialLineLength = httpMaxInitialLineLength;
        this.threadPoolWriteQueueSize = threadPoolWriteQueueSize;
        this.scriptMaxCompilationsRate = scriptMaxCompilationsRate;
        this.searchMaxBuckets = searchMaxBuckets;
        this.reindexRemoteWhitelist = reindexRemoteWhitelist;
        this.overrideMainResponseVersion = overrideMainResponseVersion;
        this.httpMaxHeaderSize = httpMaxHeaderSize;
        this.emailSender = emailSender;
        this.indicesFielddataCacheSize = indicesFielddataCacheSize;
        this.actionDestructiveRequiresName = actionDestructiveRequiresName;
        this.indicesMemoryIndexBufferSize = indicesMemoryIndexBufferSize;
        this.threadPoolForceMergeSize = threadPoolForceMergeSize;
        this.authFailureListeners = authFailureListeners;
        this.ismHistory = ismHistory;
        this.clusterRoutingAllocationNodeConcurrentRecoveries =
                clusterRoutingAllocationNodeConcurrentRecoveries;
        this.threadPoolAnalyzeQueueSize = threadPoolAnalyzeQueueSize;
        this.actionAutoCreateIndexEnabled = actionAutoCreateIndexEnabled;
        this.httpMaxContentLength = httpMaxContentLength;
        this.threadPoolWriteSize = threadPoolWriteSize;
        this.threadPoolSearchQueueSize = threadPoolSearchQueueSize;
        this.indicesQueryBoolMaxClauseCount = indicesQueryBoolMaxClauseCount;
        this.threadPoolSearchThrottledQueueSize = threadPoolSearchThrottledQueueSize;
        this.clusterMaxShardsPerNode = clusterMaxShardsPerNode;
    }

    /**
     * Getter for ThreadPoolSearchThrottledSize.
     * Size for the thread pool. See documentation for exact details. Do note this may have maximum
     * value depending on CPU count - value is automatically lowered if set to higher than maximum
     * value.
     * @return Returns the Integer
     */
    @JsonGetter("thread_pool_search_throttled_size")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getThreadPoolSearchThrottledSize() {
        return threadPoolSearchThrottledSize;
    }

    /**
     * Setter for ThreadPoolSearchThrottledSize.
     * Size for the thread pool. See documentation for exact details. Do note this may have maximum
     * value depending on CPU count - value is automatically lowered if set to higher than maximum
     * value.
     * @param threadPoolSearchThrottledSize Value for Integer
     */
    @JsonSetter("thread_pool_search_throttled_size")
    public void setThreadPoolSearchThrottledSize(Integer threadPoolSearchThrottledSize) {
        this.threadPoolSearchThrottledSize = threadPoolSearchThrottledSize;
    }

    /**
     * Getter for ThreadPoolAnalyzeSize.
     * Size for the thread pool. See documentation for exact details. Do note this may have maximum
     * value depending on CPU count - value is automatically lowered if set to higher than maximum
     * value.
     * @return Returns the Integer
     */
    @JsonGetter("thread_pool_analyze_size")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getThreadPoolAnalyzeSize() {
        return threadPoolAnalyzeSize;
    }

    /**
     * Setter for ThreadPoolAnalyzeSize.
     * Size for the thread pool. See documentation for exact details. Do note this may have maximum
     * value depending on CPU count - value is automatically lowered if set to higher than maximum
     * value.
     * @param threadPoolAnalyzeSize Value for Integer
     */
    @JsonSetter("thread_pool_analyze_size")
    public void setThreadPoolAnalyzeSize(Integer threadPoolAnalyzeSize) {
        this.threadPoolAnalyzeSize = threadPoolAnalyzeSize;
    }

    /**
     * Getter for ThreadPoolGetSize.
     * Size for the thread pool. See documentation for exact details. Do note this may have maximum
     * value depending on CPU count - value is automatically lowered if set to higher than maximum
     * value.
     * @return Returns the Integer
     */
    @JsonGetter("thread_pool_get_size")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getThreadPoolGetSize() {
        return threadPoolGetSize;
    }

    /**
     * Setter for ThreadPoolGetSize.
     * Size for the thread pool. See documentation for exact details. Do note this may have maximum
     * value depending on CPU count - value is automatically lowered if set to higher than maximum
     * value.
     * @param threadPoolGetSize Value for Integer
     */
    @JsonSetter("thread_pool_get_size")
    public void setThreadPoolGetSize(Integer threadPoolGetSize) {
        this.threadPoolGetSize = threadPoolGetSize;
    }

    /**
     * Getter for ThreadPoolGetQueueSize.
     * Size for the thread pool queue. See documentation for exact details.
     * @return Returns the Integer
     */
    @JsonGetter("thread_pool_get_queue_size")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getThreadPoolGetQueueSize() {
        return threadPoolGetQueueSize;
    }

    /**
     * Setter for ThreadPoolGetQueueSize.
     * Size for the thread pool queue. See documentation for exact details.
     * @param threadPoolGetQueueSize Value for Integer
     */
    @JsonSetter("thread_pool_get_queue_size")
    public void setThreadPoolGetQueueSize(Integer threadPoolGetQueueSize) {
        this.threadPoolGetQueueSize = threadPoolGetQueueSize;
    }

    /**
     * Getter for IndicesRecoveryMaxConcurrentFileChunks.
     * Number of file chunks sent in parallel for each recovery. Defaults to 2.
     * @return Returns the Integer
     */
    @JsonGetter("indices_recovery_max_concurrent_file_chunks")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getIndicesRecoveryMaxConcurrentFileChunks() {
        return indicesRecoveryMaxConcurrentFileChunks;
    }

    /**
     * Setter for IndicesRecoveryMaxConcurrentFileChunks.
     * Number of file chunks sent in parallel for each recovery. Defaults to 2.
     * @param indicesRecoveryMaxConcurrentFileChunks Value for Integer
     */
    @JsonSetter("indices_recovery_max_concurrent_file_chunks")
    public void setIndicesRecoveryMaxConcurrentFileChunks(Integer indicesRecoveryMaxConcurrentFileChunks) {
        this.indicesRecoveryMaxConcurrentFileChunks = indicesRecoveryMaxConcurrentFileChunks;
    }

    /**
     * Getter for IndicesQueriesCacheSize.
     * Percentage value. Default is 10%. Maximum amount of heap used for query cache. This is an
     * expert setting. Too low value will decrease query performance and increase performance for
     * other operations; too high value will cause issues with other OpenSearch functionality.
     * @return Returns the Integer
     */
    @JsonGetter("indices_queries_cache_size")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getIndicesQueriesCacheSize() {
        return indicesQueriesCacheSize;
    }

    /**
     * Setter for IndicesQueriesCacheSize.
     * Percentage value. Default is 10%. Maximum amount of heap used for query cache. This is an
     * expert setting. Too low value will decrease query performance and increase performance for
     * other operations; too high value will cause issues with other OpenSearch functionality.
     * @param indicesQueriesCacheSize Value for Integer
     */
    @JsonSetter("indices_queries_cache_size")
    public void setIndicesQueriesCacheSize(Integer indicesQueriesCacheSize) {
        this.indicesQueriesCacheSize = indicesQueriesCacheSize;
    }

    /**
     * Getter for ThreadPoolSearchSize.
     * Size for the thread pool. See documentation for exact details. Do note this may have maximum
     * value depending on CPU count - value is automatically lowered if set to higher than maximum
     * value.
     * @return Returns the Integer
     */
    @JsonGetter("thread_pool_search_size")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getThreadPoolSearchSize() {
        return threadPoolSearchSize;
    }

    /**
     * Setter for ThreadPoolSearchSize.
     * Size for the thread pool. See documentation for exact details. Do note this may have maximum
     * value depending on CPU count - value is automatically lowered if set to higher than maximum
     * value.
     * @param threadPoolSearchSize Value for Integer
     */
    @JsonSetter("thread_pool_search_size")
    public void setThreadPoolSearchSize(Integer threadPoolSearchSize) {
        this.threadPoolSearchSize = threadPoolSearchSize;
    }

    /**
     * Getter for IndicesRecoveryMaxBytesPerSec.
     * Limits total inbound and outbound recovery traffic for each node. Applies to both peer
     * recoveries as well as snapshot recoveries (i.e., restores from a snapshot). Defaults to 40mb
     * @return Returns the Integer
     */
    @JsonGetter("indices_recovery_max_bytes_per_sec")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getIndicesRecoveryMaxBytesPerSec() {
        return indicesRecoveryMaxBytesPerSec;
    }

    /**
     * Setter for IndicesRecoveryMaxBytesPerSec.
     * Limits total inbound and outbound recovery traffic for each node. Applies to both peer
     * recoveries as well as snapshot recoveries (i.e., restores from a snapshot). Defaults to 40mb
     * @param indicesRecoveryMaxBytesPerSec Value for Integer
     */
    @JsonSetter("indices_recovery_max_bytes_per_sec")
    public void setIndicesRecoveryMaxBytesPerSec(Integer indicesRecoveryMaxBytesPerSec) {
        this.indicesRecoveryMaxBytesPerSec = indicesRecoveryMaxBytesPerSec;
    }

    /**
     * Getter for HttpMaxInitialLineLength.
     * The max length of an HTTP URL, in bytes
     * @return Returns the Integer
     */
    @JsonGetter("http_max_initial_line_length")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getHttpMaxInitialLineLength() {
        return httpMaxInitialLineLength;
    }

    /**
     * Setter for HttpMaxInitialLineLength.
     * The max length of an HTTP URL, in bytes
     * @param httpMaxInitialLineLength Value for Integer
     */
    @JsonSetter("http_max_initial_line_length")
    public void setHttpMaxInitialLineLength(Integer httpMaxInitialLineLength) {
        this.httpMaxInitialLineLength = httpMaxInitialLineLength;
    }

    /**
     * Getter for ThreadPoolWriteQueueSize.
     * Size for the thread pool queue. See documentation for exact details.
     * @return Returns the Integer
     */
    @JsonGetter("thread_pool_write_queue_size")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getThreadPoolWriteQueueSize() {
        return threadPoolWriteQueueSize;
    }

    /**
     * Setter for ThreadPoolWriteQueueSize.
     * Size for the thread pool queue. See documentation for exact details.
     * @param threadPoolWriteQueueSize Value for Integer
     */
    @JsonSetter("thread_pool_write_queue_size")
    public void setThreadPoolWriteQueueSize(Integer threadPoolWriteQueueSize) {
        this.threadPoolWriteQueueSize = threadPoolWriteQueueSize;
    }

    /**
     * Getter for ScriptMaxCompilationsRate.
     * Script compilation circuit breaker limits the number of inline script compilations within a
     * period of time. Default is use-context
     * @return Returns the String
     */
    @JsonGetter("script_max_compilations_rate")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getScriptMaxCompilationsRate() {
        return scriptMaxCompilationsRate;
    }

    /**
     * Setter for ScriptMaxCompilationsRate.
     * Script compilation circuit breaker limits the number of inline script compilations within a
     * period of time. Default is use-context
     * @param scriptMaxCompilationsRate Value for String
     */
    @JsonSetter("script_max_compilations_rate")
    public void setScriptMaxCompilationsRate(String scriptMaxCompilationsRate) {
        this.scriptMaxCompilationsRate = scriptMaxCompilationsRate;
    }

    /**
     * Internal Getter for SearchMaxBuckets.
     * Maximum number of aggregation buckets allowed in a single response. OpenSearch default value
     * is used when this is not defined.
     * @return Returns the Internal Integer
     */
    @JsonGetter("search_max_buckets")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetSearchMaxBuckets() {
        return this.searchMaxBuckets;
    }

    /**
     * Getter for SearchMaxBuckets.
     * Maximum number of aggregation buckets allowed in a single response. OpenSearch default value
     * is used when this is not defined.
     * @return Returns the Integer
     */
    public Integer getSearchMaxBuckets() {
        return OptionalNullable.getFrom(searchMaxBuckets);
    }

    /**
     * Setter for SearchMaxBuckets.
     * Maximum number of aggregation buckets allowed in a single response. OpenSearch default value
     * is used when this is not defined.
     * @param searchMaxBuckets Value for Integer
     */
    @JsonSetter("search_max_buckets")
    public void setSearchMaxBuckets(Integer searchMaxBuckets) {
        this.searchMaxBuckets = OptionalNullable.of(searchMaxBuckets);
    }

    /**
     * UnSetter for SearchMaxBuckets.
     * Maximum number of aggregation buckets allowed in a single response. OpenSearch default value
     * is used when this is not defined.
     */
    public void unsetSearchMaxBuckets() {
        searchMaxBuckets = null;
    }

    /**
     * Internal Getter for ReindexRemoteWhitelist.
     * Whitelisted addresses for reindexing. Changing this value will cause all OpenSearch instances
     * to restart.
     * @return Returns the Internal List of String
     */
    @JsonGetter("reindex_remote_whitelist")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<List<String>> internalGetReindexRemoteWhitelist() {
        return this.reindexRemoteWhitelist;
    }

    /**
     * Getter for ReindexRemoteWhitelist.
     * Whitelisted addresses for reindexing. Changing this value will cause all OpenSearch instances
     * to restart.
     * @return Returns the List of String
     */
    public List<String> getReindexRemoteWhitelist() {
        return OptionalNullable.getFrom(reindexRemoteWhitelist);
    }

    /**
     * Setter for ReindexRemoteWhitelist.
     * Whitelisted addresses for reindexing. Changing this value will cause all OpenSearch instances
     * to restart.
     * @param reindexRemoteWhitelist Value for List of String
     */
    @JsonSetter("reindex_remote_whitelist")
    public void setReindexRemoteWhitelist(List<String> reindexRemoteWhitelist) {
        this.reindexRemoteWhitelist = OptionalNullable.of(reindexRemoteWhitelist);
    }

    /**
     * UnSetter for ReindexRemoteWhitelist.
     * Whitelisted addresses for reindexing. Changing this value will cause all OpenSearch instances
     * to restart.
     */
    public void unsetReindexRemoteWhitelist() {
        reindexRemoteWhitelist = null;
    }

    /**
     * Getter for OverrideMainResponseVersion.
     * Compatibility mode sets OpenSearch to report its version as 7.10 so clients continue to work.
     * Default is false
     * @return Returns the Boolean
     */
    @JsonGetter("override_main_response_version")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getOverrideMainResponseVersion() {
        return overrideMainResponseVersion;
    }

    /**
     * Setter for OverrideMainResponseVersion.
     * Compatibility mode sets OpenSearch to report its version as 7.10 so clients continue to work.
     * Default is false
     * @param overrideMainResponseVersion Value for Boolean
     */
    @JsonSetter("override_main_response_version")
    public void setOverrideMainResponseVersion(Boolean overrideMainResponseVersion) {
        this.overrideMainResponseVersion = overrideMainResponseVersion;
    }

    /**
     * Getter for HttpMaxHeaderSize.
     * The max size of allowed headers, in bytes
     * @return Returns the Integer
     */
    @JsonGetter("http_max_header_size")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getHttpMaxHeaderSize() {
        return httpMaxHeaderSize;
    }

    /**
     * Setter for HttpMaxHeaderSize.
     * The max size of allowed headers, in bytes
     * @param httpMaxHeaderSize Value for Integer
     */
    @JsonSetter("http_max_header_size")
    public void setHttpMaxHeaderSize(Integer httpMaxHeaderSize) {
        this.httpMaxHeaderSize = httpMaxHeaderSize;
    }

    /**
     * Getter for EmailSender.
     * @return Returns the OpensearchEmailSenderSettings
     */
    @JsonGetter("email-sender")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public OpensearchEmailSenderSettings getEmailSender() {
        return emailSender;
    }

    /**
     * Setter for EmailSender.
     * @param emailSender Value for OpensearchEmailSenderSettings
     */
    @JsonSetter("email-sender")
    public void setEmailSender(OpensearchEmailSenderSettings emailSender) {
        this.emailSender = emailSender;
    }

    /**
     * Internal Getter for IndicesFielddataCacheSize.
     * Relative amount. Maximum amount of heap memory used for field data cache. This is an expert
     * setting; decreasing the value too much will increase overhead of loading field data; too much
     * memory used for field data cache will decrease amount of heap available for other operations.
     * @return Returns the Internal Integer
     */
    @JsonGetter("indices_fielddata_cache_size")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetIndicesFielddataCacheSize() {
        return this.indicesFielddataCacheSize;
    }

    /**
     * Getter for IndicesFielddataCacheSize.
     * Relative amount. Maximum amount of heap memory used for field data cache. This is an expert
     * setting; decreasing the value too much will increase overhead of loading field data; too much
     * memory used for field data cache will decrease amount of heap available for other operations.
     * @return Returns the Integer
     */
    public Integer getIndicesFielddataCacheSize() {
        return OptionalNullable.getFrom(indicesFielddataCacheSize);
    }

    /**
     * Setter for IndicesFielddataCacheSize.
     * Relative amount. Maximum amount of heap memory used for field data cache. This is an expert
     * setting; decreasing the value too much will increase overhead of loading field data; too much
     * memory used for field data cache will decrease amount of heap available for other operations.
     * @param indicesFielddataCacheSize Value for Integer
     */
    @JsonSetter("indices_fielddata_cache_size")
    public void setIndicesFielddataCacheSize(Integer indicesFielddataCacheSize) {
        this.indicesFielddataCacheSize = OptionalNullable.of(indicesFielddataCacheSize);
    }

    /**
     * UnSetter for IndicesFielddataCacheSize.
     * Relative amount. Maximum amount of heap memory used for field data cache. This is an expert
     * setting; decreasing the value too much will increase overhead of loading field data; too much
     * memory used for field data cache will decrease amount of heap available for other operations.
     */
    public void unsetIndicesFielddataCacheSize() {
        indicesFielddataCacheSize = null;
    }

    /**
     * Internal Getter for ActionDestructiveRequiresName.
     * @return Returns the Internal Boolean
     */
    @JsonGetter("action_destructive_requires_name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Boolean> internalGetActionDestructiveRequiresName() {
        return this.actionDestructiveRequiresName;
    }

    /**
     * Getter for ActionDestructiveRequiresName.
     * @return Returns the Boolean
     */
    public Boolean getActionDestructiveRequiresName() {
        return OptionalNullable.getFrom(actionDestructiveRequiresName);
    }

    /**
     * Setter for ActionDestructiveRequiresName.
     * @param actionDestructiveRequiresName Value for Boolean
     */
    @JsonSetter("action_destructive_requires_name")
    public void setActionDestructiveRequiresName(Boolean actionDestructiveRequiresName) {
        this.actionDestructiveRequiresName = OptionalNullable.of(actionDestructiveRequiresName);
    }

    /**
     * UnSetter for ActionDestructiveRequiresName.
     */
    public void unsetActionDestructiveRequiresName() {
        actionDestructiveRequiresName = null;
    }

    /**
     * Getter for IndicesMemoryIndexBufferSize.
     * Percentage value. Default is 10%. Total amount of heap used for indexing buffer, before
     * writing segments to disk. This is an expert setting. Too low value will slow down indexing;
     * too high value will increase indexing performance but causes performance issues for query
     * performance.
     * @return Returns the Integer
     */
    @JsonGetter("indices_memory_index_buffer_size")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getIndicesMemoryIndexBufferSize() {
        return indicesMemoryIndexBufferSize;
    }

    /**
     * Setter for IndicesMemoryIndexBufferSize.
     * Percentage value. Default is 10%. Total amount of heap used for indexing buffer, before
     * writing segments to disk. This is an expert setting. Too low value will slow down indexing;
     * too high value will increase indexing performance but causes performance issues for query
     * performance.
     * @param indicesMemoryIndexBufferSize Value for Integer
     */
    @JsonSetter("indices_memory_index_buffer_size")
    public void setIndicesMemoryIndexBufferSize(Integer indicesMemoryIndexBufferSize) {
        this.indicesMemoryIndexBufferSize = indicesMemoryIndexBufferSize;
    }

    /**
     * Getter for ThreadPoolForceMergeSize.
     * Size for the thread pool. See documentation for exact details. Do note this may have maximum
     * value depending on CPU count - value is automatically lowered if set to higher than maximum
     * value.
     * @return Returns the Integer
     */
    @JsonGetter("thread_pool_force_merge_size")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getThreadPoolForceMergeSize() {
        return threadPoolForceMergeSize;
    }

    /**
     * Setter for ThreadPoolForceMergeSize.
     * Size for the thread pool. See documentation for exact details. Do note this may have maximum
     * value depending on CPU count - value is automatically lowered if set to higher than maximum
     * value.
     * @param threadPoolForceMergeSize Value for Integer
     */
    @JsonSetter("thread_pool_force_merge_size")
    public void setThreadPoolForceMergeSize(Integer threadPoolForceMergeSize) {
        this.threadPoolForceMergeSize = threadPoolForceMergeSize;
    }

    /**
     * Getter for AuthFailureListeners.
     * @return Returns the OpensearchSecurityPluginSettings
     */
    @JsonGetter("auth_failure_listeners")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public OpensearchSecurityPluginSettings getAuthFailureListeners() {
        return authFailureListeners;
    }

    /**
     * Setter for AuthFailureListeners.
     * @param authFailureListeners Value for OpensearchSecurityPluginSettings
     */
    @JsonSetter("auth_failure_listeners")
    public void setAuthFailureListeners(OpensearchSecurityPluginSettings authFailureListeners) {
        this.authFailureListeners = authFailureListeners;
    }

    /**
     * Getter for IsmHistory.
     * @return Returns the OpensearchISMHistorySettings
     */
    @JsonGetter("ism-history")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public OpensearchISMHistorySettings getIsmHistory() {
        return ismHistory;
    }

    /**
     * Setter for IsmHistory.
     * @param ismHistory Value for OpensearchISMHistorySettings
     */
    @JsonSetter("ism-history")
    public void setIsmHistory(OpensearchISMHistorySettings ismHistory) {
        this.ismHistory = ismHistory;
    }

    /**
     * Getter for ClusterRoutingAllocationNodeConcurrentRecoveries.
     * How many concurrent incoming/outgoing shard recoveries (normally replicas) are allowed to
     * happen on a node. Defaults to 2.
     * @return Returns the Integer
     */
    @JsonGetter("cluster_routing_allocation_node_concurrent_recoveries")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getClusterRoutingAllocationNodeConcurrentRecoveries() {
        return clusterRoutingAllocationNodeConcurrentRecoveries;
    }

    /**
     * Setter for ClusterRoutingAllocationNodeConcurrentRecoveries.
     * How many concurrent incoming/outgoing shard recoveries (normally replicas) are allowed to
     * happen on a node. Defaults to 2.
     * @param clusterRoutingAllocationNodeConcurrentRecoveries Value for Integer
     */
    @JsonSetter("cluster_routing_allocation_node_concurrent_recoveries")
    public void setClusterRoutingAllocationNodeConcurrentRecoveries(Integer clusterRoutingAllocationNodeConcurrentRecoveries) {
        this.clusterRoutingAllocationNodeConcurrentRecoveries = clusterRoutingAllocationNodeConcurrentRecoveries;
    }

    /**
     * Getter for ThreadPoolAnalyzeQueueSize.
     * Size for the thread pool queue. See documentation for exact details.
     * @return Returns the Integer
     */
    @JsonGetter("thread_pool_analyze_queue_size")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getThreadPoolAnalyzeQueueSize() {
        return threadPoolAnalyzeQueueSize;
    }

    /**
     * Setter for ThreadPoolAnalyzeQueueSize.
     * Size for the thread pool queue. See documentation for exact details.
     * @param threadPoolAnalyzeQueueSize Value for Integer
     */
    @JsonSetter("thread_pool_analyze_queue_size")
    public void setThreadPoolAnalyzeQueueSize(Integer threadPoolAnalyzeQueueSize) {
        this.threadPoolAnalyzeQueueSize = threadPoolAnalyzeQueueSize;
    }

    /**
     * Getter for ActionAutoCreateIndexEnabled.
     * Explicitly allow or block automatic creation of indices. Defaults to true
     * @return Returns the Boolean
     */
    @JsonGetter("action_auto_create_index_enabled")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getActionAutoCreateIndexEnabled() {
        return actionAutoCreateIndexEnabled;
    }

    /**
     * Setter for ActionAutoCreateIndexEnabled.
     * Explicitly allow or block automatic creation of indices. Defaults to true
     * @param actionAutoCreateIndexEnabled Value for Boolean
     */
    @JsonSetter("action_auto_create_index_enabled")
    public void setActionAutoCreateIndexEnabled(Boolean actionAutoCreateIndexEnabled) {
        this.actionAutoCreateIndexEnabled = actionAutoCreateIndexEnabled;
    }

    /**
     * Getter for HttpMaxContentLength.
     * Maximum content length for HTTP requests to the OpenSearch HTTP API, in bytes.
     * @return Returns the Integer
     */
    @JsonGetter("http_max_content_length")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getHttpMaxContentLength() {
        return httpMaxContentLength;
    }

    /**
     * Setter for HttpMaxContentLength.
     * Maximum content length for HTTP requests to the OpenSearch HTTP API, in bytes.
     * @param httpMaxContentLength Value for Integer
     */
    @JsonSetter("http_max_content_length")
    public void setHttpMaxContentLength(Integer httpMaxContentLength) {
        this.httpMaxContentLength = httpMaxContentLength;
    }

    /**
     * Getter for ThreadPoolWriteSize.
     * Size for the thread pool. See documentation for exact details. Do note this may have maximum
     * value depending on CPU count - value is automatically lowered if set to higher than maximum
     * value.
     * @return Returns the Integer
     */
    @JsonGetter("thread_pool_write_size")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getThreadPoolWriteSize() {
        return threadPoolWriteSize;
    }

    /**
     * Setter for ThreadPoolWriteSize.
     * Size for the thread pool. See documentation for exact details. Do note this may have maximum
     * value depending on CPU count - value is automatically lowered if set to higher than maximum
     * value.
     * @param threadPoolWriteSize Value for Integer
     */
    @JsonSetter("thread_pool_write_size")
    public void setThreadPoolWriteSize(Integer threadPoolWriteSize) {
        this.threadPoolWriteSize = threadPoolWriteSize;
    }

    /**
     * Getter for ThreadPoolSearchQueueSize.
     * Size for the thread pool queue. See documentation for exact details.
     * @return Returns the Integer
     */
    @JsonGetter("thread_pool_search_queue_size")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getThreadPoolSearchQueueSize() {
        return threadPoolSearchQueueSize;
    }

    /**
     * Setter for ThreadPoolSearchQueueSize.
     * Size for the thread pool queue. See documentation for exact details.
     * @param threadPoolSearchQueueSize Value for Integer
     */
    @JsonSetter("thread_pool_search_queue_size")
    public void setThreadPoolSearchQueueSize(Integer threadPoolSearchQueueSize) {
        this.threadPoolSearchQueueSize = threadPoolSearchQueueSize;
    }

    /**
     * Getter for IndicesQueryBoolMaxClauseCount.
     * Maximum number of clauses Lucene BooleanQuery can have. The default value (1024) is
     * relatively high, and increasing it may cause performance issues. Investigate other approaches
     * first before increasing this value.
     * @return Returns the Integer
     */
    @JsonGetter("indices_query_bool_max_clause_count")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getIndicesQueryBoolMaxClauseCount() {
        return indicesQueryBoolMaxClauseCount;
    }

    /**
     * Setter for IndicesQueryBoolMaxClauseCount.
     * Maximum number of clauses Lucene BooleanQuery can have. The default value (1024) is
     * relatively high, and increasing it may cause performance issues. Investigate other approaches
     * first before increasing this value.
     * @param indicesQueryBoolMaxClauseCount Value for Integer
     */
    @JsonSetter("indices_query_bool_max_clause_count")
    public void setIndicesQueryBoolMaxClauseCount(Integer indicesQueryBoolMaxClauseCount) {
        this.indicesQueryBoolMaxClauseCount = indicesQueryBoolMaxClauseCount;
    }

    /**
     * Getter for ThreadPoolSearchThrottledQueueSize.
     * Size for the thread pool queue. See documentation for exact details.
     * @return Returns the Integer
     */
    @JsonGetter("thread_pool_search_throttled_queue_size")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getThreadPoolSearchThrottledQueueSize() {
        return threadPoolSearchThrottledQueueSize;
    }

    /**
     * Setter for ThreadPoolSearchThrottledQueueSize.
     * Size for the thread pool queue. See documentation for exact details.
     * @param threadPoolSearchThrottledQueueSize Value for Integer
     */
    @JsonSetter("thread_pool_search_throttled_queue_size")
    public void setThreadPoolSearchThrottledQueueSize(Integer threadPoolSearchThrottledQueueSize) {
        this.threadPoolSearchThrottledQueueSize = threadPoolSearchThrottledQueueSize;
    }

    /**
     * Getter for ClusterMaxShardsPerNode.
     * Controls the number of shards allowed in the cluster per data node
     * @return Returns the Integer
     */
    @JsonGetter("cluster_max_shards_per_node")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getClusterMaxShardsPerNode() {
        return clusterMaxShardsPerNode;
    }

    /**
     * Setter for ClusterMaxShardsPerNode.
     * Controls the number of shards allowed in the cluster per data node
     * @param clusterMaxShardsPerNode Value for Integer
     */
    @JsonSetter("cluster_max_shards_per_node")
    public void setClusterMaxShardsPerNode(Integer clusterMaxShardsPerNode) {
        this.clusterMaxShardsPerNode = clusterMaxShardsPerNode;
    }

    /**
     * Converts this OpenSearchSettings into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "OpenSearchSettings [" + "threadPoolSearchThrottledSize="
                + threadPoolSearchThrottledSize + ", threadPoolAnalyzeSize=" + threadPoolAnalyzeSize
                + ", threadPoolGetSize=" + threadPoolGetSize + ", threadPoolGetQueueSize="
                + threadPoolGetQueueSize + ", indicesRecoveryMaxConcurrentFileChunks="
                + indicesRecoveryMaxConcurrentFileChunks + ", indicesQueriesCacheSize="
                + indicesQueriesCacheSize + ", threadPoolSearchSize=" + threadPoolSearchSize
                + ", indicesRecoveryMaxBytesPerSec=" + indicesRecoveryMaxBytesPerSec
                + ", httpMaxInitialLineLength=" + httpMaxInitialLineLength
                + ", threadPoolWriteQueueSize=" + threadPoolWriteQueueSize
                + ", scriptMaxCompilationsRate=" + scriptMaxCompilationsRate + ", searchMaxBuckets="
                + searchMaxBuckets + ", reindexRemoteWhitelist=" + reindexRemoteWhitelist
                + ", overrideMainResponseVersion=" + overrideMainResponseVersion
                + ", httpMaxHeaderSize=" + httpMaxHeaderSize + ", emailSender=" + emailSender
                + ", indicesFielddataCacheSize=" + indicesFielddataCacheSize
                + ", actionDestructiveRequiresName=" + actionDestructiveRequiresName
                + ", indicesMemoryIndexBufferSize=" + indicesMemoryIndexBufferSize
                + ", threadPoolForceMergeSize=" + threadPoolForceMergeSize
                + ", authFailureListeners=" + authFailureListeners + ", ismHistory=" + ismHistory
                + ", clusterRoutingAllocationNodeConcurrentRecoveries="
                + clusterRoutingAllocationNodeConcurrentRecoveries + ", threadPoolAnalyzeQueueSize="
                + threadPoolAnalyzeQueueSize + ", actionAutoCreateIndexEnabled="
                + actionAutoCreateIndexEnabled + ", httpMaxContentLength=" + httpMaxContentLength
                + ", threadPoolWriteSize=" + threadPoolWriteSize + ", threadPoolSearchQueueSize="
                + threadPoolSearchQueueSize + ", indicesQueryBoolMaxClauseCount="
                + indicesQueryBoolMaxClauseCount + ", threadPoolSearchThrottledQueueSize="
                + threadPoolSearchThrottledQueueSize + ", clusterMaxShardsPerNode="
                + clusterMaxShardsPerNode + "]";
    }

    /**
     * Builds a new {@link OpenSearchSettings.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link OpenSearchSettings.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .threadPoolSearchThrottledSize(getThreadPoolSearchThrottledSize())
                .threadPoolAnalyzeSize(getThreadPoolAnalyzeSize())
                .threadPoolGetSize(getThreadPoolGetSize())
                .threadPoolGetQueueSize(getThreadPoolGetQueueSize())
                .indicesRecoveryMaxConcurrentFileChunks(getIndicesRecoveryMaxConcurrentFileChunks())
                .indicesQueriesCacheSize(getIndicesQueriesCacheSize())
                .threadPoolSearchSize(getThreadPoolSearchSize())
                .indicesRecoveryMaxBytesPerSec(getIndicesRecoveryMaxBytesPerSec())
                .httpMaxInitialLineLength(getHttpMaxInitialLineLength())
                .threadPoolWriteQueueSize(getThreadPoolWriteQueueSize())
                .scriptMaxCompilationsRate(getScriptMaxCompilationsRate())
                .overrideMainResponseVersion(getOverrideMainResponseVersion())
                .httpMaxHeaderSize(getHttpMaxHeaderSize())
                .emailSender(getEmailSender())
                .indicesMemoryIndexBufferSize(getIndicesMemoryIndexBufferSize())
                .threadPoolForceMergeSize(getThreadPoolForceMergeSize())
                .authFailureListeners(getAuthFailureListeners())
                .ismHistory(getIsmHistory())
                .clusterRoutingAllocationNodeConcurrentRecoveries(getClusterRoutingAllocationNodeConcurrentRecoveries())
                .threadPoolAnalyzeQueueSize(getThreadPoolAnalyzeQueueSize())
                .actionAutoCreateIndexEnabled(getActionAutoCreateIndexEnabled())
                .httpMaxContentLength(getHttpMaxContentLength())
                .threadPoolWriteSize(getThreadPoolWriteSize())
                .threadPoolSearchQueueSize(getThreadPoolSearchQueueSize())
                .indicesQueryBoolMaxClauseCount(getIndicesQueryBoolMaxClauseCount())
                .threadPoolSearchThrottledQueueSize(getThreadPoolSearchThrottledQueueSize())
                .clusterMaxShardsPerNode(getClusterMaxShardsPerNode());
        builder.searchMaxBuckets = internalGetSearchMaxBuckets();
        builder.reindexRemoteWhitelist = internalGetReindexRemoteWhitelist();
        builder.indicesFielddataCacheSize = internalGetIndicesFielddataCacheSize();
        builder.actionDestructiveRequiresName = internalGetActionDestructiveRequiresName();
        return builder;
    }

    /**
     * Class to build instances of {@link OpenSearchSettings}.
     */
    public static class Builder {
        private Integer threadPoolSearchThrottledSize;
        private Integer threadPoolAnalyzeSize;
        private Integer threadPoolGetSize;
        private Integer threadPoolGetQueueSize;
        private Integer indicesRecoveryMaxConcurrentFileChunks;
        private Integer indicesQueriesCacheSize;
        private Integer threadPoolSearchSize;
        private Integer indicesRecoveryMaxBytesPerSec;
        private Integer httpMaxInitialLineLength;
        private Integer threadPoolWriteQueueSize;
        private String scriptMaxCompilationsRate;
        private OptionalNullable<Integer> searchMaxBuckets;
        private OptionalNullable<List<String>> reindexRemoteWhitelist;
        private Boolean overrideMainResponseVersion;
        private Integer httpMaxHeaderSize;
        private OpensearchEmailSenderSettings emailSender;
        private OptionalNullable<Integer> indicesFielddataCacheSize;
        private OptionalNullable<Boolean> actionDestructiveRequiresName;
        private Integer indicesMemoryIndexBufferSize;
        private Integer threadPoolForceMergeSize;
        private OpensearchSecurityPluginSettings authFailureListeners;
        private OpensearchISMHistorySettings ismHistory;
        private Integer clusterRoutingAllocationNodeConcurrentRecoveries;
        private Integer threadPoolAnalyzeQueueSize;
        private Boolean actionAutoCreateIndexEnabled;
        private Integer httpMaxContentLength;
        private Integer threadPoolWriteSize;
        private Integer threadPoolSearchQueueSize;
        private Integer indicesQueryBoolMaxClauseCount;
        private Integer threadPoolSearchThrottledQueueSize;
        private Integer clusterMaxShardsPerNode;



        /**
         * Setter for threadPoolSearchThrottledSize.
         * @param  threadPoolSearchThrottledSize  Integer value for threadPoolSearchThrottledSize.
         * @return Builder
         */
        public Builder threadPoolSearchThrottledSize(Integer threadPoolSearchThrottledSize) {
            this.threadPoolSearchThrottledSize = threadPoolSearchThrottledSize;
            return this;
        }

        /**
         * Setter for threadPoolAnalyzeSize.
         * @param  threadPoolAnalyzeSize  Integer value for threadPoolAnalyzeSize.
         * @return Builder
         */
        public Builder threadPoolAnalyzeSize(Integer threadPoolAnalyzeSize) {
            this.threadPoolAnalyzeSize = threadPoolAnalyzeSize;
            return this;
        }

        /**
         * Setter for threadPoolGetSize.
         * @param  threadPoolGetSize  Integer value for threadPoolGetSize.
         * @return Builder
         */
        public Builder threadPoolGetSize(Integer threadPoolGetSize) {
            this.threadPoolGetSize = threadPoolGetSize;
            return this;
        }

        /**
         * Setter for threadPoolGetQueueSize.
         * @param  threadPoolGetQueueSize  Integer value for threadPoolGetQueueSize.
         * @return Builder
         */
        public Builder threadPoolGetQueueSize(Integer threadPoolGetQueueSize) {
            this.threadPoolGetQueueSize = threadPoolGetQueueSize;
            return this;
        }

        /**
         * Setter for indicesRecoveryMaxConcurrentFileChunks.
         * @param  indicesRecoveryMaxConcurrentFileChunks  Integer value for
         *         indicesRecoveryMaxConcurrentFileChunks.
         * @return Builder
         */
        public Builder indicesRecoveryMaxConcurrentFileChunks(
                Integer indicesRecoveryMaxConcurrentFileChunks) {
            this.indicesRecoveryMaxConcurrentFileChunks = indicesRecoveryMaxConcurrentFileChunks;
            return this;
        }

        /**
         * Setter for indicesQueriesCacheSize.
         * @param  indicesQueriesCacheSize  Integer value for indicesQueriesCacheSize.
         * @return Builder
         */
        public Builder indicesQueriesCacheSize(Integer indicesQueriesCacheSize) {
            this.indicesQueriesCacheSize = indicesQueriesCacheSize;
            return this;
        }

        /**
         * Setter for threadPoolSearchSize.
         * @param  threadPoolSearchSize  Integer value for threadPoolSearchSize.
         * @return Builder
         */
        public Builder threadPoolSearchSize(Integer threadPoolSearchSize) {
            this.threadPoolSearchSize = threadPoolSearchSize;
            return this;
        }

        /**
         * Setter for indicesRecoveryMaxBytesPerSec.
         * @param  indicesRecoveryMaxBytesPerSec  Integer value for indicesRecoveryMaxBytesPerSec.
         * @return Builder
         */
        public Builder indicesRecoveryMaxBytesPerSec(Integer indicesRecoveryMaxBytesPerSec) {
            this.indicesRecoveryMaxBytesPerSec = indicesRecoveryMaxBytesPerSec;
            return this;
        }

        /**
         * Setter for httpMaxInitialLineLength.
         * @param  httpMaxInitialLineLength  Integer value for httpMaxInitialLineLength.
         * @return Builder
         */
        public Builder httpMaxInitialLineLength(Integer httpMaxInitialLineLength) {
            this.httpMaxInitialLineLength = httpMaxInitialLineLength;
            return this;
        }

        /**
         * Setter for threadPoolWriteQueueSize.
         * @param  threadPoolWriteQueueSize  Integer value for threadPoolWriteQueueSize.
         * @return Builder
         */
        public Builder threadPoolWriteQueueSize(Integer threadPoolWriteQueueSize) {
            this.threadPoolWriteQueueSize = threadPoolWriteQueueSize;
            return this;
        }

        /**
         * Setter for scriptMaxCompilationsRate.
         * @param  scriptMaxCompilationsRate  String value for scriptMaxCompilationsRate.
         * @return Builder
         */
        public Builder scriptMaxCompilationsRate(String scriptMaxCompilationsRate) {
            this.scriptMaxCompilationsRate = scriptMaxCompilationsRate;
            return this;
        }

        /**
         * Setter for searchMaxBuckets.
         * @param  searchMaxBuckets  Integer value for searchMaxBuckets.
         * @return Builder
         */
        public Builder searchMaxBuckets(Integer searchMaxBuckets) {
            this.searchMaxBuckets = OptionalNullable.of(searchMaxBuckets);
            return this;
        }

        /**
         * UnSetter for searchMaxBuckets.
         * @return Builder
         */
        public Builder unsetSearchMaxBuckets() {
            searchMaxBuckets = null;
            return this;
        }

        /**
         * Setter for reindexRemoteWhitelist.
         * @param  reindexRemoteWhitelist  List of String value for reindexRemoteWhitelist.
         * @return Builder
         */
        public Builder reindexRemoteWhitelist(List<String> reindexRemoteWhitelist) {
            this.reindexRemoteWhitelist = OptionalNullable.of(reindexRemoteWhitelist);
            return this;
        }

        /**
         * UnSetter for reindexRemoteWhitelist.
         * @return Builder
         */
        public Builder unsetReindexRemoteWhitelist() {
            reindexRemoteWhitelist = null;
            return this;
        }

        /**
         * Setter for overrideMainResponseVersion.
         * @param  overrideMainResponseVersion  Boolean value for overrideMainResponseVersion.
         * @return Builder
         */
        public Builder overrideMainResponseVersion(Boolean overrideMainResponseVersion) {
            this.overrideMainResponseVersion = overrideMainResponseVersion;
            return this;
        }

        /**
         * Setter for httpMaxHeaderSize.
         * @param  httpMaxHeaderSize  Integer value for httpMaxHeaderSize.
         * @return Builder
         */
        public Builder httpMaxHeaderSize(Integer httpMaxHeaderSize) {
            this.httpMaxHeaderSize = httpMaxHeaderSize;
            return this;
        }

        /**
         * Setter for emailSender.
         * @param  emailSender  OpensearchEmailSenderSettings value for emailSender.
         * @return Builder
         */
        public Builder emailSender(OpensearchEmailSenderSettings emailSender) {
            this.emailSender = emailSender;
            return this;
        }

        /**
         * Setter for indicesFielddataCacheSize.
         * @param  indicesFielddataCacheSize  Integer value for indicesFielddataCacheSize.
         * @return Builder
         */
        public Builder indicesFielddataCacheSize(Integer indicesFielddataCacheSize) {
            this.indicesFielddataCacheSize = OptionalNullable.of(indicesFielddataCacheSize);
            return this;
        }

        /**
         * UnSetter for indicesFielddataCacheSize.
         * @return Builder
         */
        public Builder unsetIndicesFielddataCacheSize() {
            indicesFielddataCacheSize = null;
            return this;
        }

        /**
         * Setter for actionDestructiveRequiresName.
         * @param  actionDestructiveRequiresName  Boolean value for actionDestructiveRequiresName.
         * @return Builder
         */
        public Builder actionDestructiveRequiresName(Boolean actionDestructiveRequiresName) {
            this.actionDestructiveRequiresName = OptionalNullable.of(actionDestructiveRequiresName);
            return this;
        }

        /**
         * UnSetter for actionDestructiveRequiresName.
         * @return Builder
         */
        public Builder unsetActionDestructiveRequiresName() {
            actionDestructiveRequiresName = null;
            return this;
        }

        /**
         * Setter for indicesMemoryIndexBufferSize.
         * @param  indicesMemoryIndexBufferSize  Integer value for indicesMemoryIndexBufferSize.
         * @return Builder
         */
        public Builder indicesMemoryIndexBufferSize(Integer indicesMemoryIndexBufferSize) {
            this.indicesMemoryIndexBufferSize = indicesMemoryIndexBufferSize;
            return this;
        }

        /**
         * Setter for threadPoolForceMergeSize.
         * @param  threadPoolForceMergeSize  Integer value for threadPoolForceMergeSize.
         * @return Builder
         */
        public Builder threadPoolForceMergeSize(Integer threadPoolForceMergeSize) {
            this.threadPoolForceMergeSize = threadPoolForceMergeSize;
            return this;
        }

        /**
         * Setter for authFailureListeners.
         * @param  authFailureListeners  OpensearchSecurityPluginSettings value for
         *         authFailureListeners.
         * @return Builder
         */
        public Builder authFailureListeners(
                OpensearchSecurityPluginSettings authFailureListeners) {
            this.authFailureListeners = authFailureListeners;
            return this;
        }

        /**
         * Setter for ismHistory.
         * @param  ismHistory  OpensearchISMHistorySettings value for ismHistory.
         * @return Builder
         */
        public Builder ismHistory(OpensearchISMHistorySettings ismHistory) {
            this.ismHistory = ismHistory;
            return this;
        }

        /**
         * Setter for clusterRoutingAllocationNodeConcurrentRecoveries.
         * @param  clusterRoutingAllocationNodeConcurrentRecoveries  Integer value for
         *         clusterRoutingAllocationNodeConcurrentRecoveries.
         * @return Builder
         */
        public Builder clusterRoutingAllocationNodeConcurrentRecoveries(
                Integer clusterRoutingAllocationNodeConcurrentRecoveries) {
            this.clusterRoutingAllocationNodeConcurrentRecoveries =
                    clusterRoutingAllocationNodeConcurrentRecoveries;
            return this;
        }

        /**
         * Setter for threadPoolAnalyzeQueueSize.
         * @param  threadPoolAnalyzeQueueSize  Integer value for threadPoolAnalyzeQueueSize.
         * @return Builder
         */
        public Builder threadPoolAnalyzeQueueSize(Integer threadPoolAnalyzeQueueSize) {
            this.threadPoolAnalyzeQueueSize = threadPoolAnalyzeQueueSize;
            return this;
        }

        /**
         * Setter for actionAutoCreateIndexEnabled.
         * @param  actionAutoCreateIndexEnabled  Boolean value for actionAutoCreateIndexEnabled.
         * @return Builder
         */
        public Builder actionAutoCreateIndexEnabled(Boolean actionAutoCreateIndexEnabled) {
            this.actionAutoCreateIndexEnabled = actionAutoCreateIndexEnabled;
            return this;
        }

        /**
         * Setter for httpMaxContentLength.
         * @param  httpMaxContentLength  Integer value for httpMaxContentLength.
         * @return Builder
         */
        public Builder httpMaxContentLength(Integer httpMaxContentLength) {
            this.httpMaxContentLength = httpMaxContentLength;
            return this;
        }

        /**
         * Setter for threadPoolWriteSize.
         * @param  threadPoolWriteSize  Integer value for threadPoolWriteSize.
         * @return Builder
         */
        public Builder threadPoolWriteSize(Integer threadPoolWriteSize) {
            this.threadPoolWriteSize = threadPoolWriteSize;
            return this;
        }

        /**
         * Setter for threadPoolSearchQueueSize.
         * @param  threadPoolSearchQueueSize  Integer value for threadPoolSearchQueueSize.
         * @return Builder
         */
        public Builder threadPoolSearchQueueSize(Integer threadPoolSearchQueueSize) {
            this.threadPoolSearchQueueSize = threadPoolSearchQueueSize;
            return this;
        }

        /**
         * Setter for indicesQueryBoolMaxClauseCount.
         * @param  indicesQueryBoolMaxClauseCount  Integer value for indicesQueryBoolMaxClauseCount.
         * @return Builder
         */
        public Builder indicesQueryBoolMaxClauseCount(Integer indicesQueryBoolMaxClauseCount) {
            this.indicesQueryBoolMaxClauseCount = indicesQueryBoolMaxClauseCount;
            return this;
        }

        /**
         * Setter for threadPoolSearchThrottledQueueSize.
         * @param  threadPoolSearchThrottledQueueSize  Integer value for
         *         threadPoolSearchThrottledQueueSize.
         * @return Builder
         */
        public Builder threadPoolSearchThrottledQueueSize(
                Integer threadPoolSearchThrottledQueueSize) {
            this.threadPoolSearchThrottledQueueSize = threadPoolSearchThrottledQueueSize;
            return this;
        }

        /**
         * Setter for clusterMaxShardsPerNode.
         * @param  clusterMaxShardsPerNode  Integer value for clusterMaxShardsPerNode.
         * @return Builder
         */
        public Builder clusterMaxShardsPerNode(Integer clusterMaxShardsPerNode) {
            this.clusterMaxShardsPerNode = clusterMaxShardsPerNode;
            return this;
        }

        /**
         * Builds a new {@link OpenSearchSettings} object using the set fields.
         * @return {@link OpenSearchSettings}
         */
        public OpenSearchSettings build() {
            return new OpenSearchSettings(threadPoolSearchThrottledSize, threadPoolAnalyzeSize,
                    threadPoolGetSize, threadPoolGetQueueSize,
                    indicesRecoveryMaxConcurrentFileChunks, indicesQueriesCacheSize,
                    threadPoolSearchSize, indicesRecoveryMaxBytesPerSec, httpMaxInitialLineLength,
                    threadPoolWriteQueueSize, scriptMaxCompilationsRate, searchMaxBuckets,
                    reindexRemoteWhitelist, overrideMainResponseVersion, httpMaxHeaderSize,
                    emailSender, indicesFielddataCacheSize, actionDestructiveRequiresName,
                    indicesMemoryIndexBufferSize, threadPoolForceMergeSize, authFailureListeners,
                    ismHistory, clusterRoutingAllocationNodeConcurrentRecoveries,
                    threadPoolAnalyzeQueueSize, actionAutoCreateIndexEnabled, httpMaxContentLength,
                    threadPoolWriteSize, threadPoolSearchQueueSize, indicesQueryBoolMaxClauseCount,
                    threadPoolSearchThrottledQueueSize, clusterMaxShardsPerNode);
        }
    }
}
