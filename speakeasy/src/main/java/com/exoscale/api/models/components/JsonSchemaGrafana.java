/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.exoscale.api.models.components;

import com.exoscale.api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Optional;


public class JsonSchemaGrafana {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allow_embedding")
    private Optional<? extends Boolean> allowEmbedding;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cookie_samesite")
    private Optional<? extends CookieSameSiteAttributeStrictPreventsSendingCookieForCrossSiteRequestsEffectivelyDisablingDirectLinkingFromOtherSitesToGrafanaLaxIsTheDefaultValue> cookieSamesite;

    /**
     * This feature is new in Grafana 9 and is quite resource intensive. It may cause low-end plans to work more slowly while the dashboard previews are rendering.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dashboard_previews_enabled")
    private Optional<? extends Boolean> dashboardPreviewsEnabled;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metrics_enabled")
    private Optional<? extends Boolean> metricsEnabled;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recovery_basebackup_name")
    private Optional<? extends String> recoveryBasebackupName;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("auth_azuread")
    private Optional<? extends AzureADOAuthIntegration> authAzuread;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("alerting_enabled")
    private Optional<? extends Boolean> alertingEnabled;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unified_alerting_enabled")
    private Optional<? extends Boolean> unifiedAlertingEnabled;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("auth_github")
    private Optional<? extends GithubAuthIntegration> authGithub;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user_auto_assign_org")
    private Optional<? extends Boolean> userAutoAssignOrg;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dataproxy_send_user_header")
    private Optional<? extends Boolean> dataproxySendUserHeader;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("privatelink_access")
    private Optional<? extends AllowAccessToSelectedServiceComponentsThroughPrivatelink> privatelinkAccess;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("google_analytics_ua_id")
    private Optional<? extends String> googleAnalyticsUaId;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dashboards_versions_to_keep")
    private Optional<? extends Long> dashboardsVersionsToKeep;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("editors_can_admin")
    private Optional<? extends Boolean> editorsCanAdmin;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("smtp_server")
    private Optional<? extends SMTPServerSettings> smtpServer;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("auth_gitlab")
    private Optional<? extends GitLabAuthIntegration> authGitlab;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("alerting_nodata_or_nullvalues")
    private Optional<? extends DefaultValueForNoDataOrNullValuesForNewAlertingRules> alertingNodataOrNullvalues;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("auth_basic_enabled")
    private Optional<? extends Boolean> authBasicEnabled;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("date_formats")
    private Optional<? extends GrafanaDateFormatSpecifications> dateFormats;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("disable_gravatar")
    private Optional<? extends Boolean> disableGravatar;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user_auto_assign_org_role")
    private Optional<? extends SetRoleForNewSignupsDefaultsToViewer> userAutoAssignOrgRole;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dataproxy_timeout")
    private Optional<? extends Long> dataproxyTimeout;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("viewers_can_edit")
    private Optional<? extends Boolean> viewersCanEdit;

    /**
     * Signed sequence of decimal numbers, followed by a unit suffix (ms, s, m, h, d), e.g. 30s, 1h
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dashboards_min_refresh_interval")
    private Optional<? extends String> dashboardsMinRefreshInterval;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("auth_google")
    private Optional<? extends GoogleAuthIntegration> authGoogle;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("oauth_allow_insecure_email_lookup")
    private Optional<? extends Boolean> oauthAllowInsecureEmailLookup;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("alerting_max_annotations_to_keep")
    private Optional<? extends Long> alertingMaxAnnotationsToKeep;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("auth_generic_oauth")
    private Optional<? extends GenericOAuthIntegration> authGenericOauth;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("alerting_error_or_timeout")
    private Optional<? extends DefaultErrorOrTimeoutSettingForNewAlertingRules> alertingErrorOrTimeout;

    public JsonSchemaGrafana(
            @JsonProperty("allow_embedding") Optional<? extends Boolean> allowEmbedding,
            @JsonProperty("cookie_samesite") Optional<? extends CookieSameSiteAttributeStrictPreventsSendingCookieForCrossSiteRequestsEffectivelyDisablingDirectLinkingFromOtherSitesToGrafanaLaxIsTheDefaultValue> cookieSamesite,
            @JsonProperty("dashboard_previews_enabled") Optional<? extends Boolean> dashboardPreviewsEnabled,
            @JsonProperty("metrics_enabled") Optional<? extends Boolean> metricsEnabled,
            @JsonProperty("recovery_basebackup_name") Optional<? extends String> recoveryBasebackupName,
            @JsonProperty("auth_azuread") Optional<? extends AzureADOAuthIntegration> authAzuread,
            @JsonProperty("alerting_enabled") Optional<? extends Boolean> alertingEnabled,
            @JsonProperty("unified_alerting_enabled") Optional<? extends Boolean> unifiedAlertingEnabled,
            @JsonProperty("auth_github") Optional<? extends GithubAuthIntegration> authGithub,
            @JsonProperty("user_auto_assign_org") Optional<? extends Boolean> userAutoAssignOrg,
            @JsonProperty("dataproxy_send_user_header") Optional<? extends Boolean> dataproxySendUserHeader,
            @JsonProperty("privatelink_access") Optional<? extends AllowAccessToSelectedServiceComponentsThroughPrivatelink> privatelinkAccess,
            @JsonProperty("google_analytics_ua_id") Optional<? extends String> googleAnalyticsUaId,
            @JsonProperty("dashboards_versions_to_keep") Optional<? extends Long> dashboardsVersionsToKeep,
            @JsonProperty("editors_can_admin") Optional<? extends Boolean> editorsCanAdmin,
            @JsonProperty("smtp_server") Optional<? extends SMTPServerSettings> smtpServer,
            @JsonProperty("auth_gitlab") Optional<? extends GitLabAuthIntegration> authGitlab,
            @JsonProperty("alerting_nodata_or_nullvalues") Optional<? extends DefaultValueForNoDataOrNullValuesForNewAlertingRules> alertingNodataOrNullvalues,
            @JsonProperty("auth_basic_enabled") Optional<? extends Boolean> authBasicEnabled,
            @JsonProperty("date_formats") Optional<? extends GrafanaDateFormatSpecifications> dateFormats,
            @JsonProperty("disable_gravatar") Optional<? extends Boolean> disableGravatar,
            @JsonProperty("user_auto_assign_org_role") Optional<? extends SetRoleForNewSignupsDefaultsToViewer> userAutoAssignOrgRole,
            @JsonProperty("dataproxy_timeout") Optional<? extends Long> dataproxyTimeout,
            @JsonProperty("viewers_can_edit") Optional<? extends Boolean> viewersCanEdit,
            @JsonProperty("dashboards_min_refresh_interval") Optional<? extends String> dashboardsMinRefreshInterval,
            @JsonProperty("auth_google") Optional<? extends GoogleAuthIntegration> authGoogle,
            @JsonProperty("oauth_allow_insecure_email_lookup") Optional<? extends Boolean> oauthAllowInsecureEmailLookup,
            @JsonProperty("alerting_max_annotations_to_keep") Optional<? extends Long> alertingMaxAnnotationsToKeep,
            @JsonProperty("auth_generic_oauth") Optional<? extends GenericOAuthIntegration> authGenericOauth,
            @JsonProperty("alerting_error_or_timeout") Optional<? extends DefaultErrorOrTimeoutSettingForNewAlertingRules> alertingErrorOrTimeout) {
        Utils.checkNotNull(allowEmbedding, "allowEmbedding");
        Utils.checkNotNull(cookieSamesite, "cookieSamesite");
        Utils.checkNotNull(dashboardPreviewsEnabled, "dashboardPreviewsEnabled");
        Utils.checkNotNull(metricsEnabled, "metricsEnabled");
        Utils.checkNotNull(recoveryBasebackupName, "recoveryBasebackupName");
        Utils.checkNotNull(authAzuread, "authAzuread");
        Utils.checkNotNull(alertingEnabled, "alertingEnabled");
        Utils.checkNotNull(unifiedAlertingEnabled, "unifiedAlertingEnabled");
        Utils.checkNotNull(authGithub, "authGithub");
        Utils.checkNotNull(userAutoAssignOrg, "userAutoAssignOrg");
        Utils.checkNotNull(dataproxySendUserHeader, "dataproxySendUserHeader");
        Utils.checkNotNull(privatelinkAccess, "privatelinkAccess");
        Utils.checkNotNull(googleAnalyticsUaId, "googleAnalyticsUaId");
        Utils.checkNotNull(dashboardsVersionsToKeep, "dashboardsVersionsToKeep");
        Utils.checkNotNull(editorsCanAdmin, "editorsCanAdmin");
        Utils.checkNotNull(smtpServer, "smtpServer");
        Utils.checkNotNull(authGitlab, "authGitlab");
        Utils.checkNotNull(alertingNodataOrNullvalues, "alertingNodataOrNullvalues");
        Utils.checkNotNull(authBasicEnabled, "authBasicEnabled");
        Utils.checkNotNull(dateFormats, "dateFormats");
        Utils.checkNotNull(disableGravatar, "disableGravatar");
        Utils.checkNotNull(userAutoAssignOrgRole, "userAutoAssignOrgRole");
        Utils.checkNotNull(dataproxyTimeout, "dataproxyTimeout");
        Utils.checkNotNull(viewersCanEdit, "viewersCanEdit");
        Utils.checkNotNull(dashboardsMinRefreshInterval, "dashboardsMinRefreshInterval");
        Utils.checkNotNull(authGoogle, "authGoogle");
        Utils.checkNotNull(oauthAllowInsecureEmailLookup, "oauthAllowInsecureEmailLookup");
        Utils.checkNotNull(alertingMaxAnnotationsToKeep, "alertingMaxAnnotationsToKeep");
        Utils.checkNotNull(authGenericOauth, "authGenericOauth");
        Utils.checkNotNull(alertingErrorOrTimeout, "alertingErrorOrTimeout");
        this.allowEmbedding = allowEmbedding;
        this.cookieSamesite = cookieSamesite;
        this.dashboardPreviewsEnabled = dashboardPreviewsEnabled;
        this.metricsEnabled = metricsEnabled;
        this.recoveryBasebackupName = recoveryBasebackupName;
        this.authAzuread = authAzuread;
        this.alertingEnabled = alertingEnabled;
        this.unifiedAlertingEnabled = unifiedAlertingEnabled;
        this.authGithub = authGithub;
        this.userAutoAssignOrg = userAutoAssignOrg;
        this.dataproxySendUserHeader = dataproxySendUserHeader;
        this.privatelinkAccess = privatelinkAccess;
        this.googleAnalyticsUaId = googleAnalyticsUaId;
        this.dashboardsVersionsToKeep = dashboardsVersionsToKeep;
        this.editorsCanAdmin = editorsCanAdmin;
        this.smtpServer = smtpServer;
        this.authGitlab = authGitlab;
        this.alertingNodataOrNullvalues = alertingNodataOrNullvalues;
        this.authBasicEnabled = authBasicEnabled;
        this.dateFormats = dateFormats;
        this.disableGravatar = disableGravatar;
        this.userAutoAssignOrgRole = userAutoAssignOrgRole;
        this.dataproxyTimeout = dataproxyTimeout;
        this.viewersCanEdit = viewersCanEdit;
        this.dashboardsMinRefreshInterval = dashboardsMinRefreshInterval;
        this.authGoogle = authGoogle;
        this.oauthAllowInsecureEmailLookup = oauthAllowInsecureEmailLookup;
        this.alertingMaxAnnotationsToKeep = alertingMaxAnnotationsToKeep;
        this.authGenericOauth = authGenericOauth;
        this.alertingErrorOrTimeout = alertingErrorOrTimeout;
    }

    public Optional<? extends Boolean> allowEmbedding() {
        return allowEmbedding;
    }

    public Optional<? extends CookieSameSiteAttributeStrictPreventsSendingCookieForCrossSiteRequestsEffectivelyDisablingDirectLinkingFromOtherSitesToGrafanaLaxIsTheDefaultValue> cookieSamesite() {
        return cookieSamesite;
    }

    /**
     * This feature is new in Grafana 9 and is quite resource intensive. It may cause low-end plans to work more slowly while the dashboard previews are rendering.
     */
    public Optional<? extends Boolean> dashboardPreviewsEnabled() {
        return dashboardPreviewsEnabled;
    }

    public Optional<? extends Boolean> metricsEnabled() {
        return metricsEnabled;
    }

    public Optional<? extends String> recoveryBasebackupName() {
        return recoveryBasebackupName;
    }

    public Optional<? extends AzureADOAuthIntegration> authAzuread() {
        return authAzuread;
    }

    public Optional<? extends Boolean> alertingEnabled() {
        return alertingEnabled;
    }

    public Optional<? extends Boolean> unifiedAlertingEnabled() {
        return unifiedAlertingEnabled;
    }

    public Optional<? extends GithubAuthIntegration> authGithub() {
        return authGithub;
    }

    public Optional<? extends Boolean> userAutoAssignOrg() {
        return userAutoAssignOrg;
    }

    public Optional<? extends Boolean> dataproxySendUserHeader() {
        return dataproxySendUserHeader;
    }

    public Optional<? extends AllowAccessToSelectedServiceComponentsThroughPrivatelink> privatelinkAccess() {
        return privatelinkAccess;
    }

    public Optional<? extends String> googleAnalyticsUaId() {
        return googleAnalyticsUaId;
    }

    public Optional<? extends Long> dashboardsVersionsToKeep() {
        return dashboardsVersionsToKeep;
    }

    public Optional<? extends Boolean> editorsCanAdmin() {
        return editorsCanAdmin;
    }

    public Optional<? extends SMTPServerSettings> smtpServer() {
        return smtpServer;
    }

    public Optional<? extends GitLabAuthIntegration> authGitlab() {
        return authGitlab;
    }

    public Optional<? extends DefaultValueForNoDataOrNullValuesForNewAlertingRules> alertingNodataOrNullvalues() {
        return alertingNodataOrNullvalues;
    }

    public Optional<? extends Boolean> authBasicEnabled() {
        return authBasicEnabled;
    }

    public Optional<? extends GrafanaDateFormatSpecifications> dateFormats() {
        return dateFormats;
    }

    public Optional<? extends Boolean> disableGravatar() {
        return disableGravatar;
    }

    public Optional<? extends SetRoleForNewSignupsDefaultsToViewer> userAutoAssignOrgRole() {
        return userAutoAssignOrgRole;
    }

    public Optional<? extends Long> dataproxyTimeout() {
        return dataproxyTimeout;
    }

    public Optional<? extends Boolean> viewersCanEdit() {
        return viewersCanEdit;
    }

    /**
     * Signed sequence of decimal numbers, followed by a unit suffix (ms, s, m, h, d), e.g. 30s, 1h
     */
    public Optional<? extends String> dashboardsMinRefreshInterval() {
        return dashboardsMinRefreshInterval;
    }

    public Optional<? extends GoogleAuthIntegration> authGoogle() {
        return authGoogle;
    }

    public Optional<? extends Boolean> oauthAllowInsecureEmailLookup() {
        return oauthAllowInsecureEmailLookup;
    }

    public Optional<? extends Long> alertingMaxAnnotationsToKeep() {
        return alertingMaxAnnotationsToKeep;
    }

    public Optional<? extends GenericOAuthIntegration> authGenericOauth() {
        return authGenericOauth;
    }

    public Optional<? extends DefaultErrorOrTimeoutSettingForNewAlertingRules> alertingErrorOrTimeout() {
        return alertingErrorOrTimeout;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public JsonSchemaGrafana withAllowEmbedding(boolean allowEmbedding) {
        Utils.checkNotNull(allowEmbedding, "allowEmbedding");
        this.allowEmbedding = Optional.ofNullable(allowEmbedding);
        return this;
    }

    public JsonSchemaGrafana withAllowEmbedding(Optional<? extends Boolean> allowEmbedding) {
        Utils.checkNotNull(allowEmbedding, "allowEmbedding");
        this.allowEmbedding = allowEmbedding;
        return this;
    }

    public JsonSchemaGrafana withCookieSamesite(CookieSameSiteAttributeStrictPreventsSendingCookieForCrossSiteRequestsEffectivelyDisablingDirectLinkingFromOtherSitesToGrafanaLaxIsTheDefaultValue cookieSamesite) {
        Utils.checkNotNull(cookieSamesite, "cookieSamesite");
        this.cookieSamesite = Optional.ofNullable(cookieSamesite);
        return this;
    }

    public JsonSchemaGrafana withCookieSamesite(Optional<? extends CookieSameSiteAttributeStrictPreventsSendingCookieForCrossSiteRequestsEffectivelyDisablingDirectLinkingFromOtherSitesToGrafanaLaxIsTheDefaultValue> cookieSamesite) {
        Utils.checkNotNull(cookieSamesite, "cookieSamesite");
        this.cookieSamesite = cookieSamesite;
        return this;
    }

    /**
     * This feature is new in Grafana 9 and is quite resource intensive. It may cause low-end plans to work more slowly while the dashboard previews are rendering.
     */
    public JsonSchemaGrafana withDashboardPreviewsEnabled(boolean dashboardPreviewsEnabled) {
        Utils.checkNotNull(dashboardPreviewsEnabled, "dashboardPreviewsEnabled");
        this.dashboardPreviewsEnabled = Optional.ofNullable(dashboardPreviewsEnabled);
        return this;
    }

    /**
     * This feature is new in Grafana 9 and is quite resource intensive. It may cause low-end plans to work more slowly while the dashboard previews are rendering.
     */
    public JsonSchemaGrafana withDashboardPreviewsEnabled(Optional<? extends Boolean> dashboardPreviewsEnabled) {
        Utils.checkNotNull(dashboardPreviewsEnabled, "dashboardPreviewsEnabled");
        this.dashboardPreviewsEnabled = dashboardPreviewsEnabled;
        return this;
    }

    public JsonSchemaGrafana withMetricsEnabled(boolean metricsEnabled) {
        Utils.checkNotNull(metricsEnabled, "metricsEnabled");
        this.metricsEnabled = Optional.ofNullable(metricsEnabled);
        return this;
    }

    public JsonSchemaGrafana withMetricsEnabled(Optional<? extends Boolean> metricsEnabled) {
        Utils.checkNotNull(metricsEnabled, "metricsEnabled");
        this.metricsEnabled = metricsEnabled;
        return this;
    }

    public JsonSchemaGrafana withRecoveryBasebackupName(String recoveryBasebackupName) {
        Utils.checkNotNull(recoveryBasebackupName, "recoveryBasebackupName");
        this.recoveryBasebackupName = Optional.ofNullable(recoveryBasebackupName);
        return this;
    }

    public JsonSchemaGrafana withRecoveryBasebackupName(Optional<? extends String> recoveryBasebackupName) {
        Utils.checkNotNull(recoveryBasebackupName, "recoveryBasebackupName");
        this.recoveryBasebackupName = recoveryBasebackupName;
        return this;
    }

    public JsonSchemaGrafana withAuthAzuread(AzureADOAuthIntegration authAzuread) {
        Utils.checkNotNull(authAzuread, "authAzuread");
        this.authAzuread = Optional.ofNullable(authAzuread);
        return this;
    }

    public JsonSchemaGrafana withAuthAzuread(Optional<? extends AzureADOAuthIntegration> authAzuread) {
        Utils.checkNotNull(authAzuread, "authAzuread");
        this.authAzuread = authAzuread;
        return this;
    }

    public JsonSchemaGrafana withAlertingEnabled(boolean alertingEnabled) {
        Utils.checkNotNull(alertingEnabled, "alertingEnabled");
        this.alertingEnabled = Optional.ofNullable(alertingEnabled);
        return this;
    }

    public JsonSchemaGrafana withAlertingEnabled(Optional<? extends Boolean> alertingEnabled) {
        Utils.checkNotNull(alertingEnabled, "alertingEnabled");
        this.alertingEnabled = alertingEnabled;
        return this;
    }

    public JsonSchemaGrafana withUnifiedAlertingEnabled(boolean unifiedAlertingEnabled) {
        Utils.checkNotNull(unifiedAlertingEnabled, "unifiedAlertingEnabled");
        this.unifiedAlertingEnabled = Optional.ofNullable(unifiedAlertingEnabled);
        return this;
    }

    public JsonSchemaGrafana withUnifiedAlertingEnabled(Optional<? extends Boolean> unifiedAlertingEnabled) {
        Utils.checkNotNull(unifiedAlertingEnabled, "unifiedAlertingEnabled");
        this.unifiedAlertingEnabled = unifiedAlertingEnabled;
        return this;
    }

    public JsonSchemaGrafana withAuthGithub(GithubAuthIntegration authGithub) {
        Utils.checkNotNull(authGithub, "authGithub");
        this.authGithub = Optional.ofNullable(authGithub);
        return this;
    }

    public JsonSchemaGrafana withAuthGithub(Optional<? extends GithubAuthIntegration> authGithub) {
        Utils.checkNotNull(authGithub, "authGithub");
        this.authGithub = authGithub;
        return this;
    }

    public JsonSchemaGrafana withUserAutoAssignOrg(boolean userAutoAssignOrg) {
        Utils.checkNotNull(userAutoAssignOrg, "userAutoAssignOrg");
        this.userAutoAssignOrg = Optional.ofNullable(userAutoAssignOrg);
        return this;
    }

    public JsonSchemaGrafana withUserAutoAssignOrg(Optional<? extends Boolean> userAutoAssignOrg) {
        Utils.checkNotNull(userAutoAssignOrg, "userAutoAssignOrg");
        this.userAutoAssignOrg = userAutoAssignOrg;
        return this;
    }

    public JsonSchemaGrafana withDataproxySendUserHeader(boolean dataproxySendUserHeader) {
        Utils.checkNotNull(dataproxySendUserHeader, "dataproxySendUserHeader");
        this.dataproxySendUserHeader = Optional.ofNullable(dataproxySendUserHeader);
        return this;
    }

    public JsonSchemaGrafana withDataproxySendUserHeader(Optional<? extends Boolean> dataproxySendUserHeader) {
        Utils.checkNotNull(dataproxySendUserHeader, "dataproxySendUserHeader");
        this.dataproxySendUserHeader = dataproxySendUserHeader;
        return this;
    }

    public JsonSchemaGrafana withPrivatelinkAccess(AllowAccessToSelectedServiceComponentsThroughPrivatelink privatelinkAccess) {
        Utils.checkNotNull(privatelinkAccess, "privatelinkAccess");
        this.privatelinkAccess = Optional.ofNullable(privatelinkAccess);
        return this;
    }

    public JsonSchemaGrafana withPrivatelinkAccess(Optional<? extends AllowAccessToSelectedServiceComponentsThroughPrivatelink> privatelinkAccess) {
        Utils.checkNotNull(privatelinkAccess, "privatelinkAccess");
        this.privatelinkAccess = privatelinkAccess;
        return this;
    }

    public JsonSchemaGrafana withGoogleAnalyticsUaId(String googleAnalyticsUaId) {
        Utils.checkNotNull(googleAnalyticsUaId, "googleAnalyticsUaId");
        this.googleAnalyticsUaId = Optional.ofNullable(googleAnalyticsUaId);
        return this;
    }

    public JsonSchemaGrafana withGoogleAnalyticsUaId(Optional<? extends String> googleAnalyticsUaId) {
        Utils.checkNotNull(googleAnalyticsUaId, "googleAnalyticsUaId");
        this.googleAnalyticsUaId = googleAnalyticsUaId;
        return this;
    }

    public JsonSchemaGrafana withDashboardsVersionsToKeep(long dashboardsVersionsToKeep) {
        Utils.checkNotNull(dashboardsVersionsToKeep, "dashboardsVersionsToKeep");
        this.dashboardsVersionsToKeep = Optional.ofNullable(dashboardsVersionsToKeep);
        return this;
    }

    public JsonSchemaGrafana withDashboardsVersionsToKeep(Optional<? extends Long> dashboardsVersionsToKeep) {
        Utils.checkNotNull(dashboardsVersionsToKeep, "dashboardsVersionsToKeep");
        this.dashboardsVersionsToKeep = dashboardsVersionsToKeep;
        return this;
    }

    public JsonSchemaGrafana withEditorsCanAdmin(boolean editorsCanAdmin) {
        Utils.checkNotNull(editorsCanAdmin, "editorsCanAdmin");
        this.editorsCanAdmin = Optional.ofNullable(editorsCanAdmin);
        return this;
    }

    public JsonSchemaGrafana withEditorsCanAdmin(Optional<? extends Boolean> editorsCanAdmin) {
        Utils.checkNotNull(editorsCanAdmin, "editorsCanAdmin");
        this.editorsCanAdmin = editorsCanAdmin;
        return this;
    }

    public JsonSchemaGrafana withSmtpServer(SMTPServerSettings smtpServer) {
        Utils.checkNotNull(smtpServer, "smtpServer");
        this.smtpServer = Optional.ofNullable(smtpServer);
        return this;
    }

    public JsonSchemaGrafana withSmtpServer(Optional<? extends SMTPServerSettings> smtpServer) {
        Utils.checkNotNull(smtpServer, "smtpServer");
        this.smtpServer = smtpServer;
        return this;
    }

    public JsonSchemaGrafana withAuthGitlab(GitLabAuthIntegration authGitlab) {
        Utils.checkNotNull(authGitlab, "authGitlab");
        this.authGitlab = Optional.ofNullable(authGitlab);
        return this;
    }

    public JsonSchemaGrafana withAuthGitlab(Optional<? extends GitLabAuthIntegration> authGitlab) {
        Utils.checkNotNull(authGitlab, "authGitlab");
        this.authGitlab = authGitlab;
        return this;
    }

    public JsonSchemaGrafana withAlertingNodataOrNullvalues(DefaultValueForNoDataOrNullValuesForNewAlertingRules alertingNodataOrNullvalues) {
        Utils.checkNotNull(alertingNodataOrNullvalues, "alertingNodataOrNullvalues");
        this.alertingNodataOrNullvalues = Optional.ofNullable(alertingNodataOrNullvalues);
        return this;
    }

    public JsonSchemaGrafana withAlertingNodataOrNullvalues(Optional<? extends DefaultValueForNoDataOrNullValuesForNewAlertingRules> alertingNodataOrNullvalues) {
        Utils.checkNotNull(alertingNodataOrNullvalues, "alertingNodataOrNullvalues");
        this.alertingNodataOrNullvalues = alertingNodataOrNullvalues;
        return this;
    }

    public JsonSchemaGrafana withAuthBasicEnabled(boolean authBasicEnabled) {
        Utils.checkNotNull(authBasicEnabled, "authBasicEnabled");
        this.authBasicEnabled = Optional.ofNullable(authBasicEnabled);
        return this;
    }

    public JsonSchemaGrafana withAuthBasicEnabled(Optional<? extends Boolean> authBasicEnabled) {
        Utils.checkNotNull(authBasicEnabled, "authBasicEnabled");
        this.authBasicEnabled = authBasicEnabled;
        return this;
    }

    public JsonSchemaGrafana withDateFormats(GrafanaDateFormatSpecifications dateFormats) {
        Utils.checkNotNull(dateFormats, "dateFormats");
        this.dateFormats = Optional.ofNullable(dateFormats);
        return this;
    }

    public JsonSchemaGrafana withDateFormats(Optional<? extends GrafanaDateFormatSpecifications> dateFormats) {
        Utils.checkNotNull(dateFormats, "dateFormats");
        this.dateFormats = dateFormats;
        return this;
    }

    public JsonSchemaGrafana withDisableGravatar(boolean disableGravatar) {
        Utils.checkNotNull(disableGravatar, "disableGravatar");
        this.disableGravatar = Optional.ofNullable(disableGravatar);
        return this;
    }

    public JsonSchemaGrafana withDisableGravatar(Optional<? extends Boolean> disableGravatar) {
        Utils.checkNotNull(disableGravatar, "disableGravatar");
        this.disableGravatar = disableGravatar;
        return this;
    }

    public JsonSchemaGrafana withUserAutoAssignOrgRole(SetRoleForNewSignupsDefaultsToViewer userAutoAssignOrgRole) {
        Utils.checkNotNull(userAutoAssignOrgRole, "userAutoAssignOrgRole");
        this.userAutoAssignOrgRole = Optional.ofNullable(userAutoAssignOrgRole);
        return this;
    }

    public JsonSchemaGrafana withUserAutoAssignOrgRole(Optional<? extends SetRoleForNewSignupsDefaultsToViewer> userAutoAssignOrgRole) {
        Utils.checkNotNull(userAutoAssignOrgRole, "userAutoAssignOrgRole");
        this.userAutoAssignOrgRole = userAutoAssignOrgRole;
        return this;
    }

    public JsonSchemaGrafana withDataproxyTimeout(long dataproxyTimeout) {
        Utils.checkNotNull(dataproxyTimeout, "dataproxyTimeout");
        this.dataproxyTimeout = Optional.ofNullable(dataproxyTimeout);
        return this;
    }

    public JsonSchemaGrafana withDataproxyTimeout(Optional<? extends Long> dataproxyTimeout) {
        Utils.checkNotNull(dataproxyTimeout, "dataproxyTimeout");
        this.dataproxyTimeout = dataproxyTimeout;
        return this;
    }

    public JsonSchemaGrafana withViewersCanEdit(boolean viewersCanEdit) {
        Utils.checkNotNull(viewersCanEdit, "viewersCanEdit");
        this.viewersCanEdit = Optional.ofNullable(viewersCanEdit);
        return this;
    }

    public JsonSchemaGrafana withViewersCanEdit(Optional<? extends Boolean> viewersCanEdit) {
        Utils.checkNotNull(viewersCanEdit, "viewersCanEdit");
        this.viewersCanEdit = viewersCanEdit;
        return this;
    }

    /**
     * Signed sequence of decimal numbers, followed by a unit suffix (ms, s, m, h, d), e.g. 30s, 1h
     */
    public JsonSchemaGrafana withDashboardsMinRefreshInterval(String dashboardsMinRefreshInterval) {
        Utils.checkNotNull(dashboardsMinRefreshInterval, "dashboardsMinRefreshInterval");
        this.dashboardsMinRefreshInterval = Optional.ofNullable(dashboardsMinRefreshInterval);
        return this;
    }

    /**
     * Signed sequence of decimal numbers, followed by a unit suffix (ms, s, m, h, d), e.g. 30s, 1h
     */
    public JsonSchemaGrafana withDashboardsMinRefreshInterval(Optional<? extends String> dashboardsMinRefreshInterval) {
        Utils.checkNotNull(dashboardsMinRefreshInterval, "dashboardsMinRefreshInterval");
        this.dashboardsMinRefreshInterval = dashboardsMinRefreshInterval;
        return this;
    }

    public JsonSchemaGrafana withAuthGoogle(GoogleAuthIntegration authGoogle) {
        Utils.checkNotNull(authGoogle, "authGoogle");
        this.authGoogle = Optional.ofNullable(authGoogle);
        return this;
    }

    public JsonSchemaGrafana withAuthGoogle(Optional<? extends GoogleAuthIntegration> authGoogle) {
        Utils.checkNotNull(authGoogle, "authGoogle");
        this.authGoogle = authGoogle;
        return this;
    }

    public JsonSchemaGrafana withOauthAllowInsecureEmailLookup(boolean oauthAllowInsecureEmailLookup) {
        Utils.checkNotNull(oauthAllowInsecureEmailLookup, "oauthAllowInsecureEmailLookup");
        this.oauthAllowInsecureEmailLookup = Optional.ofNullable(oauthAllowInsecureEmailLookup);
        return this;
    }

    public JsonSchemaGrafana withOauthAllowInsecureEmailLookup(Optional<? extends Boolean> oauthAllowInsecureEmailLookup) {
        Utils.checkNotNull(oauthAllowInsecureEmailLookup, "oauthAllowInsecureEmailLookup");
        this.oauthAllowInsecureEmailLookup = oauthAllowInsecureEmailLookup;
        return this;
    }

    public JsonSchemaGrafana withAlertingMaxAnnotationsToKeep(long alertingMaxAnnotationsToKeep) {
        Utils.checkNotNull(alertingMaxAnnotationsToKeep, "alertingMaxAnnotationsToKeep");
        this.alertingMaxAnnotationsToKeep = Optional.ofNullable(alertingMaxAnnotationsToKeep);
        return this;
    }

    public JsonSchemaGrafana withAlertingMaxAnnotationsToKeep(Optional<? extends Long> alertingMaxAnnotationsToKeep) {
        Utils.checkNotNull(alertingMaxAnnotationsToKeep, "alertingMaxAnnotationsToKeep");
        this.alertingMaxAnnotationsToKeep = alertingMaxAnnotationsToKeep;
        return this;
    }

    public JsonSchemaGrafana withAuthGenericOauth(GenericOAuthIntegration authGenericOauth) {
        Utils.checkNotNull(authGenericOauth, "authGenericOauth");
        this.authGenericOauth = Optional.ofNullable(authGenericOauth);
        return this;
    }

    public JsonSchemaGrafana withAuthGenericOauth(Optional<? extends GenericOAuthIntegration> authGenericOauth) {
        Utils.checkNotNull(authGenericOauth, "authGenericOauth");
        this.authGenericOauth = authGenericOauth;
        return this;
    }

    public JsonSchemaGrafana withAlertingErrorOrTimeout(DefaultErrorOrTimeoutSettingForNewAlertingRules alertingErrorOrTimeout) {
        Utils.checkNotNull(alertingErrorOrTimeout, "alertingErrorOrTimeout");
        this.alertingErrorOrTimeout = Optional.ofNullable(alertingErrorOrTimeout);
        return this;
    }

    public JsonSchemaGrafana withAlertingErrorOrTimeout(Optional<? extends DefaultErrorOrTimeoutSettingForNewAlertingRules> alertingErrorOrTimeout) {
        Utils.checkNotNull(alertingErrorOrTimeout, "alertingErrorOrTimeout");
        this.alertingErrorOrTimeout = alertingErrorOrTimeout;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        JsonSchemaGrafana other = (JsonSchemaGrafana) o;
        return 
            java.util.Objects.deepEquals(this.allowEmbedding, other.allowEmbedding) &&
            java.util.Objects.deepEquals(this.cookieSamesite, other.cookieSamesite) &&
            java.util.Objects.deepEquals(this.dashboardPreviewsEnabled, other.dashboardPreviewsEnabled) &&
            java.util.Objects.deepEquals(this.metricsEnabled, other.metricsEnabled) &&
            java.util.Objects.deepEquals(this.recoveryBasebackupName, other.recoveryBasebackupName) &&
            java.util.Objects.deepEquals(this.authAzuread, other.authAzuread) &&
            java.util.Objects.deepEquals(this.alertingEnabled, other.alertingEnabled) &&
            java.util.Objects.deepEquals(this.unifiedAlertingEnabled, other.unifiedAlertingEnabled) &&
            java.util.Objects.deepEquals(this.authGithub, other.authGithub) &&
            java.util.Objects.deepEquals(this.userAutoAssignOrg, other.userAutoAssignOrg) &&
            java.util.Objects.deepEquals(this.dataproxySendUserHeader, other.dataproxySendUserHeader) &&
            java.util.Objects.deepEquals(this.privatelinkAccess, other.privatelinkAccess) &&
            java.util.Objects.deepEquals(this.googleAnalyticsUaId, other.googleAnalyticsUaId) &&
            java.util.Objects.deepEquals(this.dashboardsVersionsToKeep, other.dashboardsVersionsToKeep) &&
            java.util.Objects.deepEquals(this.editorsCanAdmin, other.editorsCanAdmin) &&
            java.util.Objects.deepEquals(this.smtpServer, other.smtpServer) &&
            java.util.Objects.deepEquals(this.authGitlab, other.authGitlab) &&
            java.util.Objects.deepEquals(this.alertingNodataOrNullvalues, other.alertingNodataOrNullvalues) &&
            java.util.Objects.deepEquals(this.authBasicEnabled, other.authBasicEnabled) &&
            java.util.Objects.deepEquals(this.dateFormats, other.dateFormats) &&
            java.util.Objects.deepEquals(this.disableGravatar, other.disableGravatar) &&
            java.util.Objects.deepEquals(this.userAutoAssignOrgRole, other.userAutoAssignOrgRole) &&
            java.util.Objects.deepEquals(this.dataproxyTimeout, other.dataproxyTimeout) &&
            java.util.Objects.deepEquals(this.viewersCanEdit, other.viewersCanEdit) &&
            java.util.Objects.deepEquals(this.dashboardsMinRefreshInterval, other.dashboardsMinRefreshInterval) &&
            java.util.Objects.deepEquals(this.authGoogle, other.authGoogle) &&
            java.util.Objects.deepEquals(this.oauthAllowInsecureEmailLookup, other.oauthAllowInsecureEmailLookup) &&
            java.util.Objects.deepEquals(this.alertingMaxAnnotationsToKeep, other.alertingMaxAnnotationsToKeep) &&
            java.util.Objects.deepEquals(this.authGenericOauth, other.authGenericOauth) &&
            java.util.Objects.deepEquals(this.alertingErrorOrTimeout, other.alertingErrorOrTimeout);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            allowEmbedding,
            cookieSamesite,
            dashboardPreviewsEnabled,
            metricsEnabled,
            recoveryBasebackupName,
            authAzuread,
            alertingEnabled,
            unifiedAlertingEnabled,
            authGithub,
            userAutoAssignOrg,
            dataproxySendUserHeader,
            privatelinkAccess,
            googleAnalyticsUaId,
            dashboardsVersionsToKeep,
            editorsCanAdmin,
            smtpServer,
            authGitlab,
            alertingNodataOrNullvalues,
            authBasicEnabled,
            dateFormats,
            disableGravatar,
            userAutoAssignOrgRole,
            dataproxyTimeout,
            viewersCanEdit,
            dashboardsMinRefreshInterval,
            authGoogle,
            oauthAllowInsecureEmailLookup,
            alertingMaxAnnotationsToKeep,
            authGenericOauth,
            alertingErrorOrTimeout);
    }
    
    @Override
    public String toString() {
        return Utils.toString(JsonSchemaGrafana.class,
                "allowEmbedding", allowEmbedding,
                "cookieSamesite", cookieSamesite,
                "dashboardPreviewsEnabled", dashboardPreviewsEnabled,
                "metricsEnabled", metricsEnabled,
                "recoveryBasebackupName", recoveryBasebackupName,
                "authAzuread", authAzuread,
                "alertingEnabled", alertingEnabled,
                "unifiedAlertingEnabled", unifiedAlertingEnabled,
                "authGithub", authGithub,
                "userAutoAssignOrg", userAutoAssignOrg,
                "dataproxySendUserHeader", dataproxySendUserHeader,
                "privatelinkAccess", privatelinkAccess,
                "googleAnalyticsUaId", googleAnalyticsUaId,
                "dashboardsVersionsToKeep", dashboardsVersionsToKeep,
                "editorsCanAdmin", editorsCanAdmin,
                "smtpServer", smtpServer,
                "authGitlab", authGitlab,
                "alertingNodataOrNullvalues", alertingNodataOrNullvalues,
                "authBasicEnabled", authBasicEnabled,
                "dateFormats", dateFormats,
                "disableGravatar", disableGravatar,
                "userAutoAssignOrgRole", userAutoAssignOrgRole,
                "dataproxyTimeout", dataproxyTimeout,
                "viewersCanEdit", viewersCanEdit,
                "dashboardsMinRefreshInterval", dashboardsMinRefreshInterval,
                "authGoogle", authGoogle,
                "oauthAllowInsecureEmailLookup", oauthAllowInsecureEmailLookup,
                "alertingMaxAnnotationsToKeep", alertingMaxAnnotationsToKeep,
                "authGenericOauth", authGenericOauth,
                "alertingErrorOrTimeout", alertingErrorOrTimeout);
    }
    
    public final static class Builder {
 
        private Optional<? extends Boolean> allowEmbedding = Optional.empty();
 
        private Optional<? extends CookieSameSiteAttributeStrictPreventsSendingCookieForCrossSiteRequestsEffectivelyDisablingDirectLinkingFromOtherSitesToGrafanaLaxIsTheDefaultValue> cookieSamesite = Optional.empty();
 
        private Optional<? extends Boolean> dashboardPreviewsEnabled = Optional.empty();
 
        private Optional<? extends Boolean> metricsEnabled = Optional.empty();
 
        private Optional<? extends String> recoveryBasebackupName = Optional.empty();
 
        private Optional<? extends AzureADOAuthIntegration> authAzuread = Optional.empty();
 
        private Optional<? extends Boolean> alertingEnabled = Optional.empty();
 
        private Optional<? extends Boolean> unifiedAlertingEnabled = Optional.empty();
 
        private Optional<? extends GithubAuthIntegration> authGithub = Optional.empty();
 
        private Optional<? extends Boolean> userAutoAssignOrg = Optional.empty();
 
        private Optional<? extends Boolean> dataproxySendUserHeader = Optional.empty();
 
        private Optional<? extends AllowAccessToSelectedServiceComponentsThroughPrivatelink> privatelinkAccess = Optional.empty();
 
        private Optional<? extends String> googleAnalyticsUaId = Optional.empty();
 
        private Optional<? extends Long> dashboardsVersionsToKeep = Optional.empty();
 
        private Optional<? extends Boolean> editorsCanAdmin = Optional.empty();
 
        private Optional<? extends SMTPServerSettings> smtpServer = Optional.empty();
 
        private Optional<? extends GitLabAuthIntegration> authGitlab = Optional.empty();
 
        private Optional<? extends DefaultValueForNoDataOrNullValuesForNewAlertingRules> alertingNodataOrNullvalues = Optional.empty();
 
        private Optional<? extends Boolean> authBasicEnabled = Optional.empty();
 
        private Optional<? extends GrafanaDateFormatSpecifications> dateFormats = Optional.empty();
 
        private Optional<? extends Boolean> disableGravatar = Optional.empty();
 
        private Optional<? extends SetRoleForNewSignupsDefaultsToViewer> userAutoAssignOrgRole = Optional.empty();
 
        private Optional<? extends Long> dataproxyTimeout = Optional.empty();
 
        private Optional<? extends Boolean> viewersCanEdit = Optional.empty();
 
        private Optional<? extends String> dashboardsMinRefreshInterval = Optional.empty();
 
        private Optional<? extends GoogleAuthIntegration> authGoogle = Optional.empty();
 
        private Optional<? extends Boolean> oauthAllowInsecureEmailLookup = Optional.empty();
 
        private Optional<? extends Long> alertingMaxAnnotationsToKeep = Optional.empty();
 
        private Optional<? extends GenericOAuthIntegration> authGenericOauth = Optional.empty();
 
        private Optional<? extends DefaultErrorOrTimeoutSettingForNewAlertingRules> alertingErrorOrTimeout = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder allowEmbedding(boolean allowEmbedding) {
            Utils.checkNotNull(allowEmbedding, "allowEmbedding");
            this.allowEmbedding = Optional.ofNullable(allowEmbedding);
            return this;
        }

        public Builder allowEmbedding(Optional<? extends Boolean> allowEmbedding) {
            Utils.checkNotNull(allowEmbedding, "allowEmbedding");
            this.allowEmbedding = allowEmbedding;
            return this;
        }

        public Builder cookieSamesite(CookieSameSiteAttributeStrictPreventsSendingCookieForCrossSiteRequestsEffectivelyDisablingDirectLinkingFromOtherSitesToGrafanaLaxIsTheDefaultValue cookieSamesite) {
            Utils.checkNotNull(cookieSamesite, "cookieSamesite");
            this.cookieSamesite = Optional.ofNullable(cookieSamesite);
            return this;
        }

        public Builder cookieSamesite(Optional<? extends CookieSameSiteAttributeStrictPreventsSendingCookieForCrossSiteRequestsEffectivelyDisablingDirectLinkingFromOtherSitesToGrafanaLaxIsTheDefaultValue> cookieSamesite) {
            Utils.checkNotNull(cookieSamesite, "cookieSamesite");
            this.cookieSamesite = cookieSamesite;
            return this;
        }

        /**
         * This feature is new in Grafana 9 and is quite resource intensive. It may cause low-end plans to work more slowly while the dashboard previews are rendering.
         */
        public Builder dashboardPreviewsEnabled(boolean dashboardPreviewsEnabled) {
            Utils.checkNotNull(dashboardPreviewsEnabled, "dashboardPreviewsEnabled");
            this.dashboardPreviewsEnabled = Optional.ofNullable(dashboardPreviewsEnabled);
            return this;
        }

        /**
         * This feature is new in Grafana 9 and is quite resource intensive. It may cause low-end plans to work more slowly while the dashboard previews are rendering.
         */
        public Builder dashboardPreviewsEnabled(Optional<? extends Boolean> dashboardPreviewsEnabled) {
            Utils.checkNotNull(dashboardPreviewsEnabled, "dashboardPreviewsEnabled");
            this.dashboardPreviewsEnabled = dashboardPreviewsEnabled;
            return this;
        }

        public Builder metricsEnabled(boolean metricsEnabled) {
            Utils.checkNotNull(metricsEnabled, "metricsEnabled");
            this.metricsEnabled = Optional.ofNullable(metricsEnabled);
            return this;
        }

        public Builder metricsEnabled(Optional<? extends Boolean> metricsEnabled) {
            Utils.checkNotNull(metricsEnabled, "metricsEnabled");
            this.metricsEnabled = metricsEnabled;
            return this;
        }

        public Builder recoveryBasebackupName(String recoveryBasebackupName) {
            Utils.checkNotNull(recoveryBasebackupName, "recoveryBasebackupName");
            this.recoveryBasebackupName = Optional.ofNullable(recoveryBasebackupName);
            return this;
        }

        public Builder recoveryBasebackupName(Optional<? extends String> recoveryBasebackupName) {
            Utils.checkNotNull(recoveryBasebackupName, "recoveryBasebackupName");
            this.recoveryBasebackupName = recoveryBasebackupName;
            return this;
        }

        public Builder authAzuread(AzureADOAuthIntegration authAzuread) {
            Utils.checkNotNull(authAzuread, "authAzuread");
            this.authAzuread = Optional.ofNullable(authAzuread);
            return this;
        }

        public Builder authAzuread(Optional<? extends AzureADOAuthIntegration> authAzuread) {
            Utils.checkNotNull(authAzuread, "authAzuread");
            this.authAzuread = authAzuread;
            return this;
        }

        public Builder alertingEnabled(boolean alertingEnabled) {
            Utils.checkNotNull(alertingEnabled, "alertingEnabled");
            this.alertingEnabled = Optional.ofNullable(alertingEnabled);
            return this;
        }

        public Builder alertingEnabled(Optional<? extends Boolean> alertingEnabled) {
            Utils.checkNotNull(alertingEnabled, "alertingEnabled");
            this.alertingEnabled = alertingEnabled;
            return this;
        }

        public Builder unifiedAlertingEnabled(boolean unifiedAlertingEnabled) {
            Utils.checkNotNull(unifiedAlertingEnabled, "unifiedAlertingEnabled");
            this.unifiedAlertingEnabled = Optional.ofNullable(unifiedAlertingEnabled);
            return this;
        }

        public Builder unifiedAlertingEnabled(Optional<? extends Boolean> unifiedAlertingEnabled) {
            Utils.checkNotNull(unifiedAlertingEnabled, "unifiedAlertingEnabled");
            this.unifiedAlertingEnabled = unifiedAlertingEnabled;
            return this;
        }

        public Builder authGithub(GithubAuthIntegration authGithub) {
            Utils.checkNotNull(authGithub, "authGithub");
            this.authGithub = Optional.ofNullable(authGithub);
            return this;
        }

        public Builder authGithub(Optional<? extends GithubAuthIntegration> authGithub) {
            Utils.checkNotNull(authGithub, "authGithub");
            this.authGithub = authGithub;
            return this;
        }

        public Builder userAutoAssignOrg(boolean userAutoAssignOrg) {
            Utils.checkNotNull(userAutoAssignOrg, "userAutoAssignOrg");
            this.userAutoAssignOrg = Optional.ofNullable(userAutoAssignOrg);
            return this;
        }

        public Builder userAutoAssignOrg(Optional<? extends Boolean> userAutoAssignOrg) {
            Utils.checkNotNull(userAutoAssignOrg, "userAutoAssignOrg");
            this.userAutoAssignOrg = userAutoAssignOrg;
            return this;
        }

        public Builder dataproxySendUserHeader(boolean dataproxySendUserHeader) {
            Utils.checkNotNull(dataproxySendUserHeader, "dataproxySendUserHeader");
            this.dataproxySendUserHeader = Optional.ofNullable(dataproxySendUserHeader);
            return this;
        }

        public Builder dataproxySendUserHeader(Optional<? extends Boolean> dataproxySendUserHeader) {
            Utils.checkNotNull(dataproxySendUserHeader, "dataproxySendUserHeader");
            this.dataproxySendUserHeader = dataproxySendUserHeader;
            return this;
        }

        public Builder privatelinkAccess(AllowAccessToSelectedServiceComponentsThroughPrivatelink privatelinkAccess) {
            Utils.checkNotNull(privatelinkAccess, "privatelinkAccess");
            this.privatelinkAccess = Optional.ofNullable(privatelinkAccess);
            return this;
        }

        public Builder privatelinkAccess(Optional<? extends AllowAccessToSelectedServiceComponentsThroughPrivatelink> privatelinkAccess) {
            Utils.checkNotNull(privatelinkAccess, "privatelinkAccess");
            this.privatelinkAccess = privatelinkAccess;
            return this;
        }

        public Builder googleAnalyticsUaId(String googleAnalyticsUaId) {
            Utils.checkNotNull(googleAnalyticsUaId, "googleAnalyticsUaId");
            this.googleAnalyticsUaId = Optional.ofNullable(googleAnalyticsUaId);
            return this;
        }

        public Builder googleAnalyticsUaId(Optional<? extends String> googleAnalyticsUaId) {
            Utils.checkNotNull(googleAnalyticsUaId, "googleAnalyticsUaId");
            this.googleAnalyticsUaId = googleAnalyticsUaId;
            return this;
        }

        public Builder dashboardsVersionsToKeep(long dashboardsVersionsToKeep) {
            Utils.checkNotNull(dashboardsVersionsToKeep, "dashboardsVersionsToKeep");
            this.dashboardsVersionsToKeep = Optional.ofNullable(dashboardsVersionsToKeep);
            return this;
        }

        public Builder dashboardsVersionsToKeep(Optional<? extends Long> dashboardsVersionsToKeep) {
            Utils.checkNotNull(dashboardsVersionsToKeep, "dashboardsVersionsToKeep");
            this.dashboardsVersionsToKeep = dashboardsVersionsToKeep;
            return this;
        }

        public Builder editorsCanAdmin(boolean editorsCanAdmin) {
            Utils.checkNotNull(editorsCanAdmin, "editorsCanAdmin");
            this.editorsCanAdmin = Optional.ofNullable(editorsCanAdmin);
            return this;
        }

        public Builder editorsCanAdmin(Optional<? extends Boolean> editorsCanAdmin) {
            Utils.checkNotNull(editorsCanAdmin, "editorsCanAdmin");
            this.editorsCanAdmin = editorsCanAdmin;
            return this;
        }

        public Builder smtpServer(SMTPServerSettings smtpServer) {
            Utils.checkNotNull(smtpServer, "smtpServer");
            this.smtpServer = Optional.ofNullable(smtpServer);
            return this;
        }

        public Builder smtpServer(Optional<? extends SMTPServerSettings> smtpServer) {
            Utils.checkNotNull(smtpServer, "smtpServer");
            this.smtpServer = smtpServer;
            return this;
        }

        public Builder authGitlab(GitLabAuthIntegration authGitlab) {
            Utils.checkNotNull(authGitlab, "authGitlab");
            this.authGitlab = Optional.ofNullable(authGitlab);
            return this;
        }

        public Builder authGitlab(Optional<? extends GitLabAuthIntegration> authGitlab) {
            Utils.checkNotNull(authGitlab, "authGitlab");
            this.authGitlab = authGitlab;
            return this;
        }

        public Builder alertingNodataOrNullvalues(DefaultValueForNoDataOrNullValuesForNewAlertingRules alertingNodataOrNullvalues) {
            Utils.checkNotNull(alertingNodataOrNullvalues, "alertingNodataOrNullvalues");
            this.alertingNodataOrNullvalues = Optional.ofNullable(alertingNodataOrNullvalues);
            return this;
        }

        public Builder alertingNodataOrNullvalues(Optional<? extends DefaultValueForNoDataOrNullValuesForNewAlertingRules> alertingNodataOrNullvalues) {
            Utils.checkNotNull(alertingNodataOrNullvalues, "alertingNodataOrNullvalues");
            this.alertingNodataOrNullvalues = alertingNodataOrNullvalues;
            return this;
        }

        public Builder authBasicEnabled(boolean authBasicEnabled) {
            Utils.checkNotNull(authBasicEnabled, "authBasicEnabled");
            this.authBasicEnabled = Optional.ofNullable(authBasicEnabled);
            return this;
        }

        public Builder authBasicEnabled(Optional<? extends Boolean> authBasicEnabled) {
            Utils.checkNotNull(authBasicEnabled, "authBasicEnabled");
            this.authBasicEnabled = authBasicEnabled;
            return this;
        }

        public Builder dateFormats(GrafanaDateFormatSpecifications dateFormats) {
            Utils.checkNotNull(dateFormats, "dateFormats");
            this.dateFormats = Optional.ofNullable(dateFormats);
            return this;
        }

        public Builder dateFormats(Optional<? extends GrafanaDateFormatSpecifications> dateFormats) {
            Utils.checkNotNull(dateFormats, "dateFormats");
            this.dateFormats = dateFormats;
            return this;
        }

        public Builder disableGravatar(boolean disableGravatar) {
            Utils.checkNotNull(disableGravatar, "disableGravatar");
            this.disableGravatar = Optional.ofNullable(disableGravatar);
            return this;
        }

        public Builder disableGravatar(Optional<? extends Boolean> disableGravatar) {
            Utils.checkNotNull(disableGravatar, "disableGravatar");
            this.disableGravatar = disableGravatar;
            return this;
        }

        public Builder userAutoAssignOrgRole(SetRoleForNewSignupsDefaultsToViewer userAutoAssignOrgRole) {
            Utils.checkNotNull(userAutoAssignOrgRole, "userAutoAssignOrgRole");
            this.userAutoAssignOrgRole = Optional.ofNullable(userAutoAssignOrgRole);
            return this;
        }

        public Builder userAutoAssignOrgRole(Optional<? extends SetRoleForNewSignupsDefaultsToViewer> userAutoAssignOrgRole) {
            Utils.checkNotNull(userAutoAssignOrgRole, "userAutoAssignOrgRole");
            this.userAutoAssignOrgRole = userAutoAssignOrgRole;
            return this;
        }

        public Builder dataproxyTimeout(long dataproxyTimeout) {
            Utils.checkNotNull(dataproxyTimeout, "dataproxyTimeout");
            this.dataproxyTimeout = Optional.ofNullable(dataproxyTimeout);
            return this;
        }

        public Builder dataproxyTimeout(Optional<? extends Long> dataproxyTimeout) {
            Utils.checkNotNull(dataproxyTimeout, "dataproxyTimeout");
            this.dataproxyTimeout = dataproxyTimeout;
            return this;
        }

        public Builder viewersCanEdit(boolean viewersCanEdit) {
            Utils.checkNotNull(viewersCanEdit, "viewersCanEdit");
            this.viewersCanEdit = Optional.ofNullable(viewersCanEdit);
            return this;
        }

        public Builder viewersCanEdit(Optional<? extends Boolean> viewersCanEdit) {
            Utils.checkNotNull(viewersCanEdit, "viewersCanEdit");
            this.viewersCanEdit = viewersCanEdit;
            return this;
        }

        /**
         * Signed sequence of decimal numbers, followed by a unit suffix (ms, s, m, h, d), e.g. 30s, 1h
         */
        public Builder dashboardsMinRefreshInterval(String dashboardsMinRefreshInterval) {
            Utils.checkNotNull(dashboardsMinRefreshInterval, "dashboardsMinRefreshInterval");
            this.dashboardsMinRefreshInterval = Optional.ofNullable(dashboardsMinRefreshInterval);
            return this;
        }

        /**
         * Signed sequence of decimal numbers, followed by a unit suffix (ms, s, m, h, d), e.g. 30s, 1h
         */
        public Builder dashboardsMinRefreshInterval(Optional<? extends String> dashboardsMinRefreshInterval) {
            Utils.checkNotNull(dashboardsMinRefreshInterval, "dashboardsMinRefreshInterval");
            this.dashboardsMinRefreshInterval = dashboardsMinRefreshInterval;
            return this;
        }

        public Builder authGoogle(GoogleAuthIntegration authGoogle) {
            Utils.checkNotNull(authGoogle, "authGoogle");
            this.authGoogle = Optional.ofNullable(authGoogle);
            return this;
        }

        public Builder authGoogle(Optional<? extends GoogleAuthIntegration> authGoogle) {
            Utils.checkNotNull(authGoogle, "authGoogle");
            this.authGoogle = authGoogle;
            return this;
        }

        public Builder oauthAllowInsecureEmailLookup(boolean oauthAllowInsecureEmailLookup) {
            Utils.checkNotNull(oauthAllowInsecureEmailLookup, "oauthAllowInsecureEmailLookup");
            this.oauthAllowInsecureEmailLookup = Optional.ofNullable(oauthAllowInsecureEmailLookup);
            return this;
        }

        public Builder oauthAllowInsecureEmailLookup(Optional<? extends Boolean> oauthAllowInsecureEmailLookup) {
            Utils.checkNotNull(oauthAllowInsecureEmailLookup, "oauthAllowInsecureEmailLookup");
            this.oauthAllowInsecureEmailLookup = oauthAllowInsecureEmailLookup;
            return this;
        }

        public Builder alertingMaxAnnotationsToKeep(long alertingMaxAnnotationsToKeep) {
            Utils.checkNotNull(alertingMaxAnnotationsToKeep, "alertingMaxAnnotationsToKeep");
            this.alertingMaxAnnotationsToKeep = Optional.ofNullable(alertingMaxAnnotationsToKeep);
            return this;
        }

        public Builder alertingMaxAnnotationsToKeep(Optional<? extends Long> alertingMaxAnnotationsToKeep) {
            Utils.checkNotNull(alertingMaxAnnotationsToKeep, "alertingMaxAnnotationsToKeep");
            this.alertingMaxAnnotationsToKeep = alertingMaxAnnotationsToKeep;
            return this;
        }

        public Builder authGenericOauth(GenericOAuthIntegration authGenericOauth) {
            Utils.checkNotNull(authGenericOauth, "authGenericOauth");
            this.authGenericOauth = Optional.ofNullable(authGenericOauth);
            return this;
        }

        public Builder authGenericOauth(Optional<? extends GenericOAuthIntegration> authGenericOauth) {
            Utils.checkNotNull(authGenericOauth, "authGenericOauth");
            this.authGenericOauth = authGenericOauth;
            return this;
        }

        public Builder alertingErrorOrTimeout(DefaultErrorOrTimeoutSettingForNewAlertingRules alertingErrorOrTimeout) {
            Utils.checkNotNull(alertingErrorOrTimeout, "alertingErrorOrTimeout");
            this.alertingErrorOrTimeout = Optional.ofNullable(alertingErrorOrTimeout);
            return this;
        }

        public Builder alertingErrorOrTimeout(Optional<? extends DefaultErrorOrTimeoutSettingForNewAlertingRules> alertingErrorOrTimeout) {
            Utils.checkNotNull(alertingErrorOrTimeout, "alertingErrorOrTimeout");
            this.alertingErrorOrTimeout = alertingErrorOrTimeout;
            return this;
        }
        
        public JsonSchemaGrafana build() {
            return new JsonSchemaGrafana(
                allowEmbedding,
                cookieSamesite,
                dashboardPreviewsEnabled,
                metricsEnabled,
                recoveryBasebackupName,
                authAzuread,
                alertingEnabled,
                unifiedAlertingEnabled,
                authGithub,
                userAutoAssignOrg,
                dataproxySendUserHeader,
                privatelinkAccess,
                googleAnalyticsUaId,
                dashboardsVersionsToKeep,
                editorsCanAdmin,
                smtpServer,
                authGitlab,
                alertingNodataOrNullvalues,
                authBasicEnabled,
                dateFormats,
                disableGravatar,
                userAutoAssignOrgRole,
                dataproxyTimeout,
                viewersCanEdit,
                dashboardsMinRefreshInterval,
                authGoogle,
                oauthAllowInsecureEmailLookup,
                alertingMaxAnnotationsToKeep,
                authGenericOauth,
                alertingErrorOrTimeout);
        }
    }
}

