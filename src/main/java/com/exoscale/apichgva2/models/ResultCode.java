/*
 * ExoscalePublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.exoscale.apichgva2.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for ResultCode type.
 */
public class ResultCode {
    private String code;
    private String dbname;

    /**
     * Default constructor.
     */
    public ResultCode() {
    }

    /**
     * Initialization constructor.
     * @param  code  String value for code.
     * @param  dbname  String value for dbname.
     */
    public ResultCode(
            String code,
            String dbname) {
        this.code = code;
        this.dbname = dbname;
    }

    /**
     * Getter for Code.
     * @return Returns the String
     */
    @JsonGetter("code")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCode() {
        return code;
    }

    /**
     * Setter for Code.
     * @param code Value for String
     */
    @JsonSetter("code")
    public void setCode(String code) {
        this.code = code;
    }

    /**
     * Getter for Dbname.
     * @return Returns the String
     */
    @JsonGetter("dbname")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDbname() {
        return dbname;
    }

    /**
     * Setter for Dbname.
     * @param dbname Value for String
     */
    @JsonSetter("dbname")
    public void setDbname(String dbname) {
        this.dbname = dbname;
    }

    /**
     * Converts this ResultCode into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ResultCode [" + "code=" + code + ", dbname=" + dbname + "]";
    }

    /**
     * Builds a new {@link ResultCode.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ResultCode.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .code(getCode())
                .dbname(getDbname());
        return builder;
    }

    /**
     * Class to build instances of {@link ResultCode}.
     */
    public static class Builder {
        private String code;
        private String dbname;



        /**
         * Setter for code.
         * @param  code  String value for code.
         * @return Builder
         */
        public Builder code(String code) {
            this.code = code;
            return this;
        }

        /**
         * Setter for dbname.
         * @param  dbname  String value for dbname.
         * @return Builder
         */
        public Builder dbname(String dbname) {
            this.dbname = dbname;
            return this;
        }

        /**
         * Builds a new {@link ResultCode} object using the set fields.
         * @return {@link ResultCode}
         */
        public ResultCode build() {
            return new ResultCode(code, dbname);
        }
    }
}
