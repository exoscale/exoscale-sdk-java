/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.exoscale.api.models.operations;

import com.exoscale.api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;


public class CreateDbaasKafkaUserRequestBody {

    @JsonProperty("username")
    private String username;

    public CreateDbaasKafkaUserRequestBody(
            @JsonProperty("username") String username) {
        Utils.checkNotNull(username, "username");
        this.username = username;
    }

    public String username() {
        return username;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public CreateDbaasKafkaUserRequestBody withUsername(String username) {
        Utils.checkNotNull(username, "username");
        this.username = username;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CreateDbaasKafkaUserRequestBody other = (CreateDbaasKafkaUserRequestBody) o;
        return 
            java.util.Objects.deepEquals(this.username, other.username);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            username);
    }
    
    @Override
    public String toString() {
        return Utils.toString(CreateDbaasKafkaUserRequestBody.class,
                "username", username);
    }
    
    public final static class Builder {
 
        private String username;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder username(String username) {
            Utils.checkNotNull(username, "username");
            this.username = username;
            return this;
        }
        
        public CreateDbaasKafkaUserRequestBody build() {
            return new CreateDbaasKafkaUserRequestBody(
                username);
        }
    }
}

