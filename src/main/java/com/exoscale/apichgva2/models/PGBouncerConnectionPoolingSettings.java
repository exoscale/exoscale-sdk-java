/*
 * ExoscalePublicAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.exoscale.apichgva2.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for PGBouncerConnectionPoolingSettings type.
 */
public class PGBouncerConnectionPoolingSettings {
    private Integer minPoolSize;
    private List<EnumOfParametersToIgnoreWhenGivenInStartupPacketEnum> ignoreStartupParameters;
    private Integer serverLifetime;
    private EnumPgPoolModeEnum autodbPoolMode;
    private Integer serverIdleTimeout;
    private Integer autodbMaxDbConnections;
    private Boolean serverResetQueryAlways;
    private Integer autodbPoolSize;
    private Integer autodbIdleTimeout;

    /**
     * Default constructor.
     */
    public PGBouncerConnectionPoolingSettings() {
    }

    /**
     * Initialization constructor.
     * @param  minPoolSize  Integer value for minPoolSize.
     * @param  ignoreStartupParameters  List of EnumOfParametersToIgnoreWhenGivenInStartupPacketEnum
     *         value for ignoreStartupParameters.
     * @param  serverLifetime  Integer value for serverLifetime.
     * @param  autodbPoolMode  EnumPgPoolModeEnum value for autodbPoolMode.
     * @param  serverIdleTimeout  Integer value for serverIdleTimeout.
     * @param  autodbMaxDbConnections  Integer value for autodbMaxDbConnections.
     * @param  serverResetQueryAlways  Boolean value for serverResetQueryAlways.
     * @param  autodbPoolSize  Integer value for autodbPoolSize.
     * @param  autodbIdleTimeout  Integer value for autodbIdleTimeout.
     */
    public PGBouncerConnectionPoolingSettings(
            Integer minPoolSize,
            List<EnumOfParametersToIgnoreWhenGivenInStartupPacketEnum> ignoreStartupParameters,
            Integer serverLifetime,
            EnumPgPoolModeEnum autodbPoolMode,
            Integer serverIdleTimeout,
            Integer autodbMaxDbConnections,
            Boolean serverResetQueryAlways,
            Integer autodbPoolSize,
            Integer autodbIdleTimeout) {
        this.minPoolSize = minPoolSize;
        this.ignoreStartupParameters = ignoreStartupParameters;
        this.serverLifetime = serverLifetime;
        this.autodbPoolMode = autodbPoolMode;
        this.serverIdleTimeout = serverIdleTimeout;
        this.autodbMaxDbConnections = autodbMaxDbConnections;
        this.serverResetQueryAlways = serverResetQueryAlways;
        this.autodbPoolSize = autodbPoolSize;
        this.autodbIdleTimeout = autodbIdleTimeout;
    }

    /**
     * Getter for MinPoolSize.
     * @return Returns the Integer
     */
    @JsonGetter("min_pool_size")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getMinPoolSize() {
        return minPoolSize;
    }

    /**
     * Setter for MinPoolSize.
     * @param minPoolSize Value for Integer
     */
    @JsonSetter("min_pool_size")
    public void setMinPoolSize(Integer minPoolSize) {
        this.minPoolSize = minPoolSize;
    }

    /**
     * Getter for IgnoreStartupParameters.
     * @return Returns the List of EnumOfParametersToIgnoreWhenGivenInStartupPacketEnum
     */
    @JsonGetter("ignore_startup_parameters")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<EnumOfParametersToIgnoreWhenGivenInStartupPacketEnum> getIgnoreStartupParameters() {
        return ignoreStartupParameters;
    }

    /**
     * Setter for IgnoreStartupParameters.
     * @param ignoreStartupParameters Value for List of EnumOfParametersToIgnoreWhenGivenInStartupPacketEnum
     */
    @JsonSetter("ignore_startup_parameters")
    public void setIgnoreStartupParameters(List<EnumOfParametersToIgnoreWhenGivenInStartupPacketEnum> ignoreStartupParameters) {
        this.ignoreStartupParameters = ignoreStartupParameters;
    }

    /**
     * Getter for ServerLifetime.
     * @return Returns the Integer
     */
    @JsonGetter("server_lifetime")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getServerLifetime() {
        return serverLifetime;
    }

    /**
     * Setter for ServerLifetime.
     * @param serverLifetime Value for Integer
     */
    @JsonSetter("server_lifetime")
    public void setServerLifetime(Integer serverLifetime) {
        this.serverLifetime = serverLifetime;
    }

    /**
     * Getter for AutodbPoolMode.
     * @return Returns the EnumPgPoolModeEnum
     */
    @JsonGetter("autodb_pool_mode")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public EnumPgPoolModeEnum getAutodbPoolMode() {
        return autodbPoolMode;
    }

    /**
     * Setter for AutodbPoolMode.
     * @param autodbPoolMode Value for EnumPgPoolModeEnum
     */
    @JsonSetter("autodb_pool_mode")
    public void setAutodbPoolMode(EnumPgPoolModeEnum autodbPoolMode) {
        this.autodbPoolMode = autodbPoolMode;
    }

    /**
     * Getter for ServerIdleTimeout.
     * @return Returns the Integer
     */
    @JsonGetter("server_idle_timeout")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getServerIdleTimeout() {
        return serverIdleTimeout;
    }

    /**
     * Setter for ServerIdleTimeout.
     * @param serverIdleTimeout Value for Integer
     */
    @JsonSetter("server_idle_timeout")
    public void setServerIdleTimeout(Integer serverIdleTimeout) {
        this.serverIdleTimeout = serverIdleTimeout;
    }

    /**
     * Getter for AutodbMaxDbConnections.
     * @return Returns the Integer
     */
    @JsonGetter("autodb_max_db_connections")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getAutodbMaxDbConnections() {
        return autodbMaxDbConnections;
    }

    /**
     * Setter for AutodbMaxDbConnections.
     * @param autodbMaxDbConnections Value for Integer
     */
    @JsonSetter("autodb_max_db_connections")
    public void setAutodbMaxDbConnections(Integer autodbMaxDbConnections) {
        this.autodbMaxDbConnections = autodbMaxDbConnections;
    }

    /**
     * Getter for ServerResetQueryAlways.
     * @return Returns the Boolean
     */
    @JsonGetter("server_reset_query_always")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getServerResetQueryAlways() {
        return serverResetQueryAlways;
    }

    /**
     * Setter for ServerResetQueryAlways.
     * @param serverResetQueryAlways Value for Boolean
     */
    @JsonSetter("server_reset_query_always")
    public void setServerResetQueryAlways(Boolean serverResetQueryAlways) {
        this.serverResetQueryAlways = serverResetQueryAlways;
    }

    /**
     * Getter for AutodbPoolSize.
     * @return Returns the Integer
     */
    @JsonGetter("autodb_pool_size")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getAutodbPoolSize() {
        return autodbPoolSize;
    }

    /**
     * Setter for AutodbPoolSize.
     * @param autodbPoolSize Value for Integer
     */
    @JsonSetter("autodb_pool_size")
    public void setAutodbPoolSize(Integer autodbPoolSize) {
        this.autodbPoolSize = autodbPoolSize;
    }

    /**
     * Getter for AutodbIdleTimeout.
     * @return Returns the Integer
     */
    @JsonGetter("autodb_idle_timeout")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getAutodbIdleTimeout() {
        return autodbIdleTimeout;
    }

    /**
     * Setter for AutodbIdleTimeout.
     * @param autodbIdleTimeout Value for Integer
     */
    @JsonSetter("autodb_idle_timeout")
    public void setAutodbIdleTimeout(Integer autodbIdleTimeout) {
        this.autodbIdleTimeout = autodbIdleTimeout;
    }

    /**
     * Converts this PGBouncerConnectionPoolingSettings into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "PGBouncerConnectionPoolingSettings [" + "minPoolSize=" + minPoolSize
                + ", ignoreStartupParameters=" + ignoreStartupParameters + ", serverLifetime="
                + serverLifetime + ", autodbPoolMode=" + autodbPoolMode + ", serverIdleTimeout="
                + serverIdleTimeout + ", autodbMaxDbConnections=" + autodbMaxDbConnections
                + ", serverResetQueryAlways=" + serverResetQueryAlways + ", autodbPoolSize="
                + autodbPoolSize + ", autodbIdleTimeout=" + autodbIdleTimeout + "]";
    }

    /**
     * Builds a new {@link PGBouncerConnectionPoolingSettings.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link PGBouncerConnectionPoolingSettings.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .minPoolSize(getMinPoolSize())
                .ignoreStartupParameters(getIgnoreStartupParameters())
                .serverLifetime(getServerLifetime())
                .autodbPoolMode(getAutodbPoolMode())
                .serverIdleTimeout(getServerIdleTimeout())
                .autodbMaxDbConnections(getAutodbMaxDbConnections())
                .serverResetQueryAlways(getServerResetQueryAlways())
                .autodbPoolSize(getAutodbPoolSize())
                .autodbIdleTimeout(getAutodbIdleTimeout());
        return builder;
    }

    /**
     * Class to build instances of {@link PGBouncerConnectionPoolingSettings}.
     */
    public static class Builder {
        private Integer minPoolSize;
        private List<EnumOfParametersToIgnoreWhenGivenInStartupPacketEnum> ignoreStartupParameters;
        private Integer serverLifetime;
        private EnumPgPoolModeEnum autodbPoolMode;
        private Integer serverIdleTimeout;
        private Integer autodbMaxDbConnections;
        private Boolean serverResetQueryAlways;
        private Integer autodbPoolSize;
        private Integer autodbIdleTimeout;



        /**
         * Setter for minPoolSize.
         * @param  minPoolSize  Integer value for minPoolSize.
         * @return Builder
         */
        public Builder minPoolSize(Integer minPoolSize) {
            this.minPoolSize = minPoolSize;
            return this;
        }

        /**
         * Setter for ignoreStartupParameters.
         * @param  ignoreStartupParameters  List of
         *         EnumOfParametersToIgnoreWhenGivenInStartupPacketEnum value for
         *         ignoreStartupParameters.
         * @return Builder
         */
        public Builder ignoreStartupParameters(
                List<EnumOfParametersToIgnoreWhenGivenInStartupPacketEnum> ignoreStartupParameters) {
            this.ignoreStartupParameters = ignoreStartupParameters;
            return this;
        }

        /**
         * Setter for serverLifetime.
         * @param  serverLifetime  Integer value for serverLifetime.
         * @return Builder
         */
        public Builder serverLifetime(Integer serverLifetime) {
            this.serverLifetime = serverLifetime;
            return this;
        }

        /**
         * Setter for autodbPoolMode.
         * @param  autodbPoolMode  EnumPgPoolModeEnum value for autodbPoolMode.
         * @return Builder
         */
        public Builder autodbPoolMode(EnumPgPoolModeEnum autodbPoolMode) {
            this.autodbPoolMode = autodbPoolMode;
            return this;
        }

        /**
         * Setter for serverIdleTimeout.
         * @param  serverIdleTimeout  Integer value for serverIdleTimeout.
         * @return Builder
         */
        public Builder serverIdleTimeout(Integer serverIdleTimeout) {
            this.serverIdleTimeout = serverIdleTimeout;
            return this;
        }

        /**
         * Setter for autodbMaxDbConnections.
         * @param  autodbMaxDbConnections  Integer value for autodbMaxDbConnections.
         * @return Builder
         */
        public Builder autodbMaxDbConnections(Integer autodbMaxDbConnections) {
            this.autodbMaxDbConnections = autodbMaxDbConnections;
            return this;
        }

        /**
         * Setter for serverResetQueryAlways.
         * @param  serverResetQueryAlways  Boolean value for serverResetQueryAlways.
         * @return Builder
         */
        public Builder serverResetQueryAlways(Boolean serverResetQueryAlways) {
            this.serverResetQueryAlways = serverResetQueryAlways;
            return this;
        }

        /**
         * Setter for autodbPoolSize.
         * @param  autodbPoolSize  Integer value for autodbPoolSize.
         * @return Builder
         */
        public Builder autodbPoolSize(Integer autodbPoolSize) {
            this.autodbPoolSize = autodbPoolSize;
            return this;
        }

        /**
         * Setter for autodbIdleTimeout.
         * @param  autodbIdleTimeout  Integer value for autodbIdleTimeout.
         * @return Builder
         */
        public Builder autodbIdleTimeout(Integer autodbIdleTimeout) {
            this.autodbIdleTimeout = autodbIdleTimeout;
            return this;
        }

        /**
         * Builds a new {@link PGBouncerConnectionPoolingSettings} object using the set fields.
         * @return {@link PGBouncerConnectionPoolingSettings}
         */
        public PGBouncerConnectionPoolingSettings build() {
            return new PGBouncerConnectionPoolingSettings(minPoolSize, ignoreStartupParameters,
                    serverLifetime, autodbPoolMode, serverIdleTimeout, autodbMaxDbConnections,
                    serverResetQueryAlways, autodbPoolSize, autodbIdleTimeout);
        }
    }
}
