/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.exoscale.api.models.operations;

import com.exoscale.api.utils.SpeakeasyMetadata;
import com.exoscale.api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;


public class DeleteDbaasPgDatabaseRequest {

    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=service-name")
    private String serviceName;

    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=database-name")
    private String databaseName;

    public DeleteDbaasPgDatabaseRequest(
            String serviceName,
            String databaseName) {
        Utils.checkNotNull(serviceName, "serviceName");
        Utils.checkNotNull(databaseName, "databaseName");
        this.serviceName = serviceName;
        this.databaseName = databaseName;
    }

    public String serviceName() {
        return serviceName;
    }

    public String databaseName() {
        return databaseName;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public DeleteDbaasPgDatabaseRequest withServiceName(String serviceName) {
        Utils.checkNotNull(serviceName, "serviceName");
        this.serviceName = serviceName;
        return this;
    }

    public DeleteDbaasPgDatabaseRequest withDatabaseName(String databaseName) {
        Utils.checkNotNull(databaseName, "databaseName");
        this.databaseName = databaseName;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        DeleteDbaasPgDatabaseRequest other = (DeleteDbaasPgDatabaseRequest) o;
        return 
            java.util.Objects.deepEquals(this.serviceName, other.serviceName) &&
            java.util.Objects.deepEquals(this.databaseName, other.databaseName);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            serviceName,
            databaseName);
    }
    
    @Override
    public String toString() {
        return Utils.toString(DeleteDbaasPgDatabaseRequest.class,
                "serviceName", serviceName,
                "databaseName", databaseName);
    }
    
    public final static class Builder {
 
        private String serviceName;
 
        private String databaseName;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder serviceName(String serviceName) {
            Utils.checkNotNull(serviceName, "serviceName");
            this.serviceName = serviceName;
            return this;
        }

        public Builder databaseName(String databaseName) {
            Utils.checkNotNull(databaseName, "databaseName");
            this.databaseName = databaseName;
            return this;
        }
        
        public DeleteDbaasPgDatabaseRequest build() {
            return new DeleteDbaasPgDatabaseRequest(
                serviceName,
                databaseName);
        }
    }
}

