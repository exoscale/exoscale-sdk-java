/*
 * Exoscale Public API
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * OpenAPI spec version: 2.0.0
 * Contact: api@exoscale.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * ServicenameDatabaseBody
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-03-08T17:23:40.261901+01:00[Europe/Vienna]")

public class ServicenameDatabaseBody {
  @JsonProperty("database-name")
  private String databaseName = null;

  @JsonProperty("lc-collate")
  private String lcCollate = null;

  @JsonProperty("lc-ctype")
  private String lcCtype = null;

  public ServicenameDatabaseBody databaseName(String databaseName) {
    this.databaseName = databaseName;
    return this;
  }

   /**
   * Get databaseName
   * @return databaseName
  **/
  @Schema(required = true, description = "")
  public String getDatabaseName() {
    return databaseName;
  }

  public void setDatabaseName(String databaseName) {
    this.databaseName = databaseName;
  }

  public ServicenameDatabaseBody lcCollate(String lcCollate) {
    this.lcCollate = lcCollate;
    return this;
  }

   /**
   * Default string sort order (LC_COLLATE) for PostgreSQL database
   * @return lcCollate
  **/
  @Schema(description = "Default string sort order (LC_COLLATE) for PostgreSQL database")
  public String getLcCollate() {
    return lcCollate;
  }

  public void setLcCollate(String lcCollate) {
    this.lcCollate = lcCollate;
  }

  public ServicenameDatabaseBody lcCtype(String lcCtype) {
    this.lcCtype = lcCtype;
    return this;
  }

   /**
   * Default character classification (LC_CTYPE) for PostgreSQL database
   * @return lcCtype
  **/
  @Schema(description = "Default character classification (LC_CTYPE) for PostgreSQL database")
  public String getLcCtype() {
    return lcCtype;
  }

  public void setLcCtype(String lcCtype) {
    this.lcCtype = lcCtype;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServicenameDatabaseBody servicenameDatabaseBody = (ServicenameDatabaseBody) o;
    return Objects.equals(this.databaseName, servicenameDatabaseBody.databaseName) &&
        Objects.equals(this.lcCollate, servicenameDatabaseBody.lcCollate) &&
        Objects.equals(this.lcCtype, servicenameDatabaseBody.lcCtype);
  }

  @Override
  public int hashCode() {
    return Objects.hash(databaseName, lcCollate, lcCtype);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServicenameDatabaseBody {\n");
    
    sb.append("    databaseName: ").append(toIndentedString(databaseName)).append("\n");
    sb.append("    lcCollate: ").append(toIndentedString(lcCollate)).append("\n");
    sb.append("    lcCtype: ").append(toIndentedString(lcCtype)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
