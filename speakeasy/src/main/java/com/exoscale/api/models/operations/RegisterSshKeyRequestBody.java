/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.exoscale.api.models.operations;

import com.exoscale.api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;


public class RegisterSshKeyRequestBody {

    /**
     * SSH key name
     */
    @JsonProperty("name")
    private String name;

    /**
     * Public key value
     */
    @JsonProperty("public-key")
    private String publicKey;

    public RegisterSshKeyRequestBody(
            @JsonProperty("name") String name,
            @JsonProperty("public-key") String publicKey) {
        Utils.checkNotNull(name, "name");
        Utils.checkNotNull(publicKey, "publicKey");
        this.name = name;
        this.publicKey = publicKey;
    }

    /**
     * SSH key name
     */
    public String name() {
        return name;
    }

    /**
     * Public key value
     */
    public String publicKey() {
        return publicKey;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * SSH key name
     */
    public RegisterSshKeyRequestBody withName(String name) {
        Utils.checkNotNull(name, "name");
        this.name = name;
        return this;
    }

    /**
     * Public key value
     */
    public RegisterSshKeyRequestBody withPublicKey(String publicKey) {
        Utils.checkNotNull(publicKey, "publicKey");
        this.publicKey = publicKey;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        RegisterSshKeyRequestBody other = (RegisterSshKeyRequestBody) o;
        return 
            java.util.Objects.deepEquals(this.name, other.name) &&
            java.util.Objects.deepEquals(this.publicKey, other.publicKey);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            name,
            publicKey);
    }
    
    @Override
    public String toString() {
        return Utils.toString(RegisterSshKeyRequestBody.class,
                "name", name,
                "publicKey", publicKey);
    }
    
    public final static class Builder {
 
        private String name;
 
        private String publicKey;  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * SSH key name
         */
        public Builder name(String name) {
            Utils.checkNotNull(name, "name");
            this.name = name;
            return this;
        }

        /**
         * Public key value
         */
        public Builder publicKey(String publicKey) {
            Utils.checkNotNull(publicKey, "publicKey");
            this.publicKey = publicKey;
            return this;
        }
        
        public RegisterSshKeyRequestBody build() {
            return new RegisterSshKeyRequestBody(
                name,
                publicKey);
        }
    }
}

