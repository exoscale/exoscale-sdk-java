/*
 * Exoscale Public API
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@exoscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.exoscale.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * OpenSearch Dashboards settings
 */
@JsonPropertyOrder({
  UpdateDbaasServiceOpensearchRequestOpensearchDashboards.JSON_PROPERTY_OPENSEARCH_REQUEST_TIMEOUT,
  UpdateDbaasServiceOpensearchRequestOpensearchDashboards.JSON_PROPERTY_ENABLED,
  UpdateDbaasServiceOpensearchRequestOpensearchDashboards.JSON_PROPERTY_MAX_OLD_SPACE_SIZE
})
@JsonTypeName("update_dbaas_service_opensearch_request_opensearch_dashboards")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-06T21:01:33.231699+01:00[Europe/Vienna]")
public class UpdateDbaasServiceOpensearchRequestOpensearchDashboards {
  public static final String JSON_PROPERTY_OPENSEARCH_REQUEST_TIMEOUT = "opensearch-request-timeout";
  private Long opensearchRequestTimeout;

  public static final String JSON_PROPERTY_ENABLED = "enabled";
  private Boolean enabled;

  public static final String JSON_PROPERTY_MAX_OLD_SPACE_SIZE = "max-old-space-size";
  private Long maxOldSpaceSize;

  public UpdateDbaasServiceOpensearchRequestOpensearchDashboards() {
  }

  public UpdateDbaasServiceOpensearchRequestOpensearchDashboards opensearchRequestTimeout(Long opensearchRequestTimeout) {
    
    this.opensearchRequestTimeout = opensearchRequestTimeout;
    return this;
  }

   /**
   * Timeout in milliseconds for requests made by OpenSearch Dashboards towards OpenSearch (default: 30000)
   * minimum: 5000
   * maximum: 120000
   * @return opensearchRequestTimeout
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OPENSEARCH_REQUEST_TIMEOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getOpensearchRequestTimeout() {
    return opensearchRequestTimeout;
  }


  @JsonProperty(JSON_PROPERTY_OPENSEARCH_REQUEST_TIMEOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOpensearchRequestTimeout(Long opensearchRequestTimeout) {
    this.opensearchRequestTimeout = opensearchRequestTimeout;
  }


  public UpdateDbaasServiceOpensearchRequestOpensearchDashboards enabled(Boolean enabled) {
    
    this.enabled = enabled;
    return this;
  }

   /**
   * Enable or disable OpenSearch Dashboards (default: true)
   * @return enabled
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEnabled() {
    return enabled;
  }


  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public UpdateDbaasServiceOpensearchRequestOpensearchDashboards maxOldSpaceSize(Long maxOldSpaceSize) {
    
    this.maxOldSpaceSize = maxOldSpaceSize;
    return this;
  }

   /**
   * Limits the maximum amount of memory (in MiB) the OpenSearch Dashboards process can use. This sets the max_old_space_size option of the nodejs running the OpenSearch Dashboards. Note: the memory reserved by OpenSearch Dashboards is not available for OpenSearch. (default: 128)
   * minimum: 64
   * maximum: 1024
   * @return maxOldSpaceSize
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAX_OLD_SPACE_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getMaxOldSpaceSize() {
    return maxOldSpaceSize;
  }


  @JsonProperty(JSON_PROPERTY_MAX_OLD_SPACE_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaxOldSpaceSize(Long maxOldSpaceSize) {
    this.maxOldSpaceSize = maxOldSpaceSize;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateDbaasServiceOpensearchRequestOpensearchDashboards updateDbaasServiceOpensearchRequestOpensearchDashboards = (UpdateDbaasServiceOpensearchRequestOpensearchDashboards) o;
    return Objects.equals(this.opensearchRequestTimeout, updateDbaasServiceOpensearchRequestOpensearchDashboards.opensearchRequestTimeout) &&
        Objects.equals(this.enabled, updateDbaasServiceOpensearchRequestOpensearchDashboards.enabled) &&
        Objects.equals(this.maxOldSpaceSize, updateDbaasServiceOpensearchRequestOpensearchDashboards.maxOldSpaceSize);
  }

  @Override
  public int hashCode() {
    return Objects.hash(opensearchRequestTimeout, enabled, maxOldSpaceSize);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateDbaasServiceOpensearchRequestOpensearchDashboards {\n");
    sb.append("    opensearchRequestTimeout: ").append(toIndentedString(opensearchRequestTimeout)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    maxOldSpaceSize: ").append(toIndentedString(maxOldSpaceSize)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

